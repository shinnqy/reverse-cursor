{"latestAcceptedContentWithCurrentCursorPosition":"@Entry\n@Component\nstruct BasicComponent {\n  build() {\n    Column() {\n      Text('Hello, World!')\n    }\n  }\n}\n","ground_truth":{"relativePath":"entry/src/main/ets/utils/basicComponent.ets","lineNumberOneIndexed":1,"text":"@Entry\n@Component\nstruct BasicComponent {\nbuild() {\nColumn() {","shouldRetriggerCpp":true}}
{"latestAcceptedContentWithCurrentCursorPosition":"@Entry\n@Component\nstruct BasicComponent {\n  @State message: string = 'Hello, World!'\n\n  build() {\n    Column() {\n      Text(this.message)\n    }\n  }\n\n}","ground_truth":{"relativePath":"entry/src/main/ets/utils/basicComponent.ets","lineNumberOneIndexed":10,"text":"","shouldRetriggerCpp":true}}
{"latestAcceptedContentWithCurrentCursorPosition":"@Entry\n@Component\nstruct BasicComponent {\n  @State message: string = 'Hello, World!'\n\n  build() {\n    Column() {\n      Row() {\n        Text(this.message)\n      }\n      .width('100%')\n      .height(100)\n      .backgroundColor('#000000')\n      .justifyContent(FlexAlign.Center)\n      .alignItems(ItemAlign.Center)\n\n      Button() {\n        Text('Click me')\n      }\n      .width('100%')\n      .height(100)\n      .backgroundColor('#000000')\n      .justifyContent(FlexAlign.Center)\n      .alignItems(ItemAlign.Center)\n\n      Stack() {\n        Text('Hello, World!')\n        Text('Hello, World!')\n        Text('Hello, World!')\n      }\n      .width('100%')\n      .height(100)\n    }\n  }\n}\n\n@Component\nstruct ListExample {\n  @State items: string[] = ['Item 1', 'Item 2', 'Item 3']\n\n  build() {\n    List() {\n      Text('Hello, World!')\n    }\n  }\n}\n","ground_truth":{"relativePath":"entry/src/main/ets/utils/basicComponent.ets","lineNumberOneIndexed":43,"text":"Text('Hello, World!')\n}\n}\n}\n","shouldRetriggerCpp":true}}
{"latestAcceptedContentWithCurrentCursorPosition":"@Entry\n@Component\nstruct BasicComponent {\n  @State message: string = 'Hello, World!'\n\n  build() {\n    Column() {\n      Row() {\n        Text(this.message)\n      }\n      .width('100%')\n      .height(100)\n      .backgroundColor('#000000')\n      .justifyContent(FlexAlign.Center)\n      .alignItems(ItemAlign.Center)\n\n      Button() {\n        Text('Click me')\n      }\n      .width('100%')\n      .height(100)\n      .backgroundColor('#000000')\n      .justifyContent(FlexAlign.Center)\n      .alignItems(ItemAlign.Center)\n\n      Stack() {\n        Text('Hello, World!')\n        Text('Hello, World!')\n        Text('Hello, World!')\n      }\n      .width('100%')\n      .height(100)\n    }\n  }\n}\n\n@Component\nstruct ListExample {\n  @State items: string[] = ['Item 1', 'Item 2', 'Item 3']\n\n  build() {\n    List() {\n      ForEach(this.items, (item) => {\n        ListItem() {\n          Text(item)\n        }\n        .height(100)\n        .width('100%')\n        .backgroundColor('#000000')\n        .justifyContent(FlexAlign.Center)\n        .alignItems(ItemAlign.Center)\n      })\n    }\n    .width('100%')\n    .height(100)\n  }\n}\n\n@Component\nstruct FunctionComponent {\n  build() {\n    Column() {\n      Image($r('app.media.icon'))\n      .width(100)\n      .height(100)\n    }\n    .width('100%'<|current_cursor_position|>)\n    .height(100)\n  }\n}\n","ground_truth":{"relativePath":"entry/src/main/ets/utils/basicComponent.ets","lineNumberOneIndexed":63,"text":"Image($r('app.media.icon'))\n.width(100)\n.height(100)\n}\n.width('100%')","shouldRetriggerCpp":false}}
{"latestAcceptedContentWithCurrentCursorPosition":"@Entry\n@Component\nstruct BasicComponent {\n  @State message: string = 'Hello, World!'\n\n  build() {\n    Column() {\n      Row() {\n        Text(this.message)\n      }\n      .width('100%')\n      .height(100)\n      .backgroundColor('#000000')\n      .justifyContent(FlexAlign.Center)\n      .alignItems(ItemAlign.Center)\n\n      Button() {\n        Text('Click me')\n      }\n      .width('100%')\n      .height(100)\n      .backgroundColor('#000000')\n      .justifyContent(FlexAlign.Center)\n      .alignItems(ItemAlign.Center)\n\n      Stack() {\n        Text('Hello, World!')\n        Text('Hello, World!')\n        Text('Hello, World!')\n      }\n      .width('100%')\n      .height(100)\n    }\n  }\n}\n\n@Component\nstruct ListExample {\n  @State items: string[] = ['Item 1', 'Item 2', 'Item 3']\n\n  build() {\n    List() {\n      ForEach(this.items, (item) => {\n        ListItem() {\n          Text(item)\n        }\n        .height(100)\n        .width('100%')\n        .backgroundColor('#000000')\n        .justifyContent(FlexAlign.Center)\n        .alignItems(ItemAlign.Center)\n      })\n    }\n    .width('100%')\n    .height(100)\n  }\n}\n\n@Component\nstruct FunctionComponent {\n  build() {\n    Column() {\n      Image($r('app.media.icon'))\n      .width(100)\n      .height(100)\n    }\n    .width('100%')\n    .height(100<|current_cursor_position|>)\n  }\n}\n","ground_truth":{"relativePath":"entry/src/main/ets/utils/basicComponent.ets","lineNumberOneIndexed":63,"text":"Image($r('app.media.icon'))\n.width(100)\n.height(100)\n}\n.width('100%')","shouldRetriggerCpp":false}}
