[
  {
    "intent": "cursor_prediction",
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.286Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "entry/src/main/ets/utils/basicComponent.ets",
          "diffHistory": [
            "1+|@Entry\n2+|@Component\n3+|struct BasicComponent {\n4+|  @State message: string = 'Hello, World!'\n5+|}\n6+|\n",
            "4-|  @State message: string = 'Hello, World!'\n",
            "4-|  \n4+|  build() {\n5+|    Column() {\n6+|      Text('Hello, World!')\n7+|    }\n8+|  }\n",
            "6-|      Text('Hello, World!')\n6+|      Text(this.message)\n",
            "4+|  @State message: string = 'Hello, World!'\n5+|\n8+|      Row\n10+|      }\n",
            "8-|      Row\n9-|      Text(this.message)\n8+|      Row() {\n9+|        Text(this.message)\n11+|      .width('100%')\n12+|      .height(100)\n13+|      .backgroundColor('#000000')\n14+|      .justifyContent(FlexAlign.Center)\n15+|      .alignItems(ItemAlign.Center)\n16+|\n17+|      Stack() {\n18+|        Text('Hello, World!')\n19+|        Text('Hello, World!')\n20+|        Text('Hello, World!')\n21+|      }\n22+|      .width('100%')\n23+|      .height(100)\n",
            "16-|      \n17-|      \n17+|      Button() {\n18+|        Text('Click me')\n19+|      }\n20+|      .width('100%')\n21+|      .height(100)\n22+|      .backgroundColor('#000000')\n23+|      .justifyContent(FlexAlign.Center)\n24+|      .alignItems(ItemAlign.Center)\n25+|\n",
            "37+|@Entry\n38+|@Component\n39+|struct BasicComponent {\n40+|  @State message: string = 'Hello, World!'\n41+|  \n42+|}\n",
            "37-|@Entry\n",
            "38-|struct BasicComponent {\n38+|struct ListExample {\n",
            "41+|  build() {\n42+|    List() {\n43+|      Text('Hello, World!')\n44+|    }\n45+|  }\n",
            "39-|  @State message: string = 'Hello, World!'\n",
            "39-|  \n39+|  @State items: string[] = ['Item 1', 'Item 2', 'Item 3']\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "entry/src/main/ets/utils/basicComponent.ets",
        "contents": "@Entry\n@Component\nstruct BasicComponent {\n  @State message: string = 'Hello, World!'\n\n  build() {\n    Column() {\n      Row() {\n        Text(this.message)\n      }\n      .width('100%')\n      .height(100)\n      .backgroundColor('#000000')\n      .justifyContent(FlexAlign.Center)\n      .alignItems(ItemAlign.Center)\n\n      Button() {\n        Text('Click me')\n      }\n      .width('100%')\n      .height(100)\n      .backgroundColor('#000000')\n      .justifyContent(FlexAlign.Center)\n      .alignItems(ItemAlign.Center)\n\n      Stack() {\n        Text('Hello, World!')\n        Text('Hello, World!')\n        Text('Hello, World!')\n      }\n      .width('100%')\n      .height(100)\n    }\n  }\n}\n\n@Component\nstruct ListExample {\n  @State items: string[] = ['Item 1', 'Item 2', 'Item 3']\n\n  build() {\n    List() {\n      Text('Hello, World!')\n    }\n  }\n}\n",
        "cursorPosition": {
          "line": 42,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 59,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/DevEcoStudioProjects/MyApplication2"
      },
      "additionalFiles": [],
      "cppIntentInfo": {
        "source": "cursor_prediction"
      },
      "clientTime": 1742374197294,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "w7qbwqdnwclt3gk87qzzc",
      "timeSinceRequestStart": 9,
      "timeAtRequestSend": 1742374197294
    },
    "generateUuid": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.295Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.654Z"
  },
  {
    "cursorRetrieval": {
      "text": "  build() {\n    List() {\n      For",
      "rangeToReplace": {
        "startLineNumber": 41,
        "endLineNumberInclusive": 45
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.655Z"
  },
  {
    "cursorRetrieval": {
      "text": "Each"
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.669Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.677Z"
  },
  {
    "cursorRetrieval": {
      "text": "this"
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.687Z"
  },
  {
    "cursorRetrieval": {
      "text": ".items"
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.696Z"
  },
  {
    "cursorRetrieval": {
      "text": ","
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.704Z"
  },
  {
    "cursorRetrieval": {
      "text": " ("
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.714Z"
  },
  {
    "cursorRetrieval": {
      "text": "item"
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.728Z"
  },
  {
    "cursorRetrieval": {
      "text": ")"
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.735Z"
  },
  {
    "cursorRetrieval": {
      "text": " =>"
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.745Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.757Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n       "
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.775Z"
  },
  {
    "cursorRetrieval": {
      "text": " Text("
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.776Z"
  },
  {
    "cursorRetrieval": {
      "text": "item"
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.784Z"
  },
  {
    "cursorRetrieval": {
      "text": ")\n"
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.795Z"
  },
  {
    "cursorRetrieval": {
      "text": "     "
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.811Z"
  },
  {
    "cursorRetrieval": {
      "text": " })"
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.816Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.826Z"
  },
  {
    "cursorRetrieval": {
      "text": "   "
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.850Z"
  },
  {
    "cursorRetrieval": {
      "text": " }\n  }"
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.851Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.868Z"
  },
  {
    "firstChunkValue": "  build() {\n    List() {\n      ForEach(this.items, (item) => {\n        Text(item)\n      })\n    }\n  }",
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.869Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "  build() {\n    List() {\n      ForEach(this.items, (item) => {\n        Text(item)\n      })\n    }\n  }"
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.872Z"
  },
  {
    "action": "displayCppSuggestion",
    "suggestion": {
      "uniqueId": "0e88566b-6152-459b-b381-1e749631e2c0",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/basicComponent.ets",
        "external": "file:///Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/basicComponent.ets",
        "path": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/basicComponent.ets",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 59,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 59,
      "monotonicallyIncreasingSuggestionId": 51,
      "range": {
        "startLineNumber": 41,
        "startColumn": 1,
        "endLineNumberInclusive": 45,
        "endColumn": 4
      },
      "replaceText": "  build() {\n    List() {\n      ForEach(this.items, (item) => {\n        Text(item)\n      })\n    }\n  }",
      "originalText": "  build() {\n    List() {\n      Text('Hello, World!')\n    }\n  }",
      "startingSuggestionRange": {
        "startLineNumber": 41,
        "startColumn": 1,
        "endLineNumberInclusive": 45,
        "endColumn": 4
      },
      "diffText": "  build() {\n    List() {\n      ForEach(this.items, (item) => {\n        Text(item)\n      })\n    }\n  }",
      "fullOriginalText": "  build() {\n    List() {\n      Text('Hello, World!')\n    }\n  }",
      "suggestionTriggerTime": 1742374197248.5,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
      "selection": {
        "startLineNumber": 41,
        "startColumn": 1,
        "endLineNumberInclusive": 45,
        "endColumn": 4
      },
      "fusedCursorPredictionId": "c3572af8-1a7f-4d81-9ce3-8bdbbaa0cc34",
      "undoRedoGroup": {
        "id": 51,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.873Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.893Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "c3572af8-1a7f-4d81-9ce3-8bdbbaa0cc34",
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.905Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "  build() {\n    List() {\n      ForEach(this.items, (item) => {\n        Text(item)\n      })\n    }\n  }"
    },
    "fusedCursorPrediction": null,
    "predictionId": "c3572af8-1a7f-4d81-9ce3-8bdbbaa0cc34",
    "generationUUID": "746cdb68-01e1-49c0-8680-dd02e2c17e2e",
    "timestamp": "2025-03-19T08:49:57.905Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "c3572af8-1a7f-4d81-9ce3-8bdbbaa0cc34",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-19T08:49:57.906Z"
  }
]