{"line":4,"column":1}

-------------------------------[        currentFileContentsWithToFill        ]--------------------------------
function calculateSum(a: number, b: number) {
  return a + b;
}

i[ToFill]
const user = {
  name: "Alice",
  age: 30
};

if (user.age > 25 && (user.name === "Alice")) {
}

const message = `Hello, ${user.name}`;

const list = [1, 2, 3];

function printUser(user: { name: string }) {
  console.log(user.name);
}

interface Response<T> { data: T }
let res: Response<string> = { data: "OK" };
let value = res.data;

-------------------------------[               firstChunkValue               ]--------------------------------

interface User {
const user = {
  name: "Alice",
  age: 30
};
-------------------------------[       replacedContentsWithFirstChunk        ]--------------------------------
function calculateSum(a: number, b: number) {
  return a + b;
}

interface User {
const user = {
  name: "Alice",
  age: 30
};

if (user.age > 25 && (user.name === "Alice")) {
}

const message = `Hello, ${user.name}`;

const list = [1, 2, 3];

function printUser(user: { name: string }) {
  console.log(user.name);
}

interface Response<T> { data: T }
let res: Response<string> = { data: "OK" };
let value = res.data;

-------------------------------[                   fullText                  ]--------------------------------

interface User {
  name: string;
  age: number;
}

const user: User = {
  name: "Alice",
  age: 30
};
-------------------------------[         replacedContentsWithFullText         ]--------------------------------
function calculateSum(a: number, b: number) {
  return a + b;
}

interface User {
  name: string;
  age: number;
}

const user: User = {
if (user.age > 25 && (user.name === "Alice")) {
}

const message = `Hello, ${user.name}`;

const list = [1, 2, 3];

function printUser(user: { name: string }) {
  console.log(user.name);
}

interface Response<T> { data: T }
let res: Response<string> = { data: "OK" };
let value = res.data;

  name: "Alice",
  age: 30
};