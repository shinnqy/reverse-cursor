[
  {
    "intent": "typing",
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:07.916Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "entry/src/main/ets/utils/dynamicProp.ets",
          "diffHistory": [
            "1+|const user = {}\n",
            "2-|  \n3-|}\n2+|  name: \"Alice\",\n3+|  age: 30,\n4+|  address: {\n5+|},\n6+|};\n7+|\n8+|\n",
            "5-|},\n5+|    city: \"New York\",\n6+|    country: \"USA\",\n7+|  },\n10+|const greeting = `Hello, ${user.name}!`;\n",
            "1-|\n1+|interface User {\n2+|  name: string;\n3+|  age: number;\n4+|  address: {\n5+|    city: string;\n6+|    country: string;\n7+|  };\n8+|}\n",
            "1-|\n1+|interface Address {\n",
            "5-|  address: {\n5+|  address: Address;\n",
            "2+|  city: string;\n3+|  country: string;\n4+|}\n",
            "9-|    city: string;\n10-|    country: string;\n11-|  };\n13-|const user = {\n10+|const user: User = {\n",
            "21+|function getFullName(user: { firstName: string; lastName: string }) {\n22+|  return `${user.firstName} ${user.lastName}`;\n23+|}\n25+|const fullName = getFullName({ firstName: \"John\", lastName: \"Doe\" });\n26+|\n27+|\n28+|\n",
            "25-|const fullName = getFullName({ firstName: \"John\", lastName: \"Doe\" });\n",
            "25+|const currentUser = {\n26+|  firstName: \"John\",\n27+|  lastName: \"Doe\",\n28+|};\n30+|const fullName = getFullName(currentUser);\n",
            "30-|const fullName = getFullName(currentUser);\n30+|const fullName = `Full Name: ${getFullName(currentUser).toUpperCase()}`;\n",
            "21-|function getFullName(user: { firstName: string; lastName: string }) {\n21+|interface FullName {\n22+|function getFullName(user: { firstName: string; lastName: string }\n23+|function getFullName(user: FullName) {\n",
            "22-|function getFullName(user: { firstName: string; lastName: string }\n22+|function getFullName(user: { firstName: string; lastName: string ;\n23+|}\n",
            "22-|function getFullName(user: { firstName: string;\n22+|  firstName: string;\n",
            "29-|const currentUser = {\n29+|const currentUser: FullName = {\n",
            "36+|const p\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "entry/src/main/ets/utils/dynamicProp.ets",
        "contents": "interface Address {\n  city: string;\n  country: string;\n}\ninterface User {\n  name: string;\n  age: number;\n  address: Address;\n}\nconst user: User = {\n  name: \"Alice\",\n  age: 30,\n  address: {\n    city: \"New York\",\n    country: \"USA\",\n  },\n};\n\nconst greeting = `Hello, ${user.name}!`;\n\ninterface FullName {\n  firstName: string;\n  lastName: string;\n}\nfunction getFullName(user: FullName) {\n  return `${user.firstName} ${user.lastName}`;\n}\n\nconst currentUser: FullName = {\n  firstName: \"John\",\n  lastName: \"Doe\",\n};\n\nconst fullName = `Full Name: ${getFullName(currentUser).toUpperCase()}`;\n\nconst p\n\n\n",
        "cursorPosition": {
          "line": 35,
          "column": 7
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 209,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/DevEcoStudioProjects/MyApplication2"
      },
      "additionalFiles": [],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1742475667958,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "w7qbwqdnwclt3gk87qzzc",
      "timeSinceRequestStart": 51,
      "timeAtRequestSend": 1742475667958
    },
    "generateUuid": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:07.959Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nconst fullName = `Full Name: ${getFullName(currentUser).toUpperCase()}`;\n\nconst person",
      "rangeToReplace": {
        "startLineNumber": 33,
        "endLineNumberInclusive": 39
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.313Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.324Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.341Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.351Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n  name"
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.363Z"
  },
  {
    "cursorRetrieval": {
      "text": ": \""
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.373Z"
  },
  {
    "cursorRetrieval": {
      "text": "John"
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.383Z"
  },
  {
    "cursorRetrieval": {
      "text": "\",\n  age"
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.394Z"
  },
  {
    "cursorRetrieval": {
      "text": ": "
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.404Z"
  },
  {
    "cursorRetrieval": {
      "text": "3"
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.415Z"
  },
  {
    "cursorRetrieval": {
      "text": "0,\n "
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.427Z"
  },
  {
    "cursorRetrieval": {
      "text": " address"
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.436Z"
  },
  {
    "cursorRetrieval": {
      "text": ": {"
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.452Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.459Z"
  },
  {
    "cursorRetrieval": {
      "text": "   "
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.471Z"
  },
  {
    "cursorRetrieval": {
      "text": " city: \"New York\",\n   "
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.484Z"
  },
  {
    "cursorRetrieval": {
      "text": " country"
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.490Z"
  },
  {
    "cursorRetrieval": {
      "text": ": \""
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.501Z"
  },
  {
    "cursorRetrieval": {
      "text": "USA"
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.510Z"
  },
  {
    "cursorRetrieval": {
      "text": "\",\n "
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.520Z"
  },
  {
    "cursorRetrieval": {
      "text": " },"
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.531Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n};"
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.539Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n\n"
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.547Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.557Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.558Z"
  },
  {
    "firstChunkValue": "\nconst fullName = `Full Name: ${getFullName(currentUser).toUpperCase()}`;\n\nconst person = {\n  name: \"John\",\n  age: 30,\n  address: {\n    city: \"New York\",\n    country: \"USA\",\n  },\n};\n\n",
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.561Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "\nconst fullName = `Full Name: ${getFullName(currentUser).toUpperCase()}`;\n\nconst person = {\n  name: \"John\",\n  age: 30,\n  address: {\n    city: \"New York\",\n    country: \"USA\",\n  },\n};\n\n"
    },
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.562Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "5d15450f-411b-48c9-ad90-8bec26870e70",
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.566Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "\nconst fullName = `Full Name: ${getFullName(currentUser).toUpperCase()}`;\n\nconst person = {\n  name: \"John\",\n  age: 30,\n  address: {\n    city: \"New York\",\n    country: \"USA\",\n  },\n};\n\n"
    },
    "fusedCursorPrediction": null,
    "predictionId": "5d15450f-411b-48c9-ad90-8bec26870e70",
    "generationUUID": "b47321af-9ce4-4239-874c-e376aa66852d",
    "timestamp": "2025-03-20T13:01:08.566Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "5d15450f-411b-48c9-ad90-8bec26870e70",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-20T13:01:08.566Z"
  }
]