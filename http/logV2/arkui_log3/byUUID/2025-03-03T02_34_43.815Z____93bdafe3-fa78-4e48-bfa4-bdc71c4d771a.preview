{"line":21,"column":8}

======== currentFileContentsWithToFill ========
@Entry
@Component
struct Index {
  @State message: string = 'Hello World';

  build() {
    RelativeContainer() {
      Text(this.message)
        .id('HelloWorld')
        .fontSize(50)
        .fontWeight(FontWeight.Bold)
        .alignRules({
          center: { anchor: '__container__', align: VerticalAlign.Center },
          middle: { anchor: '__container__', align: HorizontalAlign.Center }
        })

      Button() {
        Text('Click me')
      }
      .onClick(() => {
        this.message = 'Hello World';
      })[ToFill]
    }
    .height('100%')
    .width('100%')
  }
}
======== firstChunkValue ========
        this.message = 'Hello World';
      })
    }
    .height('100%')
    .width('100%')
======== fusedCursorPrediction ========
lineNumberOneIndexed: 18

text: 
Text('Click me')
}
.onClick(() => {
this.message = 'Hello World';
})

shouldRetriggerCpp: true
======== displayedFusedCursorPrediction ========
lineNumberOneIndexed: 18

text: 
Text('Click me')
}
.onClick(() => {
this.message = 'Hello World';
})

shouldRetriggerCpp: true