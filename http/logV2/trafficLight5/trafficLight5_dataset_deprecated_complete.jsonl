{"diffHistory":[{"fileName":"src/components/test2.ts","diffHistory":["1-|function Test2() {\n2-|  return <div>Test2</div>;\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  }\n5-|export default Test2;\n","1+|enum TrafficLight {\n2+|  Red = 'red',\n3+|  Yellow = 'yellow',\n4+|  Green = 'green',\n5+|}\n6+|\n","11+|  if (light === TrafficLight.Green) {\n12+|    return TrafficLight.Yellow;\n13+|  }\n14+|  if (light === TrafficLight.Yellow) {\n15+|    return TrafficLight.Red;\n16+|  }\n","11-|  if (light === TrafficLight.Green) {\n12-|    return TrafficLight.Yellow;\n13-|  }\n14-|  if (light === TrafficLight.Yellow) {\n15-|    return TrafficLight.Red;\n16-|  }\n","10-|  }\n11-|  \n12-|  \n10+|  } \n11+|\n12+|  console.log('light', light);\n","10-|  } \n10+|  } else if (light === TrafficLight.Green) {\n","11-|  console.log('light', light);\n11+|  console.log('light', light).Red;\n12+|  }\n15+|changeLight(TrafficLight.Red);\n","11-|  console.log('light', light).Red;\n11+|  console.log('light', llow) {\n12+|    return TrafficLight.Red;\n","11-|  console.log('light', llow) {\n11+|  conw;\n12+|  } else if (light === TrafficLight.Yellow) {\n","11-|  conw;\n11+|    return TrafficLight.Yellow;\n","13-|    return TrafficLight.Red;\n14-|  }\n13+|    return TrafficLight;\n17-|changeLight(TrafficLight.Red);\n","11-|    return TrafficLight.Yellow;\n12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight;\n11+|  console.log('light', light);\n","11-|  console.log('light', light);\n11+|  console.log('light', light).Red;\n12+|  }\n15+|changeLight(TrafficLight.Red);\n","11-|  console.log('light', light).Red;\n11+|  console.log('light', llow) {\n12+|    return TrafficLight.Red;\n","11-|  console.log('light', llow) {\n11+|  conw;\n12+|  } else if (light === TrafficLight.Yellow) {\n","11-|  conw;\n11+|    return TrafficLight.Yellow;\n","13-|    return TrafficLight.Red;\n14-|  }\n13+|    return TrafficLight;\n17-|changeLight(TrafficLight.Red);\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight;\n10+|  }\n11+|  console.log('light', light);\n","10-|  }\n10+|  } else if (light === TrafficLight.Green) {\n","11-|  console.log('light', light);\n11+|  console.log('light', light).Red;\n12+|  }\n15+|changeLight(TrafficLight.Red);\n","11-|  console.log('light', light).Red;\n11+|  console.log('light', llow) {\n12+|    return TrafficLight.Red;\n","11-|  console.log('light', llow) {\n11+|  conw;\n12+|  } else if (light === TrafficLight.Yellow) {\n","11-|  conw;\n11+|    return TrafficLight.Yellow;\n","13-|    return TrafficLight.Red;\n14-|  }\n13+|    return TrafficLight;\n17-|changeLight(TrafficLight.Red);\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight;\n10+|  }\n11+|  console.log('light', light);\n","10-|  }\n10+|  } else if (light === TrafficLight.Green) {\n","11-|  console.log('light', light);\n11+|  console.log('light', light).Red;\n12+|  }\n15+|changeLight(TrafficLight.Red);\n","11-|  console.log('light', light).Red;\n11+|  console.log('light', llow) {\n12+|    return TrafficLight.Red;\n","11-|  console.log('light', llow) {\n11+|  conw;\n12+|  } else if (light === TrafficLight.Yellow) {\n","11-|  conw;\n11+|    return TrafficLight.Yellow;\n","13-|    return TrafficLight.Red;\n14-|  }\n13+|    return TrafficLight;\n17-|changeLight(TrafficLight.Red);\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight;\n10+|  }\n11+|  console.log('light', light);\n","10-|  }\n10+|  } \n"],"diffHistoryTimestamps":[]}],"new_window_content":"enum TrafficLight {\n  Red = 'red',\n  Yellow = 'yellow',\n  Green = 'green',\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    return TrafficLight.Green;\n  } [ToFill]\n  console.log('light', light);\n}\n\n","ground_truth":"enum TrafficLight {\n  Red = 'red',\n  Yellow = 'yellow',\n  Green = 'green',\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    return TrafficLight.Green;\n  } else if (light === TrafficLight.Green) {\n  console.log('light', light);\n}\n\n"}
