You're an expert in ArkTS. Your task is to help the user update the code around current cursor position.

## Recent Actions
Here is what the user has been doing from the earliest to the latest:

File: entry/src/main/ets/utils/builtInAPI.ets
added the code `let deviceModel = deviceInfo.deviceModel;` in line 102
added the code `let osVersion = deviceInfo.osFullName;` in line 103

added the code `import logger from "@ohos.logger";` in line 5

added the code `logger.info(`Device Model: ${deviceModel}");` in line 106
added the code `` in line 107
added the code `let batteryInfo = deviceInfo.getBatteryInfo();` in line 108
added the code `let batteryLevel = batteryInfo.batteryLevel;` in line 109
added the code `let isCharging = batteryInfo.isCharging;` in line 110

deleted the code `logger.info(`Device Model: ${deviceModel}");` in line 106
added the code `logger.info(`Device Model: ${deviceModel}"`);` in line 106
added the code `logger.info(`OS Version: ${osVersion}`);` in line 107

deleted the code `logger.info(`Device Model: ${deviceModel}"`);` in line 106
added the code `logger.info(`Device Model: ${deviceModel}`);` in line 106

added the code `import prompt from "@ohos.prompt";` in line 6
deleted the code `logger.info(`OS Version: ${osVersion}`);` in line 107
deleted the code `let batteryInfo = deviceInfo.getBatteryInfo();` in line 109
deleted the code `let batteryLevel = batteryInfo.batteryLevel;` in line 110
deleted the code `let isCharging = batteryInfo.isCharging;` in line 111

added the code `prompt.showToast({` in line 109
added the code `  message: "Hello, World!",` in line 110
added the code `  duration: 3000,` in line 111
added the code `});` in line 112
added the code `` in line 113
added the code `prompt.showDialog({` in line 114
added the code `` in line 115

deleted the code `prompt.showDialog({` in line 114

added the code `let timerId = setInterval(() => {` in line 114
added the code `  console.log("Timer event");` in line 115
added the code `}, 1000);` in line 116
added the code `clearInterval(timerId);` in line 118
-----------------------------------------------

File: entry/src/main/ets/utils/errorHandling.ets
deleted the code `` in line 1
added the code `function calculateSum(a: number, b: number {` in line 1
added the code `  return a + b;` in line 2
added the code `  ` in line 3
added the code `  ` in line 4

deleted the code `  ` in line 3
deleted the code `  ` in line 4
added the code `}` in line 3
added the code `` in line 4
added the code `` in line 5
added the code `const user = {};` in line 6
added the code `` in line 7

deleted the code `const user = {};` in line 6
added the code `const user = {` in line 6
added the code `  name: "John",` in line 7
added the code `  age: 30,` in line 8
added the code `  email: "john@example.com",` in line 9
added the code `};` in line 10

added the code `// 测试点：输入 `a.` 应提示 `.toFixed()`` in line 4
added the code `// 测试点：输入 `b.` 应提示 `.toExponential()`` in line 5
deleted the code `` in line 5
added the code `// 场景1.2：对象字面量缺少逗号` in line 7
deleted the code `  name: "John",` in line 7
deleted the code `  age: 30,` in line 8
deleted the code `  email: "john@example.com",` in line 9
added the code `  name: "Alice"` in line 9
added the code `  age: 30 // 缺少逗号` in line 10
added the code `// 测试点：输入 `user.` 应提示 `name` 和 `age`（IDE应自动容错）` in line 12
added the code `// 场景1.3：条件语句缺少右括号` in line 14
added the code `if (user.age > 25 && (user.name === "Alice" {` in line 15
added the code `  // 输入 `user.` 应提示 `name`/`age`` in line 16
added the code `}` in line 17
added the code `` in line 18
added the code `// 场景1.4：未闭合的模板字符串` in line 19
added the code `const message = `Hello, ${user.name; // 缺少反引号 `` in line 20
added the code `// 测试点：输入 `user.` 仍应提示属性` in line 21
added the code `` in line 22
added the code `// 场景1.5：错误的符号使用（用中文符号）` in line 23
added the code `const list = [1, 2, 3； // 错误的分号 `；`` in line 24
added the code `// 测试点：输入 `list.` 应提示数组方法` in line 25
added the code `` in line 26
added the code `// 场景1.6：函数体未闭合` in line 27
added the code `function printUser(user: { name: string }) {` in line 28
added the code `  console.log(user.name);` in line 29
added the code `// 缺少右大括号 `}`` in line 30
added the code `// 测试点：后续代码中输入 `user.` 仍应提示属性` in line 31
added the code `` in line 32
added the code `// 场景1.7：泛型参数错误` in line 33
added the code `interface Response<T> { data: T }` in line 34
added the code `let res: Response<string> = { data: "OK" };` in line 35
added the code `let value = res.dat; // 拼写错误 `dat`` in line 36
added the code `// 测试点：输入 `res.` 应提示 `data`（即使上下文存在拼写错误）` in line 37

deleted the code `// 测试点：输入 `a.` 应提示 `.toFixed()`` in line 4

deleted the code `// 测试点：输入 `b.` 应提示 `.toExponential()`` in line 4

deleted the code `// 场景1.2：对象字面量缺少逗号` in line 5

deleted the code `// 测试点：输入 `user.` 应提示 `name` 和 `age`（IDE应自动容错）` in line 9

deleted the code `  // 输入 `user.` 应提示 `name`/`age`` in line 12

deleted the code `// 场景1.3：条件语句缺少右括号` in line 10

deleted the code `// 测试点：输入 `user.` 仍应提示属性` in line 15

deleted the code `// 场景1.4：未闭合的模板字符串` in line 13

deleted the code `const list = [1, 2, 3； // 错误的分号 `；`` in line 16
deleted the code `// 测试点：输入 `list.` 应提示数组方法` in line 17
added the code `const list = [1, 2, 3；; // 错误的分号 `；`` in line 16

deleted the code `const list = [1, 2, 3；; // 错误的分号 `；`` in line 16
added the code `const list = [1, 2, 3; // 错误的分号 `；`` in line 16

deleted the code `// 场景1.5：错误的符号使用（用中文符号）` in line 15

deleted the code `// 缺少右大括号 `}`` in line 20
added the code `}` in line 20

deleted the code `// 场景1.6：函数体未闭合` in line 17

deleted the code `// 测试点：输入 `res.` 应提示 `data`（即使上下文存在拼写错误）` in line 26

deleted the code `// 测试点：后续代码中输入 `user.` 仍应提示属性` in line 20
deleted the code `// 场景1.7：泛型参数错误` in line 22

deleted the code `  age: 30 // 缺少逗号` in line 7
added the code `  age: 30` in line 7

deleted the code `const list = [1, 2, 3; // 错误的分号 `；`` in line 15
added the code `const list = [1, 2, 3;` in line 15

deleted the code `const message = `Hello, ${user.name; // 缺少反引号 `` in line 13
added the code `const message = `Hello, ${user.name;` in line 13

deleted the code `let value = res.dat; // 拼写错误 `dat`` in line 23
added the code `let value = res.dat;` in line 23

deleted the code `function calculateSum(a: number, b: number {` in line 1
added the code `function calculateSum(a: number, b: number) {` in line 1

deleted the code `if (user.age > 25 && (user.name === "Alice" {` in line 10
added the code `if (user.age > 25 && (user.name === "Alice")) {` in line 10

deleted the code `const list = [1, 2, 3;` in line 15
added the code `const list = [1, 2, 3];` in line 15

deleted the code `const message = `Hello, ${user.name;` in line 13
added the code `const message = `Hello, ${user.name}`;` in line 13

deleted the code `let value = res.dat;` in line 23
added the code `let value = res.data;` in line 23

deleted the code `  name: "Alice"` in line 6
added the code `  name: "Alice",` in line 6

deleted the code `const user = {` in line 5
added the code `interface User {` in line 5
added the code `  name: string;` in line 6
added the code `  age: number;` in line 7
added the code `}` in line 8
added the code `` in line 9
added the code `const user: User = {` in line 10

deleted the code `function printUser(user: { name: string }) {` in line 22
added the code `interface PrintUser {` in line 22
added the code `  name: string;` in line 23
added the code `}` in line 24
added the code `function printUser(user: PrintUser) {` in line 25
-----------------------------------------------

File: entry/src/main/ets/utils/errorHandling2.ets
deleted the code `// 场景2.1：基础try/catch` in line 1

deleted the code `  JSON.parse("{ invalid JSON }"); // 强制抛出异常` in line 2
added the code `  JSON.parse("{ invalid JSON }");` in line 2
deleted the code `  // 输入 `error.` 应提示 `.message`/`.stack`` in line 4

deleted the code `// 场景2.2：自定义错误类型` in line 7

deleted the code `    console.log(error.statusCode); // 输入 `error.` 应提示 `.statusCode`` in line 20
added the code `    console.log(error.statusCode);` in line 20

deleted the code `  // 输入 `error.` 应提示 `.statusCode`（需IDE识别子类）` in line 18

deleted the code `// 场景2.3：Promise链式异常` in line 23

deleted the code `    // 输入 `error.` 应提示网络错误属性（如 `.code`）` in line 26

deleted the code `// 输入 `user.profile?.email.` 应提示字符串方法（即使可能为`undefined`）` in line 32

deleted the code `` in line 28
deleted the code `// 场景2.4：可选链与空值容错` in line 29

deleted the code `// 场景2.5：联合类型异常` in line 32

deleted the code `  // 输入 `result.` 应提示字符串方法` in line 41
added the code `  console.log(result);` in line 41

deleted the code `  // 输入 `result.` 应提示 `.message`` in line 39
added the code `  console.log(result.message);` in line 39

deleted the code `// 场景2.6：异步函数错误处理` in line 44

added the code `// 场景2.6：异步函数错误处理` in line 44

deleted the code `  console.log(result);` in line 41
added the code `  // 输入 `result.` 应提示字符串方法` in line 41

deleted the code `  console.log(result.message);` in line 39
added the code `  // 输入 `result.` 应提示 `.message`` in line 39

added the code `// 场景2.5：联合类型异常` in line 32

added the code `// 输入 `user.profile?.email.` 应提示字符串方法（即使可能为`undefined`）` in line 31

added the code `// 场景2.4：可选链与空值容错` in line 29

added the code `    // 输入 `error.` 应提示网络错误属性（如 `.code`）` in line 26

added the code `// 场景2.3：Promise链式异常` in line 23

added the code `  // 输入 `error.` 应提示 `.statusCode`（需IDE识别子类）` in line 18
deleted the code `    console.log(error.statusCode);` in line 19
added the code `    console.log(error.statusCode); // 输入 `error.` 应提示 `.statusCode`` in line 20

added the code `// 场景2.2：自定义错误类型` in line 7

added the code `// 场景2.1：基础try/catch` in line 1
deleted the code `  JSON.parse("{ invalid JSON }");` in line 2
added the code `  JSON.parse("{ invalid JSON }"); // 强制抛出异常` in line 3
added the code `  // 输入 `error.` 应提示 `.message`/`.stack`` in line 5

deleted the code `// 场景2.1：基础try/catch` in line 1

deleted the code `  // 输入 `error.` 应提示 `.message`/`.stack`` in line 4

deleted the code `// 场景2.2：自定义错误类型` in line 7

deleted the code `    console.log(error.statusCode); // 输入 `error.` 应提示 `.statusCode`` in line 20
added the code `    console.log(error.statusCode);` in line 20

deleted the code `  // 输入 `error.` 应提示 `.statusCode`（需IDE识别子类）` in line 18

deleted the code `// 场景2.3：Promise链式异常` in line 23

deleted the code `    // 输入 `error.` 应提示网络错误属性（如 `.code`）` in line 26

deleted the code `// 输入 `user.profile?.email.` 应提示字符串方法（即使可能为`undefined`）` in line 32

deleted the code `` in line 28
deleted the code `// 场景2.4：可选链与空值容错` in line 29

deleted the code `// 场景2.5：联合类型异常` in line 32

deleted the code `  // 输入 `result.` 应提示字符串方法` in line 41
added the code `  console.log(result);` in line 41

deleted the code `  // 输入 `result.` 应提示 `.message`` in line 39
added the code `  console.log(result.message);` in line 39

deleted the code `  console.log(result.message);` in line 39

deleted the code `  console.log(result);` in line 40

deleted the code `// 场景2.6：异步函数错误处理` in line 42

deleted the code `    // 输入 `e.` 应提示错误属性` in line 46

deleted the code `  // 强制类型断言模拟错误` in line 52

deleted the code `// 场景2.7：类型断言后的补全` in line 50

deleted the code `  // 输入 `error.` 应提示 `.message`` in line 54

deleted the code `  data.items.push("test"); // 运行时错误，但IDE应推断类型` in line 52
added the code `  data.items.push("test");` in line 52

deleted the code `  JSON.parse("{ invalid JSON }"); // 强制抛出异常` in line 2
added the code `  JSON.parse("{ invalid JSON }");` in line 2

deleted the code `  console.log(error.message);` in line 4
added the code `  console.log(error);` in line 4

deleted the code `    console.log(error.statusCode);` in line 19
added the code `    console.log(error);` in line 19

deleted the code `    console.error(error.message);` in line 26
added the code `    console.error(error);` in line 26

deleted the code `    console.log(e.message);` in line 46
added the code `    console.log(e);` in line 46

deleted the code `  console.log(error);` in line 4
added the code `  console.log(error.);` in line 4


## Current Code
Here is the current code file path:
entry/src/main/ets/utils/errorHandling2.ets

Here is the current code around the cursor position:

```
<|editable_region_start|>
try {
  JSON.parse("{ invalid JSON }");
} catch (error) {
  console.log(error.<|current_cursor_position|>);
}

class NetworkError extends Error {
  statusCode: number;
  constructor(message: string, code: number) {
    super(message);
    this.statusCode = code;
  }
}

<|editable_region_end|>
try {
  throw new NetworkError("Timeout", 504);
} catch (error) {
  if (error instanceof NetworkError) {
    console.log(error);
  }
}

fetch("https://api.example.com")
  .then(res => res.json())
  .catch(error => {
    console.error(error);
  });

interface User { profile?: { email?: string } }
let user: User = {};

type Result = string | Error;
function getResult(): Result {
  return Math.random() > 0.5 ? "OK" : new Error("Failed");
}

let result = getResult();
if (result instanceof Error) {
} else {
}

async function loadData() {
  try {
    await fetch("invalid-url");
  } catch (e) {
    console.log(e);
  }
}

try {
  let data = {} as { items: string[] };
  data.items.push("test");
} catch (error) {
}
```

## Task
Rewrite the code from the first column of the line of <|editable_region_start|> to the line of <|editable_region_end|> according to the following requirements:
1. Enforce code format strictly matching existing code style.
2. Propagate naming convention changes to all related cases
3. Preserve original functionality
4. Apply changes to entire code regardless of cursor position
5. Focus on code after cursor position at <|current_cursor_position|>

# Output Format
Return ONLY the rewritten code from the first column of the line of <|editable_region_start|> to the line of <|editable_region_end|> without any other words.
Never use markdown formatting like ```. Return raw text only.