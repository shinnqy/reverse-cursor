[
  {
    "intent": "typing",
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:34.337Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "entry/src/main/ets/utils/eventCallback.ets",
          "diffHistory": [
            "5-|    \n5+|      \n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "entry/src/main/ets/utils/eventCallback.ets",
        "contents": "@Component\nstruct ClickEventExample {\n  build() {\n    Button('Click me')\n      \n  }\n}\n\n@Component\nstruct LongPressEventExample {\n  build() {\n    Button('Long press me')\n  }\n}\n\n@Component\nstruct SwipeEventExample {\n  build() {\n    Button('Swipe me')\n  }\n}\n\n@Component\nstruct ChildComponent {\n  @Prop() onCustomEvent: () => void\n\n  build() {\n    Button('Touch me')\n  }\n}\n\n",
        "cursorPosition": {
          "line": 4,
          "column": 6
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 3,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/DevEcoStudioProjects/MyApplication2"
      },
      "additionalFiles": [],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1742381854379,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "w7qbwqdnwclt3gk87qzzc",
      "timeSinceRequestStart": 50.39990234375,
      "timeAtRequestSend": 1742381854379
    },
    "generateUuid": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:34.381Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:34.839Z"
  },
  {
    "cursorRetrieval": {
      "text": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n     ",
      "rangeToReplace": {
        "startLineNumber": 2,
        "endLineNumberInclusive": 8
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:34.839Z"
  },
  {
    "cursorRetrieval": {
      "text": " ."
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:34.869Z"
  },
  {
    "cursorRetrieval": {
      "text": "onClick"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:34.877Z"
  },
  {
    "cursorRetrieval": {
      "text": " =>"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:34.892Z"
  },
  {
    "cursorRetrieval": {
      "text": "(()"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:34.893Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:34.902Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n       "
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:34.914Z"
  },
  {
    "firstChunkValue": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n",
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:34.915Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:34.916Z"
  },
  {
    "action": "displayCppSuggestion",
    "suggestion": {
      "uniqueId": "14ab6486-ce4a-43b3-b78c-bf24b9f9bde4",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "external": "file:///Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "path": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 3,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 3,
      "monotonicallyIncreasingSuggestionId": 2,
      "range": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "replaceText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n",
      "originalText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      \n  }\n}\n",
      "startingSuggestionRange": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "diffText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n",
      "fullOriginalText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      \n  }\n}\n",
      "suggestionTriggerTime": 1742381854329.2,
      "greens": [],
      "source": "typing",
      "requestId": "2feb9616-928d-4477-8cc9-4fb272e95232",
      "selection": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "undoRedoGroup": {
        "id": 2,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:34.917Z"
  },
  {
    "cursorRetrieval": {
      "text": " console"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:34.930Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:34.946Z"
  },
  {
    "cursorRetrieval": {
      "text": "log"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:34.947Z"
  },
  {
    "cursorRetrieval": {
      "text": "('"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:34.950Z"
  },
  {
    "cursorRetrieval": {
      "text": "Button"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.019Z"
  },
  {
    "cursorRetrieval": {
      "text": " clicked"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.020Z"
  },
  {
    "cursorRetrieval": {
      "text": "')"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.020Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n     "
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.020Z"
  },
  {
    "cursorRetrieval": {
      "text": " })"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.020Z"
  },
  {
    "cursorRetrieval": {
      "text": " "
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.052Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.052Z"
  },
  {
    "cursorRetrieval": {
      "text": " }"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.052Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n}\n"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.052Z"
  },
  {
    "fullText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n        console.log('Button clicked')\n      })\n  }\n}\n",
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.071Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n"
    },
    "fullText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n        console.log('Button clicked')\n      })\n  }\n}\n",
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.071Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && remaining reason && need to create newSuggestion according fullText, will attach onAcceptDisplayId to currentSuggestion if newSuggestion is not undefined",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "33b16112-58d6-4109-bcbd-507447e61b3f",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "external": "file:///Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "path": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 3,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 4,
      "monotonicallyIncreasingSuggestionId": 3,
      "range": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "replaceText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n        console.log('Button clicked')\n      })\n  }\n}\n",
      "originalText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n",
      "startingSuggestionRange": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "diffText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n        console.log('Button clicked')\n      })\n  }\n}\n",
      "fullOriginalText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n",
      "suggestionTriggerTime": 1742381854329.2,
      "greens": [],
      "source": "typing",
      "requestId": "2feb9616-928d-4477-8cc9-4fb272e95232",
      "selection": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "52d4f6d5-7070-4df8-880c-b398653f6239",
      "undoRedoGroup": {
        "id": 3,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.071Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.072Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "entry/src/main/ets/utils/eventCallback.ets",
      "lineNumberOneIndexed": 13,
      "text": "}\n}\n\n@Component\nstruct SwipeEventExample {",
      "shouldRetriggerCpp": true
    },
    "predictionId": "52d4f6d5-7070-4df8-880c-b398653f6239",
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.149Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n"
    },
    "fusedCursorPrediction": {
      "relativePath": "entry/src/main/ets/utils/eventCallback.ets",
      "lineNumberOneIndexed": 13,
      "text": "}\n}\n\n@Component\nstruct SwipeEventExample {",
      "shouldRetriggerCpp": true
    },
    "predictionId": "52d4f6d5-7070-4df8-880c-b398653f6239",
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.149Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "52d4f6d5-7070-4df8-880c-b398653f6239",
    "fusedCursorPrediction": {
      "relativePath": "entry/src/main/ets/utils/eventCallback.ets",
      "lineNumberOneIndexed": 13,
      "text": "}\n}\n\n@Component\nstruct SwipeEventExample {",
      "shouldRetriggerCpp": true
    },
    "timestamp": "2025-03-19T10:57:35.150Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "entry/src/main/ets/utils/eventCallback.ets",
        "lineNumberOneIndexed": 13,
        "expectedContent": "}\n}\n\n@Component\nstruct SwipeEventExample {",
        "shouldRetriggerCpp": true
      }
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.150Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.151Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "14ab6486-ce4a-43b3-b78c-bf24b9f9bde4",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "external": "file:///Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "path": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 3,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 3,
      "monotonicallyIncreasingSuggestionId": 2,
      "range": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "replaceText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n",
      "originalText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      \n  }\n}\n",
      "startingSuggestionRange": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "diffText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n",
      "fullOriginalText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      \n  }\n}\n",
      "suggestionTriggerTime": 1742381854329.2,
      "greens": [],
      "source": "typing",
      "requestId": "2feb9616-928d-4477-8cc9-4fb272e95232",
      "selection": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "undoRedoGroup": {
        "id": 2,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "b;17",
      "onAcceptDisplayId": "33b16112-58d6-4109-bcbd-507447e61b3f"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.625Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "14ab6486-ce4a-43b3-b78c-bf24b9f9bde4",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "external": "file:///Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "path": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 3,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 3,
      "monotonicallyIncreasingSuggestionId": 2,
      "range": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "replaceText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n",
      "originalText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      \n  }\n}\n",
      "startingSuggestionRange": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "diffText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n",
      "fullOriginalText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      \n  }\n}\n",
      "suggestionTriggerTime": 1742381854329.2,
      "greens": [],
      "source": "typing",
      "requestId": "2feb9616-928d-4477-8cc9-4fb272e95232",
      "selection": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "undoRedoGroup": {
        "id": 2,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "b;17",
      "onAcceptDisplayId": "33b16112-58d6-4109-bcbd-507447e61b3f"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.635Z"
  },
  {
    "action": "displayCppSuggestion",
    "suggestion": {
      "uniqueId": "33b16112-58d6-4109-bcbd-507447e61b3f",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "external": "file:///Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "path": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 3,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 4,
      "monotonicallyIncreasingSuggestionId": 3,
      "range": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "replaceText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n        console.log('Button clicked')\n      })\n  }\n}\n",
      "originalText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n",
      "startingSuggestionRange": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "diffText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n        console.log('Button clicked')\n      })\n  }\n}\n",
      "fullOriginalText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n",
      "suggestionTriggerTime": 1742381854329.2,
      "greens": [],
      "source": "typing",
      "requestId": "2feb9616-928d-4477-8cc9-4fb272e95232",
      "selection": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "52d4f6d5-7070-4df8-880c-b398653f6239",
      "undoRedoGroup": {
        "id": 3,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:35.636Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "33b16112-58d6-4109-bcbd-507447e61b3f",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "external": "file:///Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "path": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 3,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 4,
      "monotonicallyIncreasingSuggestionId": 3,
      "range": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "replaceText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n        console.log('Button clicked')\n      })\n  }\n}\n",
      "originalText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n",
      "startingSuggestionRange": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "diffText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n        console.log('Button clicked')\n      })\n  }\n}\n",
      "fullOriginalText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n",
      "suggestionTriggerTime": 1742381854329.2,
      "greens": [],
      "source": "typing",
      "requestId": "2feb9616-928d-4477-8cc9-4fb272e95232",
      "selection": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "52d4f6d5-7070-4df8-880c-b398653f6239",
      "undoRedoGroup": {
        "id": 3,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "b;23"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:37.701Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "33b16112-58d6-4109-bcbd-507447e61b3f",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "external": "file:///Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "path": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/eventCallback.ets",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 3,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 4,
      "monotonicallyIncreasingSuggestionId": 3,
      "range": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "replaceText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n        console.log('Button clicked')\n      })\n  }\n}\n",
      "originalText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n",
      "startingSuggestionRange": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "diffText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n        console.log('Button clicked')\n      })\n  }\n}\n",
      "fullOriginalText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n",
      "suggestionTriggerTime": 1742381854329.2,
      "greens": [],
      "source": "typing",
      "requestId": "2feb9616-928d-4477-8cc9-4fb272e95232",
      "selection": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "52d4f6d5-7070-4df8-880c-b398653f6239",
      "undoRedoGroup": {
        "id": 3,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "b;23"
    },
    "generationUUID": "2feb9616-928d-4477-8cc9-4fb272e95232",
    "timestamp": "2025-03-19T10:57:37.719Z"
  },
  {
    "getFromDB": "predictionId",
    "possibleInvokeReason": "no suggestion but has predictionId",
    "predictionId": "52d4f6d5-7070-4df8-880c-b398653f6239",
    "fusedCursorPrediction": {
      "relativePath": "entry/src/main/ets/utils/eventCallback.ets",
      "lineNumberOneIndexed": 13,
      "text": "}\n}\n\n@Component\nstruct SwipeEventExample {",
      "shouldRetriggerCpp": true
    },
    "oldText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n",
    "newText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n        console.log('Button clicked')\n      })\n  }\n}\n",
    "timestamp": "2025-03-19T10:57:37.720Z"
  },
  {
    "action": "displayFusedCursorPrediction",
    "predictionId": "52d4f6d5-7070-4df8-880c-b398653f6239",
    "fusedCursorPrediction": {
      "relativePath": "entry/src/main/ets/utils/eventCallback.ets",
      "lineNumberOneIndexed": 13,
      "text": "}\n}\n\n@Component\nstruct SwipeEventExample {",
      "shouldRetriggerCpp": true
    },
    "oldText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n  }\n}\n",
    "newText": "struct ClickEventExample {\n  build() {\n    Button('Click me')\n      .onClick(() => {\n        console.log('Button clicked')\n      })\n  }\n}\n",
    "timestamp": "2025-03-19T10:57:37.720Z"
  }
]