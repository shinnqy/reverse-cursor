You're an expert in ArkTS. Your task is to help the user update the code around current cursor position.

## Recent Actions
Here is what the user has been doing from the earliest to the latest:

File: entry/src/main/ets/utils/basicType.ets
added the code `let a: number = 1;` in line 1
added the code `let b: string = '1';` in line 2
added the code `let c: boolean = true;` in line 3
added the code `let d: any = '1';` in line 4
added the code `let e: void = undefined;` in line 5
added the code `let f: null = null;` in line 6
added the code `let g: undefined = undefined;` in line 7

deleted the code `let a: number = 1;` in line 1
deleted the code `let b: string = '1';` in line 2
deleted the code `let c: boolean = true;` in line 3
deleted the code `let d: any = '1';` in line 4
deleted the code `let e: void = undefined;` in line 5
deleted the code `let f: null = null;` in line 6
deleted the code `let g: undefined = undefined;` in line 7
added the code `let str: string = '123';` in line 1
added the code `str.split('');` in line 2

deleted the code `let str: string = '123';` in line 1
deleted the code `str.split('');` in line 2
added the code `let str1: string = '123';` in line 1
added the code `str1.sptr2;` in line 2
added the code `` in line 3
added the code `let num1: number = 123;` in line 4
added the code `let num2: number = 456;` in line 5
added the code `let num3: number = num1 + num2;` in line 6

deleted the code `str1.sptr2;` in line 2
added the code `let str2: string = '456';` in line 2
added the code `let str3: string = str1 + str2;` in line 3

deleted the code `let str2: string = '456';` in line 2
deleted the code `let str3: string = str1 + str2;` in line 3
added the code `str1.split('');` in line 2
deleted the code `let num2: number = 456;` in line 6
deleted the code `let num3: number = num1 + num2;` in line 7
added the code `num1.toString();` in line 5
added the code `` in line 6
added the code `let bool1: boolean = true;` in line 7
added the code `bool1.toString();` in line 8

added the code `let str2: string = `Template string ${str1}`;` in line 4
added the code `str2.split('');` in line 5
added the code `` in line 6
added the code `const str3 = "Constant string";` in line 7
added the code `str3.toLocaleUpperCase();` in line 8
added the code `` in line 9
deleted the code `num1.toString();` in line 5
added the code `num1.toFixed(2);` in line 11

added the code `let num2: number = 123.456;` in line 13
added the code `num2.toExponential(2);` in line 14
added the code `` in line 15

deleted the code `bool1.toString();` in line 17
added the code `bool1.toString();` in line 17
added the code `` in line 18
added the code `let arr1: Array<number> = [1, 2, 3];` in line 19
added the code `arr1.push(4);` in line 20
added the code `` in line 21
added the code `let arr2: number[] = [1, 2, 3];` in line 22
added the code `arr2.push(4);` in line 23
added the code `` in line 24

added the code `arr2.m` in line 21

added the code `arr2.map((item: number) => item * 2);` in line 25
added the code `let obj1: { name: string; age: number } = { name: 'John', age: 20 };` in line 27
added the code `obj1.name;` in line 28
added the code `obj1.age;` in line 29
added the code `` in line 30
added the code `` in line 31

deleted the code `arr2.m` in line 21
added the code `arr1.map((item: number) => item * 2);` in line 21

deleted the code `arr2.map((item: number) => item * 2);` in line 25
deleted the code `let obj1: { name: string; age: number } = { name: 'John', age: 20 };` in line 27
deleted the code `obj1.name;` in line 28
deleted the code `obj1.age;` in line 29
deleted the code `` in line 30
deleted the code `` in line 31

deleted the code `arr1.map((item: number) => item * 2);` in line 21

added the code `let obj1: { name: string; age: number } = { name: 'John', age: 20 };` in line 26
added the code `obj1.name;` in line 27
added the code `obj1.age;` in line 28
added the code `` in line 29
added the code `let obj2: { name: string; age: number } = { name: 'John', age: 20 };` in line 30
added the code `obj2.name;` in line 31
added the code `obj2.age;` in line 32

deleted the code `let obj1: { name: string; age: number } = { name: 'John', age: 20 };` in line 25
deleted the code `obj1.name;` in line 26
deleted the code `obj1.age;` in line 27
deleted the code `` in line 28
deleted the code `let obj2: { name: string; age: number } = { name: 'John', age: 20 };` in line 29
deleted the code `obj2.name;` in line 30
deleted the code `obj2.age;` in line 31

added the code `arr1.map((item: number) => item * 2);` in line 21

deleted the code `` in line 25
added the code `arr2.map((item: number) => item * 2);` in line 25
-----------------------------------------------

File: entry/src/main/ets/utils/arktsType.ets
added the code `let image1: R` in line 1


## Current Code
Here is the current code file path:
entry/src/main/ets/utils/arktsType.ets

Here is the current code around the cursor position:

```
<|editable_region_start|>
let image1: R<|current_cursor_position|>
<|editable_region_end|>
```

## Task
Rewrite the code from the first column of the line of <|editable_region_start|> to the line of <|editable_region_end|> according to the following requirements:
1. Enforce code format strictly matching existing code style.
2. Propagate naming convention changes to all related cases
3. Preserve original functionality
4. Apply changes to entire code regardless of cursor position
5. Focus on code after cursor position at <|current_cursor_position|>

# Output Format
Return ONLY the rewritten code from the first column of the line of <|editable_region_start|> to the line of <|editable_region_end|> without any other words.
Never use markdown formatting like ```. Return raw text only.