{"line":7,"column":12}

-------------------------------[        currentFileContentsWithToFill        ]--------------------------------
@Entry
@Component
struct BasicTypeExample {
  @State score: number = 0

  build() {
    Column() {
      Text(t[ToFill])
      Text('Hello, world!')
    }
  }
}

@Component
struct ObjectTypeExample {
  build() {
    Column() {
      Text('Hello, world!')
    }
  }
}

@Component
struct ArrayTypeExample {
  build() {
    Column() {
      Text('Hello, world!')
    }
  }
}
-------------------------------[               firstChunkValue               ]--------------------------------
    Column() {
      Text(this.score.toString())
      Text('Hello, world!')
    }
-------------------------------[       replacedContentsWithFirstChunk        ]--------------------------------
@Entry
@Component
struct BasicTypeExample {
  @State score: number = 0

  build() {
    Column() {
      Text(this.score.toString())
      Text('Hello, world!')
    }
  }
}

@Component
struct ObjectTypeExample {
  build() {
    Column() {
      Text('Hello, world!')
    }
  }
}

@Component
struct ArrayTypeExample {
  build() {
    Column() {
      Text('Hello, world!')
    }
  }
}
-------------------------------[                   fullText                  ]--------------------------------
    Column() {
      Text(this.score.toString())
      Button('Increment').onClick(() => {
        this.score++
      })
    }