You're an expert in TypeScript. Your task is to help the user update the code around current cursor position.

## Recent Actions
Here is what the user has been doing from the earliest to the latest:

File: src/components/test2.ts
added the code `enum TrafficLight {` in line 1
added the code `  Red = 'red',` in line 2
added the code `  Yellow = 'yellow',` in line 3
added the code `  Green = 'green',` in line 4
added the code `}` in line 5
added the code `` in line 6
deleted the code `  switch (light) {` in line 2
deleted the code `    case TrafficLight.RED:` in line 3
deleted the code `      console.log('Red');` in line 4
deleted the code `      break;` in line 5
deleted the code `    case TrafficLight.GREEN:` in line 6
deleted the code `      console.log('Green');` in line 7
deleted the code `      break;` in line 8
deleted the code `    case TrafficLight.YELLOW:` in line 9
deleted the code `      console.log('Yellow');` in line 10
deleted the code `      break;` in line 11
deleted the code `    default:` in line 12
deleted the code `      throw new Error('Invalid traffic light');` in line 13
added the code `  if (light === TrafficLight.Red) {` in line 8
added the code `    return TrafficLight.Green;` in line 9
added the code `  console.log('light', light);` in line 11
added the code `` in line 13
added the code `changeLight(TrafficLight.Red);` in line 14

deleted the code `` in line 13
deleted the code `changeLight(TrafficLight.Red);` in line 14

deleted the code `  }` in line 10
added the code `  } else if (light === TrafficLight.Green) {` in line 10

deleted the code `  console.log('light', light);` in line 11
added the code `  console.log('light', light');` in line 11
added the code `  }` in line 12

deleted the code `  console.log('light', light');` in line 11
added the code `  console.loght.Red;` in line 11
added the code `  } else {` in line 12
added the code `    throw new Error('Invalid traffic light');` in line 13

deleted the code `  console.loght.Red;` in line 11
added the code `  console.low) {` in line 11
added the code `    return TrafficLight.Red;` in line 12

deleted the code `  console.low) {` in line 11
added the code `  consow;` in line 11
added the code `  } else if (light === TrafficLight.Yellow) {` in line 12

deleted the code `  consow;` in line 11
added the code `    return TrafficLight.Yellow;` in line 11

deleted the code `    throw new Error('Invalid traffic light');` in line 15
deleted the code `  }` in line 16
added the code `    throw new Error('Invalid traffic light);` in line 15

deleted the code `    throw new Error('Invalid traffic light);` in line 15
added the code `    throw new Error('light', light);` in line 15

deleted the code `  } else if (light === TrafficLight.Green) {` in line 10
deleted the code `    return TrafficLight.Yellow;` in line 11
deleted the code `  } else if (light === TrafficLight.Yellow) {` in line 12
deleted the code `    return TrafficLight.Red;` in line 13
deleted the code `  } else {` in line 14
deleted the code `    throw new Error('light', light);` in line 15
added the code `  }` in line 10
added the code `  console.log('light', light);` in line 11

deleted the code `  }` in line 10
added the code `  } else if (light === TrafficLight.Green) {` in line 10

deleted the code `  console.log('light', light);` in line 11
added the code `  console.log('light', light');` in line 11
added the code `  }` in line 12

deleted the code `  console.log('light', light');` in line 11
added the code `  console.loght.Red;` in line 11
added the code `  } else {` in line 12
added the code `    throw new Error('Invalid traffic light');` in line 13

deleted the code `  console.loght.Red;` in line 11
added the code `  console.low) {` in line 11
added the code `    return TrafficLight.Red;` in line 12

deleted the code `  console.low) {` in line 11
added the code `  consow;` in line 11
added the code `  } else if (light === TrafficLight.Yellow) {` in line 12

deleted the code `  consow;` in line 11
added the code `    return TrafficLight.Yellow;` in line 11

deleted the code `    throw new Error('Invalid traffic light');` in line 15
deleted the code `  }` in line 16
added the code `    throw new Error('Invalid traffic light);` in line 15

deleted the code `    throw new Error('Invalid traffic light);` in line 15
added the code `    throw new Error('light', light);` in line 15

deleted the code `  } else if (light === TrafficLight.Green) {` in line 10
deleted the code `    return TrafficLight.Yellow;` in line 11
deleted the code `  } else if (light === TrafficLight.Yellow) {` in line 12
deleted the code `    return TrafficLight.Red;` in line 13
deleted the code `  } else {` in line 14
deleted the code `    throw new Error('light', light);` in line 15
added the code `  } ` in line 10
added the code `  console.log('light', light);` in line 11

deleted the code `enum TrafficLight {` in line 1
deleted the code `  Red = 'red',` in line 2
deleted the code `  Yellow = 'yellow',` in line 3
deleted the code `  Green = 'green',` in line 4
added the code `function changeLight(light: TrafficLight) {` in line 1
added the code `  light = 'green';` in line 2
deleted the code `function changeLight(light: TrafficLight) {` in line 7
deleted the code `  if (light === TrafficLight.Red) {` in line 8
deleted the code `    return TrafficLight.Green;` in line 9
deleted the code `  } ` in line 10
deleted the code `  console.log('light', light);` in line 11
deleted the code `}` in line 12
added the code `const light = 'red';` in line 5
added the code `changeLight(light);` in line 6
added the code `` in line 7
added the code `console.log('light', light);` in line 8

deleted the code `  light = 'green';` in line 2
deleted the code `}` in line 3
deleted the code `const light = 'red';` in line 5
deleted the code `changeLight(light);` in line 6
deleted the code `` in line 7

added the code `  light = 'green';` in line 2
added the code `}` in line 3
added the code `const light = 'red';` in line 5
added the code `changeLight(light);` in line 6
added the code `` in line 7

deleted the code `function changeLight(light: TrafficLight) {` in line 1
deleted the code `  light = 'green';` in line 2
deleted the code `}` in line 3
added the code `function changeLight(light: T` in line 1
deleted the code `const light = 'red';` in line 5
deleted the code `changeLight(light);` in line 6
deleted the code `` in line 7

deleted the code `function changeLight(light: T` in line 1
added the code `function changeLight(light: TrafficLight) {` in line 1

added the code `  light = 'green';` in line 2
added the code `}` in line 3
added the code `const light = 'red';` in line 5
added the code `changeLight(light);` in line 6
added the code `` in line 7

deleted the code `function changeLight(light: TrafficLight) {` in line 1
deleted the code `  light = 'green';` in line 2
deleted the code `}` in line 3
added the code `function changeLight(light: T` in line 1
deleted the code `const light = 'red';` in line 5
deleted the code `changeLight(light);` in line 6
deleted the code `` in line 7
deleted the code `` in line 8

deleted the code `function changeLight(light: T` in line 1
added the code `function changeLight(light: Tr` in line 1


## Current Code
Here is the current code file path:
src/components/test2.ts

Here is the current code around the cursor position:

```
function changeLight(light: Tr<|current_cursor_position|>

function modifyCode(code, lineNumber, columnNumber, insertString) {
  if (!code) {
    return '';
  }

  try {
    // start from 0
    lineNumber = lineNumber;
    columnNumber = columnNumber;

    const lines = code.split('\n');

    if (lineNumber < 0 || lineNumber > lines.length - 1) {
      throw new Error('Invalid line number');
    }

    const targetLine = lines[lineNumber];

    if (columnNumber < 0 || columnNumber > targetLine.length - 1) {

      const needColumnCount = columnNumber - targetLine.length;
      const newLine = targetLine + (new Array(needColumnCount)).fill('').join(' ') + insertString;
      lines[lineNumber] = newLine;
      return lines.join('\n');
    }

    const newLine = targetLine.slice(0, columnNumber) + insertString + targetLine.slice(columnNumber);
    lines[lineNumber] = newLine;

    return lines.join('\n');
  } catch (e) {
    console.error(e)
  }
}

```

## Task
Rewrite the code from the first column of the line of <|current_cursor_position|> according to the following requirements:
1. Enforce code format strictly matching existing code style.
2. Propagate naming convention changes to all related cases
3. Preserve original functionality
4. Apply changes to entire code regardless of cursor position
5. Focus on code after cursor position

# Output Format
Return ONLY the rewritten code from the first column of the line of cursor position without any other words.
Do NOT include unchanged code before cursor.
Never use markdown formatting like ```. Return raw text only.