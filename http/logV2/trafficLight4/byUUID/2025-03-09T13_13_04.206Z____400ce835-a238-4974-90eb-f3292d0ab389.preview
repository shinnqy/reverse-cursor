{"line":9,"column":0}

-------------------------------[        currentFileContentsWithToFill        ]--------------------------------
function changeLight(light: TrafficLight) {
  switch (light) {
    case TrafficLight.RED:
      console.log('red');
      break;
    case TrafficLight.GREEN:
      console.log('green');
      break;
    case TrafficLight.YELLOW:
[ToFill]      return TrafficLight.RED;
    default:
      return TrafficLight.RED;
  }
}

enum TrafficLight {
  RED = 'red',
  GREEN = 'green',
  YELLOW = 'yellow',
}

const light = TrafficLight.RED;
const newLight = changeLight(light);
console.log(newLight);

-------------------------------[               firstChunkValue               ]--------------------------------
    case TrafficLight.YELLOW:
      console.log('yellow');
      break;
    default:
      console.log('red');
-------------------------------[       replacedContentsWithFirstChunk        ]--------------------------------
function changeLight(light: TrafficLight) {
  switch (light) {
    case TrafficLight.RED:
      console.log('red');
      break;
    case TrafficLight.GREEN:
      console.log('green');
      break;
    case TrafficLight.YELLOW:
      console.log('yellow');
      break;
    default:
      console.log('red');
}

enum TrafficLight {
  RED = 'red',
  GREEN = 'green',
  YELLOW = 'yellow',
}

const light = TrafficLight.RED;
const newLight = changeLight(light);
console.log(newLight);

-------------------------------[             fusedCursorPrediction            ]--------------------------------
{
  "relativePath": "src/components/test2.ts",
  "lineNumberOneIndexed": 24,
  "text": "console.log(newLight);\n",
  "shouldRetriggerCpp": false
}
--------------------------------[        displayedFusedCursorPrediction       ]---------------------------------
{
  "relativePath": "src/components/test2.ts",
  "lineNumberOneIndexed": 24,
  "text": "console.log(newLight);\n",
  "shouldRetriggerCpp": false
}