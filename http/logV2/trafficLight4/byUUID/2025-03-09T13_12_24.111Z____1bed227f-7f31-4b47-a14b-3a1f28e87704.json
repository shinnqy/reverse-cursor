[
  {
    "intent": "line_change",
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.111Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|      \n7+|\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n\n  }\n}\n\n",
        "cursorPosition": {
          "line": 6,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 41,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1741525944159,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 54.199951171875,
      "timeAtRequestSend": 1741525944159
    },
    "generateUuid": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.161Z"
  },
  {
    "cursorRetrieval": {
      "text": "      return 'green';\n    case 'green':\n      return 'yellow';\n   ",
      "rangeToReplace": {
        "startLineNumber": 4,
        "endLineNumberInclusive": 11
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.552Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.553Z"
  },
  {
    "firstChunkValue": "      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n  }\n}\n\n",
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.726Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n  }\n}\n\n"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.731Z"
  },
  {
    "cursorRetrieval": {
      "text": " case 'yellow"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.732Z"
  },
  {
    "cursorRetrieval": {
      "text": "':"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.733Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n      return 'red"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.734Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.735Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.736Z"
  },
  {
    "cursorRetrieval": {
      "text": " }\n}\n\nconst"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.737Z"
  },
  {
    "cursorRetrieval": {
      "text": " light"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.738Z"
  },
  {
    "cursorRetrieval": {
      "text": " = 'red"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.738Z"
  },
  {
    "fullText": "      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n  }\n}\n\nconst light = 'red';\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.805Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n  }\n}\n\n"
    },
    "fullText": "      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n  }\n}\n\nconst light = 'red';\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.808Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && currentSuggestion uniqueId is different && need to create newSuggestion according fullText",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "9c010f05-3b68-4ffd-ac02-27f7e55c29dd",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 41,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 41,
      "monotonicallyIncreasingSuggestionId": 30,
      "range": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 11,
        "endColumn": 1
      },
      "replaceText": "      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n  }\n}\n\nconst light = 'red';\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
      "originalText": "      return 'green';\n    case 'green':\n      return 'yellow';\n\n  }\n}\n\n",
      "startingSuggestionRange": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 11,
        "endColumn": 1
      },
      "diffText": "      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n  }\n}\n\nconst light = 'red';\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
      "fullOriginalText": "      return 'green';\n    case 'green':\n      return 'yellow';\n\n  }\n}\n\n",
      "suggestionTriggerTime": 1741525944104.6,
      "greens": [],
      "source": "line_change",
      "requestId": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
      "selection": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 11,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "0298b1b9-b0e9-449c-a6d3-edbf86f8978d",
      "undoRedoGroup": {
        "id": 31,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.810Z"
  },
  {
    "cursorRetrieval": {
      "text": "';\n"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.813Z"
  },
  {
    "cursorRetrieval": {
      "text": "const"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.814Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.814Z"
  },
  {
    "cursorRetrieval": {
      "text": " new"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.815Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.816Z"
  },
  {
    "cursorRetrieval": {
      "text": " change"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.816Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.817Z"
  },
  {
    "cursorRetrieval": {
      "text": "(light);"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.817Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nconsole"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.817Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.817Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.818Z"
  },
  {
    "cursorRetrieval": {
      "text": "log"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.818Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.818Z"
  },
  {
    "cursorRetrieval": {
      "text": "new"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.818Z"
  },
  {
    "cursorRetrieval": {
      "text": ");\n"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.818Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.819Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
      "shouldRetriggerCpp": true
    },
    "predictionId": "0298b1b9-b0e9-449c-a6d3-edbf86f8978d",
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.916Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n  }\n}\n\n"
    },
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
      "shouldRetriggerCpp": true
    },
    "predictionId": "0298b1b9-b0e9-449c-a6d3-edbf86f8978d",
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.917Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "0298b1b9-b0e9-449c-a6d3-edbf86f8978d",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
      "shouldRetriggerCpp": true
    },
    "timestamp": "2025-03-09T13:12:24.918Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 1,
        "expectedContent": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
        "shouldRetriggerCpp": true
      }
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.919Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.919Z"
  }
]