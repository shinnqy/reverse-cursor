{"line":2,"column":11}

======== currentFileContentsWithToFill ========
function changeLight(light: TrafficLight) {
  switch (light) {
    case li[ToFill]:
      return 'green';
    case 'green':
      return 'yellow';
    case 'yellow':
      return 'red';
    default:
      return 'red';
  }
}


======== firstChunkValue ========
  switch (light) {
    case light.RED:
      return 'green';
    case 'green':
      return 'yellow';
======== replace replacedContentsWithFirstChunk ========
function changeLight(light: TrafficLight) {
  switch (light) {
    case light.RED:
      return 'green';
    case 'green':
      return 'yellow';
    case 'yellow':
      return 'red';
    default:
      return 'red';
  }
}


======== fullText ========
  switch (light) {
    case light.RED:
      return light.GREEN;
    case light.GREEN:
      return light.YELLOW;
======== replace replacedContentsWithFullText ========
function changeLight(light: TrafficLight) {
  switch (light) {
    case light.RED:
      return light.GREEN;
    case light.GREEN:
      return light.YELLOW;
    case 'yellow':
      return 'red';
    default:
      return 'red';
  }
}


======== fusedCursorPrediction ========
lineNumberOneIndexed: 7

text: 
case 'yellow':
return 'red';
default:
return 'red';
}

shouldRetriggerCpp: true
======== displayedFusedCursorPrediction ========
lineNumberOneIndexed: 7

text: 
case 'yellow':
return 'red';
default:
return 'red';
}

shouldRetriggerCpp: true