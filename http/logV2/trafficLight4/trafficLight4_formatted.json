[
  {
    "intent": "line_change",
    "generationUUID": "fd97c9ab-e013-4043-a5af-aa06dd47102a",
    "timestamp": "2025-03-09T13:12:05.677Z"
  },
  {
    "intent": "typing",
    "generationUUID": "1e9b843b-ba91-4f52-b6be-76b87ed4ea43",
    "timestamp": "2025-03-09T13:12:05.682Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|f\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 1
              },
              "endPosition": {
                "line": 1,
                "column": 2
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "f",
        "cursorPosition": {
          "line": 0,
          "column": 1
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 2,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1741525925698,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50.900146484375,
      "timeAtRequestSend": 1741525925698
    },
    "generateUuid": "fd97c9ab-e013-4043-a5af-aa06dd47102a",
    "timestamp": "2025-03-09T13:12:05.699Z"
  },
  {
    "intent": "typing",
    "generationUUID": "85e37b66-070a-4091-811c-9952ef502769",
    "timestamp": "2025-03-09T13:12:05.769Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|fu\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 1
              },
              "endPosition": {
                "line": 1,
                "column": 3
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 1
              },
              "endPosition": {
                "line": 1,
                "column": 2
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "fu",
        "cursorPosition": {
          "line": 0,
          "column": 2
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 3,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525925816,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 55.199951171875,
      "timeAtRequestSend": 1741525925816
    },
    "generateUuid": "85e37b66-070a-4091-811c-9952ef502769",
    "timestamp": "2025-03-09T13:12:05.817Z"
  },
  {
    "intent": "typing",
    "generationUUID": "bb350d40-2695-4d67-a33a-d19e05fbe8d0",
    "timestamp": "2025-03-09T13:12:06.006Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|fun\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 1
              },
              "endPosition": {
                "line": 1,
                "column": 4
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 1
              },
              "endPosition": {
                "line": 1,
                "column": 3
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "fun",
        "cursorPosition": {
          "line": 0,
          "column": 3
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 4,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525926049,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": [
          {
            "label": "function"
          },
          {
            "label": "Function"
          },
          {
            "label": "flushSync"
          },
          {
            "label": "FocusEvent"
          },
          {
            "label": "SVGComponentTransferFunctionElement"
          }
        ]
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 54.699951171875,
      "timeAtRequestSend": 1741525926049
    },
    "generateUuid": "bb350d40-2695-4d67-a33a-d19e05fbe8d0",
    "timestamp": "2025-03-09T13:12:06.052Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "timestamp": "2025-03-09T13:12:06.198Z"
  },
  {
    "intent": "typing",
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.216Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Parsing error: Identifier expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 8
              },
              "endPosition": {
                "line": 1,
                "column": 8
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 1
              },
              "endPosition": {
                "line": 1,
                "column": 4
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function",
        "cursorPosition": {
          "line": 0,
          "column": 8
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 5,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525926253,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.699951171875,
      "timeAtRequestSend": 1741525926253
    },
    "generateUuid": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.257Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.649Z"
  },
  {
    "cursorRetrieval": {
      "text": "function test",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 1
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.651Z"
  },
  {
    "firstChunkValue": "function test() {",
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.738Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function test() {"
    },
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.739Z"
  },
  {
    "cursorRetrieval": {
      "text": "()"
    },
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.740Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.740Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.741Z"
  },
  {
    "cursorRetrieval": {
      "text": " console.log('test"
    },
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.760Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.761Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n}"
    },
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.788Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.789Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.789Z"
  },
  {
    "cursorRetrieval": {
      "text": "test"
    },
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.790Z"
  },
  {
    "cursorRetrieval": {
      "text": "();"
    },
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.790Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.790Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.791Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.791Z"
  },
  {
    "fullText": "function test() {\n  console.log('test');\n}\n\ntest();\n\n",
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.794Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function test() {"
    },
    "fullText": "function test() {\n  console.log('test');\n}\n\ntest();\n\n",
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.794Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && remaining reason && need to create newSuggestion according fullText, will attach onAcceptDisplayId to currentSuggestion if newSuggestion is not undefined",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "38b88dbb-9d68-47bc-9fd3-dcd213e78619",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 5,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 6,
      "monotonicallyIncreasingSuggestionId": 2,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 17
      },
      "replaceText": "function test() {\n  console.log('test');\n}\n\ntest();\n\n",
      "originalText": "function test() ",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 17
      },
      "diffText": "function test() {\n  console.log('test');\n}\n\ntest();\n\n",
      "fullOriginalText": "function test() ",
      "suggestionTriggerTime": 1741525926201.6,
      "greens": [],
      "source": "typing",
      "requestId": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 9
      },
      "fusedCursorPredictionId": "a56ee31e-0c41-4d6b-aa67-bac2733f5a00",
      "undoRedoGroup": {
        "id": 3,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.795Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "a56ee31e-0c41-4d6b-aa67-bac2733f5a00",
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.796Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function test() {"
    },
    "fusedCursorPrediction": null,
    "predictionId": "a56ee31e-0c41-4d6b-aa67-bac2733f5a00",
    "generationUUID": "4801f55b-5fc7-47ac-ac25-f357ffaffa93",
    "timestamp": "2025-03-09T13:12:06.797Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "a56ee31e-0c41-4d6b-aa67-bac2733f5a00",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:06.797Z"
  },
  {
    "intent": "typing",
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:08.939Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function c\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 10
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Identifier expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 9
              },
              "endPosition": {
                "line": 1,
                "column": 9
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 10
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(Missing)', which lacks return-type annotation, implicitly has an 'any' return type.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 9
              },
              "endPosition": {
                "line": 1,
                "column": 9
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: Identifier expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 8
              },
              "endPosition": {
                "line": 1,
                "column": 8
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function c",
        "cursorPosition": {
          "line": 0,
          "column": 10
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 7,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525928980,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.10009765625,
      "timeAtRequestSend": 1741525928980
    },
    "generateUuid": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:08.982Z"
  },
  {
    "intent": "typing",
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.053Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function ch\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 11
              },
              "endPosition": {
                "line": 1,
                "column": 11
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Identifier expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 9
              },
              "endPosition": {
                "line": 1,
                "column": 9
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 10
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(Missing)', which lacks return-type annotation, implicitly has an 'any' return type.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 9
              },
              "endPosition": {
                "line": 1,
                "column": 9
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 10
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function ch",
        "cursorPosition": {
          "line": 0,
          "column": 11
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 8,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525929092,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.199951171875,
      "timeAtRequestSend": 1741525929093
    },
    "generateUuid": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.094Z"
  },
  {
    "intent": "typing",
    "generationUUID": "34fd7bc4-0ab2-4f87-b1b4-f617c159272a",
    "timestamp": "2025-03-09T13:12:09.228Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function cha\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 12
              },
              "endPosition": {
                "line": 1,
                "column": 12
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Identifier expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 9
              },
              "endPosition": {
                "line": 1,
                "column": 9
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 10
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(Missing)', which lacks return-type annotation, implicitly has an 'any' return type.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 9
              },
              "endPosition": {
                "line": 1,
                "column": 9
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 11
              },
              "endPosition": {
                "line": 1,
                "column": 11
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function cha",
        "cursorPosition": {
          "line": 0,
          "column": 12
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 9,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525929269,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 54.199951171875,
      "timeAtRequestSend": 1741525929269
    },
    "generateUuid": "34fd7bc4-0ab2-4f87-b1b4-f617c159272a",
    "timestamp": "2025-03-09T13:12:09.271Z"
  },
  {
    "intent": "typing",
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.284Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function chan\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 13
              },
              "endPosition": {
                "line": 1,
                "column": 13
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Identifier expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 9
              },
              "endPosition": {
                "line": 1,
                "column": 9
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 10
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(Missing)', which lacks return-type annotation, implicitly has an 'any' return type.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 9
              },
              "endPosition": {
                "line": 1,
                "column": 9
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 12
              },
              "endPosition": {
                "line": 1,
                "column": 12
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function chan",
        "cursorPosition": {
          "line": 0,
          "column": 13
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 10,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525929332,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 54.300048828125,
      "timeAtRequestSend": 1741525929332
    },
    "generateUuid": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.334Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.347Z"
  },
  {
    "cursorRetrieval": {
      "text": "function create",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 1
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.348Z"
  },
  {
    "intent": "typing",
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:09.357Z"
  },
  {
    "cursorRetrieval": {
      "text": "Button"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.368Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.381Z"
  },
  {
    "cursorRetrieval": {
      "text": "text"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.384Z"
  },
  {
    "cursorRetrieval": {
      "text": ":"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.395Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function chang\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 14
              },
              "endPosition": {
                "line": 1,
                "column": 14
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Identifier expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 9
              },
              "endPosition": {
                "line": 1,
                "column": 9
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 10
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(Missing)', which lacks return-type annotation, implicitly has an 'any' return type.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 9
              },
              "endPosition": {
                "line": 1,
                "column": 9
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 13
              },
              "endPosition": {
                "line": 1,
                "column": 13
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function chang",
        "cursorPosition": {
          "line": 0,
          "column": 14
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 11,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525929404,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.39990234375,
      "timeAtRequestSend": 1741525929404
    },
    "generateUuid": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:09.406Z"
  },
  {
    "intent": "typing",
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:09.471Z"
  },
  {
    "cursorRetrieval": {
      "text": " string"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.497Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.498Z"
  },
  {
    "cursorRetrieval": {
      "text": ")"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.499Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.500Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function change\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 15
              },
              "endPosition": {
                "line": 1,
                "column": 15
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Identifier expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 9
              },
              "endPosition": {
                "line": 1,
                "column": 9
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 10
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(Missing)', which lacks return-type annotation, implicitly has an 'any' return type.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 9
              },
              "endPosition": {
                "line": 1,
                "column": 9
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 14
              },
              "endPosition": {
                "line": 1,
                "column": 14
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function change",
        "cursorPosition": {
          "line": 0,
          "column": 15
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 12,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525929514,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50.5,
      "timeAtRequestSend": 1741525929514
    },
    "generateUuid": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:09.516Z"
  },
  {
    "cursorRetrieval": {
      "text": " const"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.526Z"
  },
  {
    "cursorRetrieval": {
      "text": " button"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.527Z"
  },
  {
    "cursorRetrieval": {
      "text": " document.createElement('button');\n "
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.528Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.528Z"
  },
  {
    "intent": "typing",
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:09.799Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeL\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 16
              },
              "endPosition": {
                "line": 1,
                "column": 16
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 16
              },
              "endPosition": {
                "line": 1,
                "column": 16
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Function implementation is missing or not immediately following the declaration.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 16
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'change', which lacks return-type annotation, implicitly has an 'any' return type.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 16
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 15
              },
              "endPosition": {
                "line": 1,
                "column": 15
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Identifier expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 9
              },
              "endPosition": {
                "line": 1,
                "column": 9
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 10
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(Missing)', which lacks return-type annotation, implicitly has an 'any' return type.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 9
              },
              "endPosition": {
                "line": 1,
                "column": 9
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeL",
        "cursorPosition": {
          "line": 0,
          "column": 16
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 13,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525929846,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50.699951171875,
      "timeAtRequestSend": 1741525929846
    },
    "generateUuid": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:09.848Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.879Z"
  },
  {
    "cursorRetrieval": {
      "text": " button"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.880Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.880Z"
  },
  {
    "cursorRetrieval": {
      "text": "textContent"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.881Z"
  },
  {
    "cursorRetrieval": {
      "text": "function check",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 1
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.881Z"
  },
  {
    "cursorRetrieval": {
      "text": " = text"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.882Z"
  },
  {
    "cursorRetrieval": {
      "text": ";"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.882Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.883Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.883Z"
  },
  {
    "cursorRetrieval": {
      "text": "a"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.884Z"
  },
  {
    "cursorRetrieval": {
      "text": " return"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.884Z"
  },
  {
    "cursorRetrieval": {
      "text": ":"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.885Z"
  },
  {
    "cursorRetrieval": {
      "text": " number"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.886Z"
  },
  {
    "cursorRetrieval": {
      "text": " button"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.886Z"
  },
  {
    "cursorRetrieval": {
      "text": ";"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.887Z"
  },
  {
    "cursorRetrieval": {
      "text": ","
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.887Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.887Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "c1376107-45d8-4aa6-a44b-38da9a239995",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:09.888Z"
  },
  {
    "firstChunkValue": "function createButton(text: string) {\n  const button = document.createElement('button');\n  button.textContent = text;\n  return button;\n}\n\n",
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.888Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "c1376107-45d8-4aa6-a44b-38da9a239995",
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.888Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function createButton(text: string) {\n  const button = document.createElement('button');\n  button.textContent = text;\n  return button;\n}\n\n"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.889Z"
  },
  {
    "cursorRetrieval": {
      "text": " b"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.889Z"
  },
  {
    "cursorRetrieval": {
      "text": "}"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.889Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.889Z"
  },
  {
    "cursorRetrieval": {
      "text": ":"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.890Z"
  },
  {
    "cursorRetrieval": {
      "text": " number)"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.890Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.890Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.890Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.890Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.890Z"
  },
  {
    "cursorRetrieval": {
      "text": " if"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.890Z"
  },
  {
    "cursorRetrieval": {
      "text": " ("
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.891Z"
  },
  {
    "cursorRetrieval": {
      "text": "a"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.891Z"
  },
  {
    "cursorRetrieval": {
      "text": " >"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.891Z"
  },
  {
    "cursorRetrieval": {
      "text": ")"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.891Z"
  },
  {
    "cursorRetrieval": {
      "text": " b"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.891Z"
  },
  {
    "cursorRetrieval": {
      "text": " {\n"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.891Z"
  },
  {
    "cursorRetrieval": {
      "text": "   "
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.891Z"
  },
  {
    "cursorRetrieval": {
      "text": " return"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.892Z"
  },
  {
    "cursorRetrieval": {
      "text": " a"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.892Z"
  },
  {
    "cursorRetrieval": {
      "text": ";"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.892Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.892Z"
  },
  {
    "cursorRetrieval": {
      "text": " }"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.892Z"
  },
  {
    "cursorRetrieval": {
      "text": " else"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.892Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.892Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.892Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function createButton(text: string) {\n  const button = document.createElement('button');\n  button.textContent = text;\n  return button;\n}\n\n"
    },
    "fusedCursorPrediction": null,
    "predictionId": "c1376107-45d8-4aa6-a44b-38da9a239995",
    "generationUUID": "f6437569-955a-4aed-bb87-1ed808ce26c1",
    "timestamp": "2025-03-09T13:12:09.893Z"
  },
  {
    "cursorRetrieval": {
      "text": "   "
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.962Z"
  },
  {
    "cursorRetrieval": {
      "text": " return b"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.963Z"
  },
  {
    "cursorRetrieval": {
      "text": ";"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.963Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.964Z"
  },
  {
    "cursorRetrieval": {
      "text": " "
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.964Z"
  },
  {
    "cursorRetrieval": {
      "text": "function change",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 1
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.964Z"
  },
  {
    "cursorRetrieval": {
      "text": " }"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.965Z"
  },
  {
    "cursorRetrieval": {
      "text": "}"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.965Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.965Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.966Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:09.966Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "fc340e66-1072-481e-bbcb-6d05a563180c",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:09.967Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.968Z"
  },
  {
    "firstChunkValue": "function check(a: number, b: number) {\n  if (a > b) {\n    return a;\n  } else {\n    return b;\n  }\n}",
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.968Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "fc340e66-1072-481e-bbcb-6d05a563180c",
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.968Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function check(a: number, b: number) {\n  if (a > b) {\n    return a;\n  } else {\n    return b;\n  }\n}"
    },
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.969Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function check(a: number, b: number) {\n  if (a > b) {\n    return a;\n  } else {\n    return b;\n  }\n}"
    },
    "fusedCursorPrediction": null,
    "predictionId": "fc340e66-1072-481e-bbcb-6d05a563180c",
    "generationUUID": "e4de2019-93f9-418d-ae50-0c81015e771e",
    "timestamp": "2025-03-09T13:12:09.969Z"
  },
  {
    "cursorRetrieval": {
      "text": "Color"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.970Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.970Z"
  },
  {
    "cursorRetrieval": {
      "text": "color"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.971Z"
  },
  {
    "cursorRetrieval": {
      "text": ":"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.971Z"
  },
  {
    "cursorRetrieval": {
      "text": " string"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.971Z"
  },
  {
    "cursorRetrieval": {
      "text": ")"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.971Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.971Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.972Z"
  },
  {
    "cursorRetrieval": {
      "text": " const"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.972Z"
  },
  {
    "cursorRetrieval": {
      "text": "function change",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 1
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:09.972Z"
  },
  {
    "cursorRetrieval": {
      "text": " button"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.972Z"
  },
  {
    "cursorRetrieval": {
      "text": "Color"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:09.972Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.973Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:09.973Z"
  },
  {
    "cursorRetrieval": {
      "text": " document.createElement('button');\n "
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.973Z"
  },
  {
    "cursorRetrieval": {
      "text": " button"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.973Z"
  },
  {
    "cursorRetrieval": {
      "text": "color"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:09.973Z"
  },
  {
    "cursorRetrieval": {
      "text": ":"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:09.974Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.974Z"
  },
  {
    "cursorRetrieval": {
      "text": " string"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:09.974Z"
  },
  {
    "cursorRetrieval": {
      "text": "style"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:09.974Z"
  },
  {
    "cursorRetrieval": {
      "text": ")"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:09.974Z"
  },
  {
    "intent": "typing",
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:10.020Z"
  },
  {
    "cursorRetrieval": {
      "text": ".cssText = `"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.056Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.057Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.057Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.058Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.058Z"
  },
  {
    "cursorRetrieval": {
      "text": "   "
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.058Z"
  },
  {
    "cursorRetrieval": {
      "text": " const"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.059Z"
  },
  {
    "cursorRetrieval": {
      "text": " button"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.059Z"
  },
  {
    "cursorRetrieval": {
      "text": "-"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.059Z"
  },
  {
    "cursorRetrieval": {
      "text": " background"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.060Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.060Z"
  },
  {
    "cursorRetrieval": {
      "text": "color"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.060Z"
  },
  {
    "firstChunkValue": "function changeColor(color: string) {\n  const button = document.createElement('button');\n  button.style.cssText = `\n    background-color: ${color};\n    color: white;\n  `;\n}",
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.061Z"
  },
  {
    "cursorRetrieval": {
      "text": " document.createElement('button');\n "
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.062Z"
  },
  {
    "cursorRetrieval": {
      "text": ": ${"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.062Z"
  },
  {
    "cursorRetrieval": {
      "text": " button"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.063Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.063Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "73f50bb0-f2b7-449e-9c79-301eb1c29a84",
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.063Z"
  },
  {
    "firstChunkValue": "function changeColor(color: string) {\n  const button = document.createElement('button');\n  button.style.backgroundColor = color;\n  document.body.appendChild(button);\n}\n\n",
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.064Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "0502f5a3-6480-4459-92da-7f2f71e18b31",
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.064Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeColor(color: string) {\n  const button = document.createElement('button');\n  button.style.cssText = `\n    background-color: ${color};\n    color: white;\n  `;\n}"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.065Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeColor(color: string) {\n  const button = document.createElement('button');\n  button.style.cssText = `\n    background-color: ${color};\n    color: white;\n  `;\n}"
    },
    "fusedCursorPrediction": null,
    "predictionId": "73f50bb0-f2b7-449e-9c79-301eb1c29a84",
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.065Z"
  },
  {
    "cursorRetrieval": {
      "text": "color"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.065Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "73f50bb0-f2b7-449e-9c79-301eb1c29a84",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:10.065Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeColor(color: string) {\n  const button = document.createElement('button');\n  button.style.backgroundColor = color;\n  document.body.appendChild(button);\n}\n\n"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.066Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeColor(color: string) {\n  const button = document.createElement('button');\n  button.style.backgroundColor = color;\n  document.body.appendChild(button);\n}\n\n"
    },
    "fusedCursorPrediction": null,
    "predictionId": "0502f5a3-6480-4459-92da-7f2f71e18b31",
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.066Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "0502f5a3-6480-4459-92da-7f2f71e18b31",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:10.066Z"
  },
  {
    "cursorRetrieval": {
      "text": "style"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.066Z"
  },
  {
    "cursorRetrieval": {
      "text": "};"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.067Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n   "
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.067Z"
  },
  {
    "cursorRetrieval": {
      "text": ".backgroundColor"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.067Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.067Z"
  },
  {
    "cursorRetrieval": {
      "text": " color"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.067Z"
  },
  {
    "cursorRetrieval": {
      "text": ":"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.067Z"
  },
  {
    "cursorRetrieval": {
      "text": " color"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.067Z"
  },
  {
    "cursorRetrieval": {
      "text": " white"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.068Z"
  },
  {
    "cursorRetrieval": {
      "text": ";"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.068Z"
  },
  {
    "cursorRetrieval": {
      "text": ";"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.068Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.068Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.068Z"
  },
  {
    "cursorRetrieval": {
      "text": " document"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.068Z"
  },
  {
    "cursorRetrieval": {
      "text": " `"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.068Z"
  },
  {
    "cursorRetrieval": {
      "text": ".body"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.068Z"
  },
  {
    "cursorRetrieval": {
      "text": ";"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.069Z"
  },
  {
    "cursorRetrieval": {
      "text": ".appendChild(button);"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.069Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.069Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n}"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.069Z"
  },
  {
    "cursorRetrieval": {
      "text": "}"
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.069Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.069Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "d14c0998-23f1-42f9-b772-603a8456fcc6",
    "timestamp": "2025-03-09T13:12:10.069Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.069Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeColor",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 1
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.070Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "307c97a6-543c-4e44-9e78-940c44c85033",
    "timestamp": "2025-03-09T13:12:10.070Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLi\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 17
              },
              "endPosition": {
                "line": 1,
                "column": 17
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 16
              },
              "endPosition": {
                "line": 1,
                "column": 16
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Function implementation is missing or not immediately following the declaration.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 16
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'change', which lacks return-type annotation, implicitly has an 'any' return type.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 16
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 16
              },
              "endPosition": {
                "line": 1,
                "column": 16
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLi",
        "cursorPosition": {
          "line": 0,
          "column": 17
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 14,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525930071,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 58.39990234375,
      "timeAtRequestSend": 1741525930071
    },
    "generateUuid": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:10.072Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.142Z"
  },
  {
    "cursorRetrieval": {
      "text": "color"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.143Z"
  },
  {
    "cursorRetrieval": {
      "text": ":"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.143Z"
  },
  {
    "cursorRetrieval": {
      "text": " string"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.144Z"
  },
  {
    "cursorRetrieval": {
      "text": ")"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.145Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.145Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.146Z"
  },
  {
    "cursorRetrieval": {
      "text": " button"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.146Z"
  },
  {
    "cursorRetrieval": {
      "text": " const"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.147Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.148Z"
  },
  {
    "cursorRetrieval": {
      "text": " document.createElement('button');\n "
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.148Z"
  },
  {
    "intent": "typing",
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:10.184Z"
  },
  {
    "cursorRetrieval": {
      "text": " button"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.206Z"
  },
  {
    "cursorRetrieval": {
      "text": "style"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.207Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.207Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.207Z"
  },
  {
    "cursorRetrieval": {
      "text": ".backgroundColor"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.208Z"
  },
  {
    "cursorRetrieval": {
      "text": " color"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.208Z"
  },
  {
    "cursorRetrieval": {
      "text": ";"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.208Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.209Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLig\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 18
              },
              "endPosition": {
                "line": 1,
                "column": 18
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 16
              },
              "endPosition": {
                "line": 1,
                "column": 16
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Function implementation is missing or not immediately following the declaration.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 16
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'change', which lacks return-type annotation, implicitly has an 'any' return type.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 16
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 17
              },
              "endPosition": {
                "line": 1,
                "column": 17
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLig",
        "cursorPosition": {
          "line": 0,
          "column": 18
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 15,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525930235,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 55.60009765625,
      "timeAtRequestSend": 1741525930235
    },
    "generateUuid": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:10.237Z"
  },
  {
    "cursorRetrieval": {
      "text": " button.addEventListener"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.324Z"
  },
  {
    "cursorRetrieval": {
      "text": " console"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.324Z"
  },
  {
    "cursorRetrieval": {
      "text": "('click', () => {\n   "
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.325Z"
  },
  {
    "cursorRetrieval": {
      "text": ".log("
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.325Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.325Z"
  },
  {
    "cursorRetrieval": {
      "text": "color);"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.326Z"
  },
  {
    "cursorRetrieval": {
      "text": " });"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.326Z"
  },
  {
    "cursorRetrieval": {
      "text": "}"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.326Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.327Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.327Z"
  },
  {
    "intent": "typing",
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:10.327Z"
  },
  {
    "firstChunkValue": "function changeColor(color: string) {\n  const button = document.createElement('button');\n  button.style.backgroundColor = color;\n  button.addEventListener('click', () => {\n    console.log(color);\n  });\n}",
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.337Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "0710a705-bd02-4d5f-bac6-af41962a10b1",
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.338Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeColor(color: string) {\n  const button = document.createElement('button');\n  button.style.backgroundColor = color;\n  button.addEventListener('click', () => {\n    console.log(color);\n  });\n}"
    },
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.339Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeColor(color: string) {\n  const button = document.createElement('button');\n  button.style.backgroundColor = color;\n  button.addEventListener('click', () => {\n    console.log(color);\n  });\n}"
    },
    "fusedCursorPrediction": null,
    "predictionId": "0710a705-bd02-4d5f-bac6-af41962a10b1",
    "generationUUID": "3a8e3a39-083a-4bc0-92b5-5698be84b979",
    "timestamp": "2025-03-09T13:12:10.339Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "0710a705-bd02-4d5f-bac6-af41962a10b1",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:10.340Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLigh\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 19
              },
              "endPosition": {
                "line": 1,
                "column": 19
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 16
              },
              "endPosition": {
                "line": 1,
                "column": 16
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Function implementation is missing or not immediately following the declaration.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 16
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'change', which lacks return-type annotation, implicitly has an 'any' return type.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 16
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 18
              },
              "endPosition": {
                "line": 1,
                "column": 18
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLigh",
        "cursorPosition": {
          "line": 0,
          "column": 19
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 16,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525930367,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51,
      "timeAtRequestSend": 1741525930367
    },
    "generateUuid": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:10.369Z"
  },
  {
    "intent": "typing",
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:10.438Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 20
              },
              "endPosition": {
                "line": 1,
                "column": 20
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 16
              },
              "endPosition": {
                "line": 1,
                "column": 16
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Function implementation is missing or not immediately following the declaration.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 16
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'change', which lacks return-type annotation, implicitly has an 'any' return type.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 16
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 19
              },
              "endPosition": {
                "line": 1,
                "column": 19
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight",
        "cursorPosition": {
          "line": 0,
          "column": 20
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 17,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525930484,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.89990234375,
      "timeAtRequestSend": 1741525930484
    },
    "generateUuid": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:10.486Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:10.503Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLanguage",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 1
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:10.504Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:10.507Z"
  },
  {
    "cursorRetrieval": {
      "text": ":"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:10.509Z"
  },
  {
    "cursorRetrieval": {
      "text": " string"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:10.510Z"
  },
  {
    "cursorRetrieval": {
      "text": "language"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:10.512Z"
  },
  {
    "cursorRetrieval": {
      "text": ")"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:10.513Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.162Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.164Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.165Z"
  },
  {
    "cursorRetrieval": {
      "text": "language);"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.165Z"
  },
  {
    "cursorRetrieval": {
      "text": " console.log("
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.165Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeList",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 1
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.165Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n}"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.165Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.166Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.166Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.166Z"
  },
  {
    "cursorRetrieval": {
      "text": "change"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.166Z"
  },
  {
    "cursorRetrieval": {
      "text": "list"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.166Z"
  },
  {
    "cursorRetrieval": {
      "text": "Language"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.166Z"
  },
  {
    "cursorRetrieval": {
      "text": ":"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.167Z"
  },
  {
    "cursorRetrieval": {
      "text": "('"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.167Z"
  },
  {
    "cursorRetrieval": {
      "text": " string"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.167Z"
  },
  {
    "cursorRetrieval": {
      "text": "en"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.167Z"
  },
  {
    "cursorRetrieval": {
      "text": "[])"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.168Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.168Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.168Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.261Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nchange"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.263Z"
  },
  {
    "cursorRetrieval": {
      "text": "Language('fr"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.264Z"
  },
  {
    "cursorRetrieval": {
      "text": " list"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.265Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.265Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.265Z"
  },
  {
    "firstChunkValue": "function changeLight(light: string) {",
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.266Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.267Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.268Z"
  },
  {
    "cursorRetrieval": {
      "text": "forEach"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.270Z"
  },
  {
    "cursorRetrieval": {
      "text": "(("
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.271Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.271Z"
  },
  {
    "cursorRetrieval": {
      "text": "item"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.272Z"
  },
  {
    "cursorRetrieval": {
      "text": ")"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.272Z"
  },
  {
    "cursorRetrieval": {
      "text": " =>"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.273Z"
  },
  {
    "firstChunkValue": "function changeList(list: string[]) {\n  list.forEach((item) => {\n    console.log(item);\n  });\n}\n\n",
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.273Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "c80ffcfc-93e3-43e3-921e-c7a1c30cd17c",
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.274Z"
  },
  {
    "cursorRetrieval": {
      "text": " {\n   "
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.275Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeList(list: string[]) {\n  list.forEach((item) => {\n    console.log(item);\n  });\n}\n\n"
    },
    "fusedCursorPrediction": null,
    "predictionId": "c80ffcfc-93e3-43e3-921e-c7a1c30cd17c",
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.276Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeList(list: string[]) {\n  list.forEach((item) => {\n    console.log(item);\n  });\n}\n\n"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.276Z"
  },
  {
    "firstChunkValue": "function changeLanguage(language: string) {\n  console.log(language);\n}\n\nchangeLanguage('en');\nchangeLanguage('fr');\n",
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.277Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "d732d4ab-f137-4fec-a7a4-a18259406dda",
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.278Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: string) {"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.279Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "c80ffcfc-93e3-43e3-921e-c7a1c30cd17c",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:11.279Z"
  },
  {
    "cursorRetrieval": {
      "text": " console"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.280Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLanguage(language: string) {\n  console.log(language);\n}\n\nchangeLanguage('en');\nchangeLanguage('fr');\n"
    },
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.281Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLanguage(language: string) {\n  console.log(language);\n}\n\nchangeLanguage('en');\nchangeLanguage('fr');\n"
    },
    "fusedCursorPrediction": null,
    "predictionId": "d732d4ab-f137-4fec-a7a4-a18259406dda",
    "generationUUID": "1638e6ae-371f-45dc-aac1-247132caa176",
    "timestamp": "2025-03-09T13:12:11.282Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "d732d4ab-f137-4fec-a7a4-a18259406dda",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:11.283Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 1
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.284Z"
  },
  {
    "cursorRetrieval": {
      "text": ".log("
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.285Z"
  },
  {
    "cursorRetrieval": {
      "text": "item"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.285Z"
  },
  {
    "cursorRetrieval": {
      "text": ");"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.286Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.286Z"
  },
  {
    "cursorRetrieval": {
      "text": "light"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.286Z"
  },
  {
    "cursorRetrieval": {
      "text": ":"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.287Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.287Z"
  },
  {
    "cursorRetrieval": {
      "text": " string"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.287Z"
  },
  {
    "cursorRetrieval": {
      "text": " });"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.287Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.287Z"
  },
  {
    "cursorRetrieval": {
      "text": ")"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.287Z"
  },
  {
    "cursorRetrieval": {
      "text": "}"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.287Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.288Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.288Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.288Z"
  },
  {
    "cursorRetrieval": {
      "text": " const"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.288Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.288Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "07c5357e-dd4c-42bf-8efe-08895cb15206",
    "timestamp": "2025-03-09T13:12:11.289Z"
  },
  {
    "cursorRetrieval": {
      "text": " light"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.289Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.289Z"
  },
  {
    "cursorRetrieval": {
      "text": " document"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.611Z"
  },
  {
    "cursorRetrieval": {
      "text": ".createElement('div"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.612Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.613Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 1
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:11.613Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.614Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:11.614Z"
  },
  {
    "cursorRetrieval": {
      "text": " light"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.614Z"
  },
  {
    "cursorRetrieval": {
      "text": "light"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:11.614Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.614Z"
  },
  {
    "cursorRetrieval": {
      "text": ":"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:11.615Z"
  },
  {
    "cursorRetrieval": {
      "text": "style"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.615Z"
  },
  {
    "cursorRetrieval": {
      "text": " string"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:11.615Z"
  },
  {
    "cursorRetrieval": {
      "text": ".width"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.615Z"
  },
  {
    "cursorRetrieval": {
      "text": ")"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:11.615Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.616Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:11.616Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:11.616Z"
  },
  {
    "cursorRetrieval": {
      "text": " '"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.616Z"
  },
  {
    "firstChunkValue": "function changeLight(light: string) {",
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:11.616Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:11.617Z"
  },
  {
    "cursorRetrieval": {
      "text": "1"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.617Z"
  },
  {
    "cursorRetrieval": {
      "text": " if"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:11.617Z"
  },
  {
    "cursorRetrieval": {
      "text": "0"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.617Z"
  },
  {
    "cursorRetrieval": {
      "text": " ("
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:11.617Z"
  },
  {
    "cursorRetrieval": {
      "text": "0"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.617Z"
  },
  {
    "cursorRetrieval": {
      "text": "light"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:11.618Z"
  },
  {
    "cursorRetrieval": {
      "text": "px"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:11.618Z"
  },
  {
    "cursorRetrieval": {
      "text": " ==="
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:11.618Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: string) {"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:11.619Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.002Z"
  },
  {
    "firstChunkValue": "function changeLight(light: string) {",
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.003Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.013Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight(",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 1
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.013Z"
  },
  {
    "cursorRetrieval": {
      "text": " '"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.014Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.015Z"
  },
  {
    "cursorRetrieval": {
      "text": "red"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.015Z"
  },
  {
    "cursorRetrieval": {
      "text": " light.style."
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.016Z"
  },
  {
    "cursorRetrieval": {
      "text": "')"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.016Z"
  },
  {
    "cursorRetrieval": {
      "text": "height"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.016Z"
  },
  {
    "cursorRetrieval": {
      "text": "light"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.017Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.017Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.017Z"
  },
  {
    "cursorRetrieval": {
      "text": ":"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.018Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: string) {"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.018Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.019Z"
  },
  {
    "cursorRetrieval": {
      "text": " '100px';\n"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.020Z"
  },
  {
    "cursorRetrieval": {
      "text": " string"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.022Z"
  },
  {
    "cursorRetrieval": {
      "text": "   "
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.024Z"
  },
  {
    "cursorRetrieval": {
      "text": " "
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.025Z"
  },
  {
    "cursorRetrieval": {
      "text": ")"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.025Z"
  },
  {
    "cursorRetrieval": {
      "text": " return"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.025Z"
  },
  {
    "cursorRetrieval": {
      "text": " light"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.026Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.026Z"
  },
  {
    "cursorRetrieval": {
      "text": " '"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.026Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.026Z"
  },
  {
    "cursorRetrieval": {
      "text": ".style."
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.026Z"
  },
  {
    "cursorRetrieval": {
      "text": "green"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.026Z"
  },
  {
    "cursorRetrieval": {
      "text": "backgroundColor"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.026Z"
  },
  {
    "cursorRetrieval": {
      "text": " if"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.026Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.027Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.027Z"
  },
  {
    "cursorRetrieval": {
      "text": " ("
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.074Z"
  },
  {
    "cursorRetrieval": {
      "text": " '"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.075Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.075Z"
  },
  {
    "cursorRetrieval": {
      "text": "light"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.075Z"
  },
  {
    "cursorRetrieval": {
      "text": "red"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.076Z"
  },
  {
    "cursorRetrieval": {
      "text": " }"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.076Z"
  },
  {
    "cursorRetrieval": {
      "text": " ==="
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.076Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.076Z"
  },
  {
    "cursorRetrieval": {
      "text": " '"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.076Z"
  },
  {
    "cursorRetrieval": {
      "text": " else"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.076Z"
  },
  {
    "cursorRetrieval": {
      "text": " if"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.076Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.076Z"
  },
  {
    "cursorRetrieval": {
      "text": "red"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.076Z"
  },
  {
    "cursorRetrieval": {
      "text": " (light === 'green"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.076Z"
  },
  {
    "cursorRetrieval": {
      "text": " "
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.077Z"
  },
  {
    "cursorRetrieval": {
      "text": "')"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.077Z"
  },
  {
    "cursorRetrieval": {
      "text": "')"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.077Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.077Z"
  },
  {
    "cursorRetrieval": {
      "text": " document"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.077Z"
  },
  {
    "cursorRetrieval": {
      "text": " {\n    return 'yellow"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.077Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.077Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.077Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.441Z"
  },
  {
    "cursorRetrieval": {
      "text": "body"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.443Z"
  },
  {
    "cursorRetrieval": {
      "text": "   "
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.443Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.444Z"
  },
  {
    "cursorRetrieval": {
      "text": ".appendChild(light"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.444Z"
  },
  {
    "cursorRetrieval": {
      "text": " return"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.444Z"
  },
  {
    "cursorRetrieval": {
      "text": " "
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.445Z"
  },
  {
    "fullText": "function changeLight(light: string) {\n  const light = document.createElement('div');\n  light.style.width = '100px';\n  light.style.height = '100px';\n  light.style.backgroundColor = 'red';\n  document.body.appendChild(light);\n}",
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.446Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: string) {"
    },
    "fullText": "function changeLight(light: string) {\n  const light = document.createElement('div');\n  light.style.width = '100px';\n  light.style.height = '100px';\n  light.style.backgroundColor = 'red';\n  document.body.appendChild(light);\n}",
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.447Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && remaining reason && need to create newSuggestion according fullText, will attach onAcceptDisplayId to currentSuggestion if newSuggestion is not undefined",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "996c7f3d-8ff4-4e99-9b02-23dafe308dbe",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 15,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 20,
      "monotonicallyIncreasingSuggestionId": 13,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 40
      },
      "replaceText": "function changeLight(light: string) {\n  const light = document.createElement('div');\n  light.style.width = '100px';\n  light.style.height = '100px';\n  light.style.backgroundColor = 'red';\n  document.body.appendChild(light);\n}",
      "originalText": "function changeLight(light: string) {(l",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 40
      },
      "diffText": "function changeLight(light: string) {\n  const light = document.createElement('div');\n  light.style.width = '100px';\n  light.style.height = '100px';\n  light.style.backgroundColor = 'red';\n  document.body.appendChild(light);\n}",
      "fullOriginalText": "function changeLight(light: string) {(l",
      "suggestionTriggerTime": 1741525930178.9,
      "greens": [],
      "source": "typing",
      "requestId": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 21
      },
      "fusedCursorPredictionId": "9ce53549-6e4b-4558-8d62-c02b851c1ace",
      "undoRedoGroup": {
        "id": 14,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.447Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "9ce53549-6e4b-4558-8d62-c02b851c1ace",
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.448Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: string) {"
    },
    "fusedCursorPrediction": null,
    "predictionId": "9ce53549-6e4b-4558-8d62-c02b851c1ace",
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.451Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "9ce53549-6e4b-4558-8d62-c02b851c1ace",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:12.453Z"
  },
  {
    "cursorRetrieval": {
      "text": ");"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.454Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && currentSuggestion uniqueId is different && need to create newSuggestion according fullText",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "2020eac5-a582-444d-ae23-fbd54916e21d",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 16,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 19,
      "monotonicallyIncreasingSuggestionId": 14,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 21
      },
      "replaceText": "function changeLight(light: string) {\n  if (light === 'red') {\n    return 'green';\n  } else if (light === 'green') {\n    return 'yellow';\n  }\n}",
      "originalText": "function changeLight",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 21
      },
      "diffText": "function changeLight(light: string) {\n  if (light === 'red') {\n    return 'green';\n  } else if (light === 'green') {\n    return 'yellow';\n  }\n}",
      "fullOriginalText": "function changeLight",
      "suggestionTriggerTime": 1741525930315.6,
      "greens": [],
      "source": "typing",
      "requestId": "10aeb127-11a5-42f4-91ce-094cf4f53419",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 21
      },
      "fusedCursorPredictionId": "d95dc506-f45d-4a4c-b4d8-270af9feda49",
      "undoRedoGroup": {
        "id": 15,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.455Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: string) {"
    },
    "fullText": "function changeLight(light: string) {\n  if (light === 'red') {\n    return 'green';\n  } else if (light === 'green') {\n    return 'yellow';\n  }\n}",
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.455Z"
  },
  {
    "fullText": "function changeLight(light: string) {\n  if (light === 'red') {\n    return 'green';\n  } else if (light === 'green') {\n    return 'yellow';\n  }\n}",
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.456Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "d95dc506-f45d-4a4c-b4d8-270af9feda49",
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.457Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: string) {"
    },
    "fusedCursorPrediction": null,
    "predictionId": "d95dc506-f45d-4a4c-b4d8-270af9feda49",
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.458Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "d95dc506-f45d-4a4c-b4d8-270af9feda49",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:12.459Z"
  },
  {
    "cursorRetrieval": {
      "text": " '"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.460Z"
  },
  {
    "fullText": "function changeLight(light: string) {\n  if (light === 'red') {\n    return 'green';\n  }\n  return 'red';\n}\n",
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.460Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: string) {"
    },
    "fullText": "function changeLight(light: string) {\n  if (light === 'red') {\n    return 'green';\n  }\n  return 'red';\n}\n",
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.461Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && currentSuggestion uniqueId is different && need to create newSuggestion according fullText",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "0bc7e8fd-d172-4dc6-a5bc-f1da68239d6c",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 17,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 19,
      "monotonicallyIncreasingSuggestionId": 15,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 21
      },
      "replaceText": "function changeLight(light: string) {\n  if (light === 'red') {\n    return 'green';\n  }\n  return 'red';\n}\n",
      "originalText": "function changeLight",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 21
      },
      "diffText": "function changeLight(light: string) {\n  if (light === 'red') {\n    return 'green';\n  }\n  return 'red';\n}\n",
      "fullOriginalText": "function changeLight",
      "suggestionTriggerTime": 1741525930432.1,
      "greens": [],
      "source": "typing",
      "requestId": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 21
      },
      "fusedCursorPredictionId": "6bb4fa0b-d4f6-4340-b46f-64988dbf19c6",
      "undoRedoGroup": {
        "id": 16,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.462Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "6bb4fa0b-d4f6-4340-b46f-64988dbf19c6",
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.463Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: string) {"
    },
    "fusedCursorPrediction": null,
    "predictionId": "6bb4fa0b-d4f6-4340-b46f-64988dbf19c6",
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.463Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "6bb4fa0b-d4f6-4340-b46f-64988dbf19c6",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:12.464Z"
  },
  {
    "cursorRetrieval": {
      "text": " }"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.465Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n}"
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.466Z"
  },
  {
    "cursorRetrieval": {
      "text": "green"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.466Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.467Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "9a42fd91-aed1-456e-b148-2024ccb2fa5f",
    "timestamp": "2025-03-09T13:12:12.467Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.467Z"
  },
  {
    "cursorRetrieval": {
      "text": "}"
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.468Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.469Z"
  },
  {
    "cursorRetrieval": {
      "text": " }"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.470Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "10aeb127-11a5-42f4-91ce-094cf4f53419",
    "timestamp": "2025-03-09T13:12:12.470Z"
  },
  {
    "cursorRetrieval": {
      "text": " "
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.470Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.470Z"
  },
  {
    "cursorRetrieval": {
      "text": " return"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.470Z"
  },
  {
    "cursorRetrieval": {
      "text": " 'red"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.471Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.471Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.471Z"
  },
  {
    "cursorRetrieval": {
      "text": "}"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.471Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.472Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "2fc4b4cf-702a-4149-b5e0-7d4ffb492d3c",
    "timestamp": "2025-03-09T13:12:12.472Z"
  },
  {
    "intent": "typing",
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:13.898Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: T)\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Type expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 30
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Function implementation is missing or not immediately following the declaration.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight', which lacks return-type annotation, implicitly has an 'any' return type.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: Type expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 28
              },
              "endPosition": {
                "line": 1,
                "column": 28
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: T)",
        "cursorPosition": {
          "line": 0,
          "column": 29
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 26,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525933936,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.199951171875,
      "timeAtRequestSend": 1741525933936
    },
    "generateUuid": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:13.938Z"
  },
  {
    "intent": "typing",
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:14.182Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: Tr)\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Type expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 30
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Function implementation is missing or not immediately following the declaration.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight', which lacks return-type annotation, implicitly has an 'any' return type.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: Tr)",
        "cursorPosition": {
          "line": 0,
          "column": 30
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 27,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525934217,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.199951171875,
      "timeAtRequestSend": 1741525934217
    },
    "generateUuid": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:14.220Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.345Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight(light: Traffic",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 1
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.346Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.363Z"
  },
  {
    "cursorRetrieval": {
      "text": ")"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.429Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.430Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.430Z"
  },
  {
    "firstChunkValue": "function changeLight(light: TrafficLight) {",
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.431Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.431Z"
  },
  {
    "cursorRetrieval": {
      "text": " light"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.431Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.431Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.432Z"
  },
  {
    "cursorRetrieval": {
      "text": " 'green"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.432Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n}"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.622Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.623Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.623Z"
  },
  {
    "cursorRetrieval": {
      "text": "const"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.624Z"
  },
  {
    "cursorRetrieval": {
      "text": " light"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.624Z"
  },
  {
    "cursorRetrieval": {
      "text": " = '"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.624Z"
  },
  {
    "cursorRetrieval": {
      "text": "red"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.625Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.625Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.625Z"
  },
  {
    "cursorRetrieval": {
      "text": "change"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.625Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light("
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.625Z"
  },
  {
    "cursorRetrieval": {
      "text": "light);"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.626Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.626Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.626Z"
  },
  {
    "fullText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\n",
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.632Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {"
    },
    "fullText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\n",
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.633Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && remaining reason && need to create newSuggestion according fullText, will attach onAcceptDisplayId to currentSuggestion if newSuggestion is not undefined",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "57b9f747-3568-4f55-9aaa-51590cd7f0f5",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 26,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 28,
      "monotonicallyIncreasingSuggestionId": 17,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 43
      },
      "replaceText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\n",
      "originalText": "function changeLight(light: TrafficLight) ",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 43
      },
      "diffText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\n",
      "fullOriginalText": "function changeLight(light: TrafficLight) ",
      "suggestionTriggerTime": 1741525933884.1,
      "greens": [],
      "source": "typing",
      "requestId": "557c55e4-eb70-4469-9037-08767814e1be",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 32
      },
      "fusedCursorPredictionId": "7b525bc2-df11-475b-b5dd-276c2698b18c",
      "undoRedoGroup": {
        "id": 18,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.633Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "7b525bc2-df11-475b-b5dd-276c2698b18c",
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.634Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {"
    },
    "fusedCursorPrediction": null,
    "predictionId": "7b525bc2-df11-475b-b5dd-276c2698b18c",
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:14.634Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "7b525bc2-df11-475b-b5dd-276c2698b18c",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:14.635Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:14.729Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight(light: Traffic",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 1
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:14.730Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:14.758Z"
  },
  {
    "firstChunkValue": "function changeLight(light: TrafficLight) {",
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:14.811Z"
  },
  {
    "cursorRetrieval": {
      "text": ")"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:14.813Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:14.813Z"
  },
  {
    "cursorRetrieval": {
      "text": " light"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:14.814Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:14.814Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:14.814Z"
  },
  {
    "cursorRetrieval": {
      "text": " 'green"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:14.814Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:14.815Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:14.815Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n}"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:14.842Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:14.844Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:14.844Z"
  },
  {
    "cursorRetrieval": {
      "text": "const"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:15.041Z"
  },
  {
    "cursorRetrieval": {
      "text": " = '"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:15.043Z"
  },
  {
    "cursorRetrieval": {
      "text": " light"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:15.044Z"
  },
  {
    "cursorRetrieval": {
      "text": "red"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:15.045Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:15.046Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:15.046Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light("
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:15.046Z"
  },
  {
    "fullText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\n",
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:15.049Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {"
    },
    "fullText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\n",
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:15.050Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && currentSuggestion uniqueId is different && need to create newSuggestion according fullText",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "fb85dfc9-261c-4257-ae70-4005f7148ff3",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 27,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 27,
      "monotonicallyIncreasingSuggestionId": 19,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 32
      },
      "replaceText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\n",
      "originalText": "function changeLight(light: Tr)",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 32
      },
      "diffText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\n",
      "fullOriginalText": "function changeLight(light: Tr)",
      "suggestionTriggerTime": 1741525934166,
      "greens": [],
      "source": "typing",
      "requestId": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 32
      },
      "fusedCursorPredictionId": "8c76e970-2782-42d9-a479-a857aa544727",
      "undoRedoGroup": {
        "id": 20,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:15.051Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "8c76e970-2782-42d9-a479-a857aa544727",
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:15.051Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {"
    },
    "fusedCursorPrediction": null,
    "predictionId": "8c76e970-2782-42d9-a479-a857aa544727",
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:15.052Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "8c76e970-2782-42d9-a479-a857aa544727",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:15.052Z"
  },
  {
    "cursorRetrieval": {
      "text": "change"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:15.052Z"
  },
  {
    "cursorRetrieval": {
      "text": "light);"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:15.053Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:15.053Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "fda4c4cd-87be-4855-aac6-b0d2df5367d8",
    "timestamp": "2025-03-09T13:12:15.054Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "6863f474-5b0e-4e3d-9636-c998eb9d70d7",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 26,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 26,
      "monotonicallyIncreasingSuggestionId": 16,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 32
      },
      "replaceText": "function changeLight(light: TrafficLight) {",
      "originalText": "function changeLight(light: T)",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 32
      },
      "diffText": "function changeLight(light: TrafficLight) {",
      "fullOriginalText": "function changeLight(light: T)",
      "suggestionTriggerTime": 1741525933884.1,
      "greens": [],
      "source": "typing",
      "requestId": "557c55e4-eb70-4469-9037-08767814e1be",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 32
      },
      "undoRedoGroup": {
        "id": 17,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "abortController": {},
      "trackedRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumber": 1,
        "endColumn": 32
      },
      "trackedText": "function changeLight(light: Tr)",
      "decorationId": "f;95",
      "onAcceptDisplayId": "57b9f747-3568-4f55-9aaa-51590cd7f0f5"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:15.108Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "6863f474-5b0e-4e3d-9636-c998eb9d70d7",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 26,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 26,
      "monotonicallyIncreasingSuggestionId": 16,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 32
      },
      "replaceText": "function changeLight(light: TrafficLight) {",
      "originalText": "function changeLight(light: T)",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 32
      },
      "diffText": "function changeLight(light: TrafficLight) {",
      "fullOriginalText": "function changeLight(light: T)",
      "suggestionTriggerTime": 1741525933884.1,
      "greens": [],
      "source": "typing",
      "requestId": "557c55e4-eb70-4469-9037-08767814e1be",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 32
      },
      "undoRedoGroup": {
        "id": 17,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "abortController": {},
      "trackedRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumber": 1,
        "endColumn": 32
      },
      "trackedText": "function changeLight(light: Tr)",
      "decorationId": "f;95",
      "onAcceptDisplayId": "57b9f747-3568-4f55-9aaa-51590cd7f0f5"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:15.121Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "57b9f747-3568-4f55-9aaa-51590cd7f0f5",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 26,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 28,
      "monotonicallyIncreasingSuggestionId": 17,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 43
      },
      "replaceText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\n",
      "originalText": "function changeLight(light: TrafficLight) ",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 43
      },
      "diffText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\n",
      "fullOriginalText": "function changeLight(light: TrafficLight) ",
      "suggestionTriggerTime": 1741525933884.1,
      "greens": [],
      "source": "typing",
      "requestId": "557c55e4-eb70-4469-9037-08767814e1be",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 32
      },
      "fusedCursorPredictionId": "7b525bc2-df11-475b-b5dd-276c2698b18c",
      "undoRedoGroup": {
        "id": 18,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;109"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:15.673Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "57b9f747-3568-4f55-9aaa-51590cd7f0f5",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 26,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 28,
      "monotonicallyIncreasingSuggestionId": 17,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 43
      },
      "replaceText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\n",
      "originalText": "function changeLight(light: TrafficLight) ",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 43
      },
      "diffText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\n",
      "fullOriginalText": "function changeLight(light: TrafficLight) ",
      "suggestionTriggerTime": 1741525933884.1,
      "greens": [],
      "source": "typing",
      "requestId": "557c55e4-eb70-4469-9037-08767814e1be",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 32
      },
      "fusedCursorPredictionId": "7b525bc2-df11-475b-b5dd-276c2698b18c",
      "undoRedoGroup": {
        "id": 18,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;109"
    },
    "generationUUID": "557c55e4-eb70-4469-9037-08767814e1be",
    "timestamp": "2025-03-09T13:12:15.681Z"
  },
  {
    "getFromDB": "predictionId",
    "possibleInvokeReason": "no suggestion but has predictionId",
    "predictionId": "7b525bc2-df11-475b-b5dd-276c2698b18c",
    "fusedCursorPrediction": null,
    "oldText": "function changeLight(light: TrafficLight) ",
    "newText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\n",
    "timestamp": "2025-03-09T13:12:15.682Z"
  },
  {
    "intent": "line_change",
    "generationUUID": "6cb3be3a-cba7-4735-ae76-d492a79b7d44",
    "timestamp": "2025-03-09T13:12:16.374Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n5+|const light = 'red';\n6+|changeLight(light);\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "'light' is assigned a value but never used.",
            "range": {
              "startPosition": {
                "line": 2,
                "column": 3
              },
              "endPosition": {
                "line": 2,
                "column": 8
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\n",
        "cursorPosition": {
          "line": 5,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 29,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1741525936421,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50.800048828125,
      "timeAtRequestSend": 1741525936421
    },
    "generateUuid": "6cb3be3a-cba7-4735-ae76-d492a79b7d44",
    "timestamp": "2025-03-09T13:12:16.424Z"
  },
  {
    "intent": "typing",
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:16.706Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n5+|const light = 'red';\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'light' is assigned a value but never used.",
            "range": {
              "startPosition": {
                "line": 2,
                "column": 3
              },
              "endPosition": {
                "line": 2,
                "column": 8
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'light' is assigned a value but never used.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 7
              },
              "endPosition": {
                "line": 5,
                "column": 12
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\n",
        "cursorPosition": {
          "line": 5,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 30,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525936741,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.10009765625,
      "timeAtRequestSend": 1741525936741
    },
    "generateUuid": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:16.743Z"
  },
  {
    "intent": "lint_errors",
    "generationUUID": "c49e78cf-2ec6-4e0b-8638-3b89a874f58c",
    "timestamp": "2025-03-09T13:12:16.920Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n5+|const light = 'red';\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'light' is assigned a value but never used.",
            "range": {
              "startPosition": {
                "line": 2,
                "column": 3
              },
              "endPosition": {
                "line": 2,
                "column": 8
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'light' is assigned a value but never used.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 7
              },
              "endPosition": {
                "line": 5,
                "column": 12
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\n",
        "cursorPosition": {
          "line": 4,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 30,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "lint_errors"
      },
      "clientTime": 1741525936954,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.800048828125,
      "timeAtRequestSend": 1741525936955
    },
    "generateUuid": "c49e78cf-2ec6-4e0b-8638-3b89a874f58c",
    "timestamp": "2025-03-09T13:12:16.957Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.131Z"
  },
  {
    "cursorRetrieval": {
      "text": "const light = 'red';\nchange",
      "rangeToReplace": {
        "startLineNumber": 5,
        "endLineNumberInclusive": 6
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.133Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light("
    },
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.158Z"
  },
  {
    "cursorRetrieval": {
      "text": "light);"
    },
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.166Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nconsole"
    },
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.210Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.211Z"
  },
  {
    "cursorRetrieval": {
      "text": "log"
    },
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.212Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.212Z"
  },
  {
    "firstChunkValue": "const light = 'red';\nchangeLight(light);",
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.217Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.219Z"
  },
  {
    "cursorRetrieval": {
      "text": "light"
    },
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.238Z"
  },
  {
    "cursorRetrieval": {
      "text": ");"
    },
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.239Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.240Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.248Z"
  },
  {
    "fullText": "const light = 'red';\nchangeLight(light);\nconsole.log(light);\n",
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.249Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nlight = 'green';\n}\n\nconst light = 'red';",
      "shouldRetriggerCpp": true
    },
    "predictionId": "aa7e25c7-aaaf-4ea6-a45f-0d812eae6fd6",
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.333Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is false",
    "invokePlace": "before this.displayFusedCursorPrediction, about to show prediction icon",
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nlight = 'green';\n}\n\nconst light = 'red';",
      "shouldRetriggerCpp": true
    },
    "predictionId": "aa7e25c7-aaaf-4ea6-a45f-0d812eae6fd6",
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.334Z"
  },
  {
    "action": "displayFusedCursorPrediction",
    "predictionId": "aa7e25c7-aaaf-4ea6-a45f-0d812eae6fd6",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nlight = 'green';\n}\n\nconst light = 'red';",
      "shouldRetriggerCpp": true
    },
    "oldText": "",
    "newText": "",
    "timestamp": "2025-03-09T13:12:17.334Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nconst light = 'red';\nchange",
      "rangeToReplace": {
        "startLineNumber": 4,
        "endLineNumberInclusive": 6
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "c49e78cf-2ec6-4e0b-8638-3b89a874f58c",
    "timestamp": "2025-03-09T13:12:17.335Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 1,
        "expectedContent": "function changeLight(light: TrafficLight) {\nlight = 'green';\n}\n\nconst light = 'red';",
        "shouldRetriggerCpp": true
      }
    },
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.335Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "e501c4fb-5e60-4018-b4de-7560240f73c8",
    "timestamp": "2025-03-09T13:12:17.335Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "c49e78cf-2ec6-4e0b-8638-3b89a874f58c",
    "timestamp": "2025-03-09T13:12:17.336Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light("
    },
    "generationUUID": "c49e78cf-2ec6-4e0b-8638-3b89a874f58c",
    "timestamp": "2025-03-09T13:12:17.350Z"
  },
  {
    "intent": "typing",
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:17.407Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'light' is assigned a value but never used.",
            "range": {
              "startPosition": {
                "line": 2,
                "column": 3
              },
              "endPosition": {
                "line": 2,
                "column": 8
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'light' is assigned a value but never used.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 7
              },
              "endPosition": {
                "line": 5,
                "column": 12
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\n",
        "cursorPosition": {
          "line": 4,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 31,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525937448,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50.7998046875,
      "timeAtRequestSend": 1741525937448
    },
    "generateUuid": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:17.450Z"
  },
  {
    "intent": "line_change",
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:17.724Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'light' is assigned a value but never used.",
            "range": {
              "startPosition": {
                "line": 2,
                "column": 3
              },
              "endPosition": {
                "line": 2,
                "column": 8
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\n",
        "cursorPosition": {
          "line": 3,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 31,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1741525937769,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 55.2998046875,
      "timeAtRequestSend": 1741525937769
    },
    "generateUuid": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:17.771Z"
  },
  {
    "intent": "lint_errors",
    "generationUUID": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:17.859Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'light' is assigned a value but never used.",
            "range": {
              "startPosition": {
                "line": 2,
                "column": 3
              },
              "endPosition": {
                "line": 2,
                "column": 8
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\n",
        "cursorPosition": {
          "line": 2,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 31,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "lint_errors"
      },
      "clientTime": 1741525937910,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 54.7998046875,
      "timeAtRequestSend": 1741525937910
    },
    "generateUuid": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:17.912Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nconst",
      "rangeToReplace": {
        "startLineNumber": 4,
        "endLineNumberInclusive": 5
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:17.950Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:17.953Z"
  },
  {
    "firstChunkValue": "\nconst light = 'red';",
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.110Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.112Z"
  },
  {
    "cursorRetrieval": {
      "text": " light"
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.112Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.113Z"
  },
  {
    "cursorRetrieval": {
      "text": " = 'red"
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.113Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nchange"
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.114Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light("
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.115Z"
  },
  {
    "cursorRetrieval": {
      "text": "light);"
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.135Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.137Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nconsole"
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.137Z"
  },
  {
    "fullText": "\nconst light = 'red';\nchangeLight(light);\nconsole.log(light);\n",
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.200Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.202Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.203Z"
  },
  {
    "cursorRetrieval": {
      "text": "log"
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.203Z"
  },
  {
    "cursorRetrieval": {
      "text": "light"
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.204Z"
  },
  {
    "cursorRetrieval": {
      "text": ");"
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.204Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.204Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.206Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 5
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.207Z"
  },
  {
    "cursorRetrieval": {
      "text": " light"
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.208Z"
  },
  {
    "cursorRetrieval": {
      "text": " = 'red"
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.208Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.208Z"
  },
  {
    "firstChunkValue": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';",
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.218Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.220Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nchange"
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.220Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light("
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.221Z"
  },
  {
    "cursorRetrieval": {
      "text": "light);"
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.221Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.283Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nconsole"
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.285Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.286Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nlight = 'green';\n}\n\nconst light = 'red';",
      "shouldRetriggerCpp": true
    },
    "predictionId": "dd117faa-b25f-4804-8199-eb302e463dd9",
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.286Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 1,
        "expectedContent": "function changeLight(light: TrafficLight) {\nlight = 'green';\n}\n\nconst light = 'red';",
        "shouldRetriggerCpp": true
      }
    },
    "generationUUID": "88f3c6a1-a293-484b-a4e8-8327ed4e1039",
    "timestamp": "2025-03-09T13:12:18.287Z"
  },
  {
    "cursorRetrieval": {
      "text": "log"
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.288Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.289Z"
  },
  {
    "fullText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\nconsole.log(light);\n",
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.290Z"
  },
  {
    "cursorRetrieval": {
      "text": "light"
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.290Z"
  },
  {
    "cursorRetrieval": {
      "text": ");"
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.290Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.291Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.291Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:18.301Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nfunction",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 5
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:18.301Z"
  },
  {
    "intent": "lint_errors",
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:18.418Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'light' is assigned a value but never used.",
            "range": {
              "startPosition": {
                "line": 2,
                "column": 3
              },
              "endPosition": {
                "line": 2,
                "column": 8
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\n",
        "cursorPosition": {
          "line": 1,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 31,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "lint_errors"
      },
      "clientTime": 1741525938462,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 52.5,
      "timeAtRequestSend": 1741525938462
    },
    "generateUuid": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:18.465Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:18.954Z"
  },
  {
    "cursorRetrieval": {
      "text": " changeLight2"
    },
    "generationUUID": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:18.957Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 5,
        "expectedContent": "",
        "shouldRetriggerCpp": true
      }
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.958Z"
  },
  {
    "firstChunkValue": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nfunction changeLight2(light: TrafficLight) {",
    "generationUUID": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:18.958Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 5,
      "text": "",
      "shouldRetriggerCpp": true
    },
    "predictionId": "44f6ad50-e380-41a3-8410-6574506ebe58",
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.959Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "7a87a01c-3cf2-4db0-a6e1-22af423c8faf",
    "timestamp": "2025-03-09T13:12:18.960Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nfunction changeLight2(light: TrafficLight) {"
    },
    "generationUUID": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:18.962Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:18.963Z"
  },
  {
    "cursorRetrieval": {
      "text": "light: TrafficLight) {\n "
    },
    "generationUUID": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:18.963Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n\n\n"
    },
    "generationUUID": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:18.964Z"
  },
  {
    "cursorRetrieval": {
      "text": " light = 'green';\n}"
    },
    "generationUUID": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:18.965Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:18.966Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:18.966Z"
  },
  {
    "fullText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nfunction changeLight2(light: TrafficLight) {\n  light = 'green';\n}\n\n\n\n",
    "generationUUID": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:18.967Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nfunction changeLight2(light: TrafficLight) {"
    },
    "fullText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nfunction changeLight2(light: TrafficLight) {\n  light = 'green';\n}\n\n\n\n",
    "generationUUID": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:18.967Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && remaining reason && need to create newSuggestion according fullText, will attach onAcceptDisplayId to currentSuggestion if newSuggestion is not undefined",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "744dd574-f892-453f-9141-08a8c80d71b2",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 31,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 32,
      "monotonicallyIncreasingSuggestionId": 21,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 5,
        "endColumn": 1
      },
      "replaceText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nfunction changeLight2(light: TrafficLight) {\n  light = 'green';\n}\n\n\n\n",
      "originalText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\n",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 5,
        "endColumn": 1
      },
      "diffText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nfunction changeLight2(light: TrafficLight) {\n  light = 'green';\n}\n\n\n\n",
      "fullOriginalText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\n",
      "suggestionTriggerTime": 1741525937855.1,
      "greens": [],
      "source": "lint_errors",
      "requestId": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 5,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "4aadef67-de59-4e96-b7cc-6cd96e2198af",
      "undoRedoGroup": {
        "id": 22,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:18.967Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 5
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:18.968Z"
  },
  {
    "cursorRetrieval": {
      "text": " light"
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:18.968Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "4aadef67-de59-4e96-b7cc-6cd96e2198af",
    "generationUUID": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:18.969Z"
  },
  {
    "cursorRetrieval": {
      "text": " = 'red"
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:18.970Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nfunction changeLight2(light: TrafficLight) {"
    },
    "fusedCursorPrediction": null,
    "predictionId": "4aadef67-de59-4e96-b7cc-6cd96e2198af",
    "generationUUID": "c5b2f1a0-39dd-4443-b7d5-46f55647b97f",
    "timestamp": "2025-03-09T13:12:18.970Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "4aadef67-de59-4e96-b7cc-6cd96e2198af",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:18.970Z"
  },
  {
    "firstChunkValue": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';",
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:18.971Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:18.971Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nchange"
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:18.971Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:18.971Z"
  },
  {
    "cursorRetrieval": {
      "text": "light);"
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:18.972Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light("
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:18.972Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nconsole"
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:18.972Z"
  },
  {
    "cursorRetrieval": {
      "text": "log"
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:18.972Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:18.973Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:18.973Z"
  },
  {
    "cursorRetrieval": {
      "text": "light"
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:19.047Z"
  },
  {
    "cursorRetrieval": {
      "text": ");"
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:19.049Z"
  },
  {
    "fullText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\nconsole.log(light);\n\n\n\n",
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:19.050Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "a488b66f-2bb5-4740-8f32-43a944e30c4d",
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:19.051Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:19.051Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:19.052Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n\n"
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:19.052Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "59308c1a-83c7-4370-8421-0c232c8066f6",
    "timestamp": "2025-03-09T13:12:19.053Z"
  },
  {
    "intent": "typing",
    "generationUUID": "4830f16b-b172-444d-9a22-ecc7637f7e2d",
    "timestamp": "2025-03-09T13:12:19.459Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'light' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 22
              },
              "endPosition": {
                "line": 1,
                "column": 27
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'light' is assigned a value but never used.",
            "range": {
              "startPosition": {
                "line": 2,
                "column": 3
              },
              "endPosition": {
                "line": 2,
                "column": 8
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n}\n\n",
        "cursorPosition": {
          "line": 1,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 32,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525939499,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.5,
      "timeAtRequestSend": 1741525939499
    },
    "generateUuid": "4830f16b-b172-444d-9a22-ecc7637f7e2d",
    "timestamp": "2025-03-09T13:12:19.501Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight(light: TrafficLight) {\n ",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 4
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "4830f16b-b172-444d-9a22-ecc7637f7e2d",
    "timestamp": "2025-03-09T13:12:20.011Z"
  },
  {
    "cursorRetrieval": {
      "text": " light = 'green';\n}"
    },
    "generationUUID": "4830f16b-b172-444d-9a22-ecc7637f7e2d",
    "timestamp": "2025-03-09T13:12:20.015Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "4830f16b-b172-444d-9a22-ecc7637f7e2d",
    "timestamp": "2025-03-09T13:12:20.028Z"
  },
  {
    "firstChunkValue": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}",
    "generationUUID": "4830f16b-b172-444d-9a22-ecc7637f7e2d",
    "timestamp": "2025-03-09T13:12:20.043Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "613ff018-258d-4574-a737-bee8b8938eb5",
    "generationUUID": "4830f16b-b172-444d-9a22-ecc7637f7e2d",
    "timestamp": "2025-03-09T13:12:20.044Z"
  },
  {
    "intent": "typing",
    "generationUUID": "1cd6e0df-7b04-40ce-a7ee-f19a96e924c6",
    "timestamp": "2025-03-09T13:12:20.045Z"
  },
  {
    "intent": "typing",
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.051Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'light' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 22
              },
              "endPosition": {
                "line": 1,
                "column": 27
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n\n}\n\n",
        "cursorPosition": {
          "line": 1,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 34,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525940092,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50,
      "timeAtRequestSend": 1741525940092
    },
    "generateUuid": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.094Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "timestamp": "2025-03-09T13:12:20.315Z"
  },
  {
    "intent": "typing",
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.325Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'light' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 22
              },
              "endPosition": {
                "line": 1,
                "column": 27
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  \n}\n\n",
        "cursorPosition": {
          "line": 1,
          "column": 2
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 35,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525940368,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 52.800048828125,
      "timeAtRequestSend": 1741525940368
    },
    "generateUuid": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.371Z"
  },
  {
    "intent": "typing",
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:20.618Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  s\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'light' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 22
              },
              "endPosition": {
                "line": 1,
                "column": 27
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 2,
                "column": 3
              },
              "endPosition": {
                "line": 2,
                "column": 4
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  s\n}\n\n",
        "cursorPosition": {
          "line": 1,
          "column": 3
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 36,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525940663,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 55.099853515625,
      "timeAtRequestSend": 1741525940663
    },
    "generateUuid": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:20.664Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.710Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight(light: TrafficLight) {\n ",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 4
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.713Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n\nconst"
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.714Z"
  },
  {
    "cursorRetrieval": {
      "text": " light = 'green';\n}"
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.714Z"
  },
  {
    "cursorRetrieval": {
      "text": " light"
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.714Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.715Z"
  },
  {
    "cursorRetrieval": {
      "text": " = 'red"
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.715Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light("
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.716Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nchange"
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.716Z"
  },
  {
    "cursorRetrieval": {
      "text": "light);"
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.716Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nconsole"
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.716Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.716Z"
  },
  {
    "cursorRetrieval": {
      "text": "log"
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.716Z"
  },
  {
    "cursorRetrieval": {
      "text": "light"
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.717Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.717Z"
  },
  {
    "cursorRetrieval": {
      "text": ");"
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.717Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.717Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.796Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.797Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight(light: TrafficLight) {\n ",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 4
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.799Z"
  },
  {
    "firstChunkValue": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\nconsole.log(light);\n",
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.800Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.803Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\nconsole.log(light);\n"
    },
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.804Z"
  },
  {
    "cursorRetrieval": {
      "text": " ("
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.804Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "13cd273d-49e5-45a4-84e0-f733b8d91910",
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.806Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {\n  light = 'green';\n}\n\nconst light = 'red';\nchangeLight(light);\nconsole.log(light);\n"
    },
    "fusedCursorPrediction": null,
    "predictionId": "13cd273d-49e5-45a4-84e0-f733b8d91910",
    "generationUUID": "1cf2e9d0-e800-43f6-8b80-77e5395dcf80",
    "timestamp": "2025-03-09T13:12:20.806Z"
  },
  {
    "cursorRetrieval": {
      "text": " switch"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.806Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "13cd273d-49e5-45a4-84e0-f733b8d91910",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:20.806Z"
  },
  {
    "cursorRetrieval": {
      "text": "light"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.806Z"
  },
  {
    "intent": "typing",
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:20.830Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  sw\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'light' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 22
              },
              "endPosition": {
                "line": 1,
                "column": 27
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 2,
                "column": 3
              },
              "endPosition": {
                "line": 2,
                "column": 5
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 2,
                "column": 3
              },
              "endPosition": {
                "line": 2,
                "column": 4
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  sw\n}\n\n",
        "cursorPosition": {
          "line": 1,
          "column": 4
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 37,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525940866,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": [
          {
            "label": "switch"
          },
          {
            "label": "SharedWorker"
          },
          {
            "label": "ServiceWorker"
          },
          {
            "label": "ServiceWorkerContainer"
          },
          {
            "label": "ServiceWorkerRegistration"
          },
          {
            "label": "SVGSwitchElement"
          },
          {
            "label": "ShadowRoot"
          },
          {
            "label": "SVGViewElement"
          },
          {
            "label": "FileSystemWritableFileStream"
          },
          {
            "label": "SVGFEDropShadowElement"
          },
          {
            "label": "WritableStreamDefaultWriter"
          }
        ]
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50.599853515625,
      "timeAtRequestSend": 1741525940866
    },
    "generateUuid": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:20.868Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.874Z"
  },
  {
    "cursorRetrieval": {
      "text": ")"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.874Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n   "
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.875Z"
  },
  {
    "firstChunkValue": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n",
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.875Z"
  },
  {
    "cursorRetrieval": {
      "text": " '"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.875Z"
  },
  {
    "cursorRetrieval": {
      "text": " case"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.875Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.875Z"
  },
  {
    "cursorRetrieval": {
      "text": "red"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.875Z"
  },
  {
    "cursorRetrieval": {
      "text": "':"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.876Z"
  },
  {
    "cursorRetrieval": {
      "text": "     "
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.876Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.876Z"
  },
  {
    "cursorRetrieval": {
      "text": " return"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.877Z"
  },
  {
    "cursorRetrieval": {
      "text": " '"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.884Z"
  },
  {
    "cursorRetrieval": {
      "text": "';\n   "
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.953Z"
  },
  {
    "cursorRetrieval": {
      "text": " case 'green"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.954Z"
  },
  {
    "cursorRetrieval": {
      "text": "green"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.954Z"
  },
  {
    "cursorRetrieval": {
      "text": "':"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.954Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.954Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n      "
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.955Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n      return 'yellow"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.955Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.955Z"
  },
  {
    "cursorRetrieval": {
      "text": " "
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.961Z"
  },
  {
    "cursorRetrieval": {
      "text": " }"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:20.967Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:21.039Z"
  },
  {
    "cursorRetrieval": {
      "text": "}"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:21.040Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:21.040Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:21.041Z"
  },
  {
    "fullText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n      \n  }\n}\n",
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:21.044Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n"
    },
    "fullText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n      \n  }\n}\n",
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:21.045Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && remaining reason && need to create newSuggestion according fullText, will attach onAcceptDisplayId to currentSuggestion if newSuggestion is not undefined",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "836dd57f-01ea-48f4-a3d1-4711a2e48caa",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 35,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 38,
      "monotonicallyIncreasingSuggestionId": 24,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "replaceText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n      \n  }\n}\n",
      "originalText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "diffText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n      \n  }\n}\n",
      "fullOriginalText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n",
      "suggestionTriggerTime": 1741525940315.4,
      "greens": [],
      "source": "typing",
      "requestId": "1326056f-aad3-4f87-a214-78270e950f50",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "70496797-1678-44e6-84c2-94176bfad4d3",
      "undoRedoGroup": {
        "id": 25,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:21.046Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "70496797-1678-44e6-84c2-94176bfad4d3",
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:21.046Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n"
    },
    "fusedCursorPrediction": null,
    "predictionId": "70496797-1678-44e6-84c2-94176bfad4d3",
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:21.047Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "70496797-1678-44e6-84c2-94176bfad4d3",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:21.047Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.056Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight(light: TrafficLight) {\n  switch",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 4
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.058Z"
  },
  {
    "cursorRetrieval": {
      "text": " ("
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.059Z"
  },
  {
    "firstChunkValue": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n",
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.126Z"
  },
  {
    "cursorRetrieval": {
      "text": "light"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.131Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.133Z"
  },
  {
    "cursorRetrieval": {
      "text": ")"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.134Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.135Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n   "
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.136Z"
  },
  {
    "cursorRetrieval": {
      "text": " case"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.136Z"
  },
  {
    "cursorRetrieval": {
      "text": " '"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.137Z"
  },
  {
    "cursorRetrieval": {
      "text": "red"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.138Z"
  },
  {
    "cursorRetrieval": {
      "text": "':"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.139Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.139Z"
  },
  {
    "cursorRetrieval": {
      "text": "     "
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.144Z"
  },
  {
    "cursorRetrieval": {
      "text": " return"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.145Z"
  },
  {
    "cursorRetrieval": {
      "text": " '"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.145Z"
  },
  {
    "cursorRetrieval": {
      "text": "green"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.145Z"
  },
  {
    "cursorRetrieval": {
      "text": "';\n   "
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.413Z"
  },
  {
    "cursorRetrieval": {
      "text": " case 'green"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.413Z"
  },
  {
    "cursorRetrieval": {
      "text": "':"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.414Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n      return 'yellow"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.414Z"
  },
  {
    "fullText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n      \n  }\n}\n",
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.414Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n"
    },
    "fullText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n      \n  }\n}\n",
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.415Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && currentSuggestion uniqueId is different && need to create newSuggestion according fullText",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "562c00f8-c327-476b-a0eb-c783d873582e",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 36,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 37,
      "monotonicallyIncreasingSuggestionId": 26,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "replaceText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n      \n  }\n}\n",
      "originalText": "function changeLight(light: TrafficLight) {\n  sw\n}\n",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "diffText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n      \n  }\n}\n",
      "fullOriginalText": "function changeLight(light: TrafficLight) {\n  sw\n}\n",
      "suggestionTriggerTime": 1741525940607.3,
      "greens": [],
      "source": "typing",
      "requestId": "f483c09d-56e7-4854-a06a-b8910eb621d7",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "30ba38b4-c911-4388-80d6-3be8fc9be506",
      "undoRedoGroup": {
        "id": 27,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.415Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "30ba38b4-c911-4388-80d6-3be8fc9be506",
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.415Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n"
    },
    "fusedCursorPrediction": null,
    "predictionId": "30ba38b4-c911-4388-80d6-3be8fc9be506",
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.416Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "30ba38b4-c911-4388-80d6-3be8fc9be506",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:21.416Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.416Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n      "
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.416Z"
  },
  {
    "cursorRetrieval": {
      "text": " "
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.416Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.417Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.417Z"
  },
  {
    "cursorRetrieval": {
      "text": " }"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.417Z"
  },
  {
    "cursorRetrieval": {
      "text": "}"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.417Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.417Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "f483c09d-56e7-4854-a06a-b8910eb621d7",
    "timestamp": "2025-03-09T13:12:21.417Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.492Z"
  },
  {
    "firstChunkValue": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n",
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.493Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight(light: TrafficLight) {\n  switch",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 4
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.501Z"
  },
  {
    "cursorRetrieval": {
      "text": " ("
    },
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.501Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n"
    },
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.501Z"
  },
  {
    "cursorRetrieval": {
      "text": ")"
    },
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.502Z"
  },
  {
    "cursorRetrieval": {
      "text": "light"
    },
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.502Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n   "
    },
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.503Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.503Z"
  },
  {
    "cursorRetrieval": {
      "text": " case"
    },
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.503Z"
  },
  {
    "cursorRetrieval": {
      "text": " '"
    },
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.503Z"
  },
  {
    "cursorRetrieval": {
      "text": "red"
    },
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.503Z"
  },
  {
    "cursorRetrieval": {
      "text": "':"
    },
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.504Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.504Z"
  },
  {
    "cursorRetrieval": {
      "text": "     "
    },
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.504Z"
  },
  {
    "cursorRetrieval": {
      "text": " return"
    },
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.504Z"
  },
  {
    "cursorRetrieval": {
      "text": " '"
    },
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.504Z"
  },
  {
    "cursorRetrieval": {
      "text": "green"
    },
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.505Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "e1a56930-1dad-4ca7-9eaf-f999c0c12719",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 35,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 35,
      "monotonicallyIncreasingSuggestionId": 23,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "replaceText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n",
      "originalText": "function changeLight(light: TrafficLight) {\n  \n}\n",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "diffText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n",
      "fullOriginalText": "function changeLight(light: TrafficLight) {\n  \n}\n",
      "suggestionTriggerTime": 1741525940315.4,
      "greens": [],
      "source": "typing",
      "requestId": "1326056f-aad3-4f87-a214-78270e950f50",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "undoRedoGroup": {
        "id": 24,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "abortController": {},
      "trackedRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumber": 4,
        "endColumn": 1
      },
      "trackedText": "function changeLight(light: TrafficLight) {\n  sw\n}\n",
      "decorationId": "f;139",
      "onAcceptDisplayId": "836dd57f-01ea-48f4-a3d1-4711a2e48caa"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:21.510Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "e1a56930-1dad-4ca7-9eaf-f999c0c12719",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 35,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 35,
      "monotonicallyIncreasingSuggestionId": 23,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "replaceText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n",
      "originalText": "function changeLight(light: TrafficLight) {\n  \n}\n",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "diffText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n",
      "fullOriginalText": "function changeLight(light: TrafficLight) {\n  \n}\n",
      "suggestionTriggerTime": 1741525940315.4,
      "greens": [],
      "source": "typing",
      "requestId": "1326056f-aad3-4f87-a214-78270e950f50",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "undoRedoGroup": {
        "id": 24,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "abortController": {},
      "trackedRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumber": 4,
        "endColumn": 1
      },
      "trackedText": "function changeLight(light: TrafficLight) {\n  sw\n}\n",
      "decorationId": "f;139",
      "onAcceptDisplayId": "836dd57f-01ea-48f4-a3d1-4711a2e48caa"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:21.549Z"
  },
  {
    "fullText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green",
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.561Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "33d57c89-1688-44f8-b0cd-5895cdebefcb",
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.563Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n"
    },
    "fusedCursorPrediction": null,
    "predictionId": "33d57c89-1688-44f8-b0cd-5895cdebefcb",
    "generationUUID": "8a058db4-d9d9-4802-9f75-c8d5f9697029",
    "timestamp": "2025-03-09T13:12:21.564Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "33d57c89-1688-44f8-b0cd-5895cdebefcb",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:21.564Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "836dd57f-01ea-48f4-a3d1-4711a2e48caa",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 35,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 38,
      "monotonicallyIncreasingSuggestionId": 24,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "replaceText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n      \n  }\n}\n",
      "originalText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "diffText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n      \n  }\n}\n",
      "fullOriginalText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n",
      "suggestionTriggerTime": 1741525940315.4,
      "greens": [],
      "source": "typing",
      "requestId": "1326056f-aad3-4f87-a214-78270e950f50",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "70496797-1678-44e6-84c2-94176bfad4d3",
      "undoRedoGroup": {
        "id": 25,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;146"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:22.094Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "836dd57f-01ea-48f4-a3d1-4711a2e48caa",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 35,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 38,
      "monotonicallyIncreasingSuggestionId": 24,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "replaceText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n      \n  }\n}\n",
      "originalText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "diffText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n      \n  }\n}\n",
      "fullOriginalText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n",
      "suggestionTriggerTime": 1741525940315.4,
      "greens": [],
      "source": "typing",
      "requestId": "1326056f-aad3-4f87-a214-78270e950f50",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "70496797-1678-44e6-84c2-94176bfad4d3",
      "undoRedoGroup": {
        "id": 25,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;146"
    },
    "generationUUID": "1326056f-aad3-4f87-a214-78270e950f50",
    "timestamp": "2025-03-09T13:12:22.101Z"
  },
  {
    "getFromDB": "predictionId",
    "possibleInvokeReason": "no suggestion but has predictionId",
    "predictionId": "70496797-1678-44e6-84c2-94176bfad4d3",
    "fusedCursorPrediction": null,
    "oldText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n",
    "newText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n      \n  }\n}\n",
    "timestamp": "2025-03-09T13:12:22.103Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "timestamp": "2025-03-09T13:12:22.918Z"
  },
  {
    "intent": "typing",
    "generationUUID": "b07d5a83-d636-450b-8f66-bdcf27b491ab",
    "timestamp": "2025-03-09T13:12:22.925Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "8-|  }\n8+|  } \n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n      \n  } \n}\n\n",
        "cursorPosition": {
          "line": 7,
          "column": 4
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 40,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525942969,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50.5,
      "timeAtRequestSend": 1741525942969
    },
    "generateUuid": "b07d5a83-d636-450b-8f66-bdcf27b491ab",
    "timestamp": "2025-03-09T13:12:22.971Z"
  },
  {
    "intent": "typing",
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:23.345Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|      \n7+|\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n\n  }\n}\n\n",
        "cursorPosition": {
          "line": 7,
          "column": 3
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 41,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525943389,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 53.39990234375,
      "timeAtRequestSend": 1741525943389
    },
    "generateUuid": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:23.391Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:23.772Z"
  },
  {
    "cursorRetrieval": {
      "text": "   ",
      "rangeToReplace": {
        "startLineNumber": 7,
        "endLineNumberInclusive": 10
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:23.773Z"
  },
  {
    "cursorRetrieval": {
      "text": " case 'yellow"
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:23.943Z"
  },
  {
    "cursorRetrieval": {
      "text": "':"
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:23.945Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n      return 'red"
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:23.945Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:23.946Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n   "
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:23.946Z"
  },
  {
    "cursorRetrieval": {
      "text": " default"
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:23.946Z"
  },
  {
    "cursorRetrieval": {
      "text": ":"
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:23.947Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:23.947Z"
  },
  {
    "cursorRetrieval": {
      "text": "     "
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:23.948Z"
  },
  {
    "cursorRetrieval": {
      "text": " return 'red"
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:23.948Z"
  },
  {
    "intent": "line_change",
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.111Z"
  },
  {
    "cursorRetrieval": {
      "text": "';\n"
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:24.116Z"
  },
  {
    "cursorRetrieval": {
      "text": " "
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:24.117Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:24.117Z"
  },
  {
    "cursorRetrieval": {
      "text": " }\n}"
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:24.118Z"
  },
  {
    "firstChunkValue": "    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n",
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:24.118Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
      "shouldRetriggerCpp": true
    },
    "predictionId": "f0bfafda-e7fc-4b7c-a91f-958c8cf110a8",
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:24.119Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n"
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:24.119Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:24.119Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n"
    },
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
      "shouldRetriggerCpp": true
    },
    "predictionId": "f0bfafda-e7fc-4b7c-a91f-958c8cf110a8",
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:24.120Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "f0bfafda-e7fc-4b7c-a91f-958c8cf110a8",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
      "shouldRetriggerCpp": true
    },
    "timestamp": "2025-03-09T13:12:24.120Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 1,
        "expectedContent": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
        "shouldRetriggerCpp": true
      }
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:24.120Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:24.121Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|      \n7+|\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n\n  }\n}\n\n",
        "cursorPosition": {
          "line": 6,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 41,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1741525944159,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 54.199951171875,
      "timeAtRequestSend": 1741525944159
    },
    "generateUuid": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.161Z"
  },
  {
    "cursorRetrieval": {
      "text": "      return 'green';\n    case 'green':\n      return 'yellow';\n   ",
      "rangeToReplace": {
        "startLineNumber": 4,
        "endLineNumberInclusive": 11
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.552Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.553Z"
  },
  {
    "firstChunkValue": "      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n  }\n}\n\n",
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.726Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n  }\n}\n\n"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.731Z"
  },
  {
    "cursorRetrieval": {
      "text": " case 'yellow"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.732Z"
  },
  {
    "cursorRetrieval": {
      "text": "':"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.733Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n      return 'red"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.734Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.735Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.736Z"
  },
  {
    "cursorRetrieval": {
      "text": " }\n}\n\nconst"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.737Z"
  },
  {
    "cursorRetrieval": {
      "text": " light"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.738Z"
  },
  {
    "cursorRetrieval": {
      "text": " = 'red"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.738Z"
  },
  {
    "fullText": "      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n  }\n}\n\nconst light = 'red';\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.805Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n  }\n}\n\n"
    },
    "fullText": "      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n  }\n}\n\nconst light = 'red';\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.808Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && currentSuggestion uniqueId is different && need to create newSuggestion according fullText",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "9c010f05-3b68-4ffd-ac02-27f7e55c29dd",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 41,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 41,
      "monotonicallyIncreasingSuggestionId": 30,
      "range": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 11,
        "endColumn": 1
      },
      "replaceText": "      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n  }\n}\n\nconst light = 'red';\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
      "originalText": "      return 'green';\n    case 'green':\n      return 'yellow';\n\n  }\n}\n\n",
      "startingSuggestionRange": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 11,
        "endColumn": 1
      },
      "diffText": "      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n  }\n}\n\nconst light = 'red';\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
      "fullOriginalText": "      return 'green';\n    case 'green':\n      return 'yellow';\n\n  }\n}\n\n",
      "suggestionTriggerTime": 1741525944104.6,
      "greens": [],
      "source": "line_change",
      "requestId": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
      "selection": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 11,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "0298b1b9-b0e9-449c-a6d3-edbf86f8978d",
      "undoRedoGroup": {
        "id": 31,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.810Z"
  },
  {
    "cursorRetrieval": {
      "text": "';\n"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.813Z"
  },
  {
    "cursorRetrieval": {
      "text": "const"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.814Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.814Z"
  },
  {
    "cursorRetrieval": {
      "text": " new"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.815Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.816Z"
  },
  {
    "cursorRetrieval": {
      "text": " change"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.816Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.817Z"
  },
  {
    "cursorRetrieval": {
      "text": "(light);"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.817Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nconsole"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.817Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.817Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.818Z"
  },
  {
    "cursorRetrieval": {
      "text": "log"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.818Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.818Z"
  },
  {
    "cursorRetrieval": {
      "text": "new"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.818Z"
  },
  {
    "cursorRetrieval": {
      "text": ");\n"
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.818Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.819Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
      "shouldRetriggerCpp": true
    },
    "predictionId": "0298b1b9-b0e9-449c-a6d3-edbf86f8978d",
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.916Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n  }\n}\n\n"
    },
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
      "shouldRetriggerCpp": true
    },
    "predictionId": "0298b1b9-b0e9-449c-a6d3-edbf86f8978d",
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.917Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "0298b1b9-b0e9-449c-a6d3-edbf86f8978d",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
      "shouldRetriggerCpp": true
    },
    "timestamp": "2025-03-09T13:12:24.918Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 1,
        "expectedContent": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
        "shouldRetriggerCpp": true
      }
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.919Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "1bed227f-7f31-4b47-a14b-3a1f28e87704",
    "timestamp": "2025-03-09T13:12:24.919Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "a45bd84c-9e22-48a0-ac15-c9e5b2e58c47",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 41,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 41,
      "monotonicallyIncreasingSuggestionId": 28,
      "range": {
        "startLineNumber": 7,
        "startColumn": 1,
        "endLineNumberInclusive": 10,
        "endColumn": 1
      },
      "replaceText": "    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n",
      "originalText": "\n  }\n}\n",
      "startingSuggestionRange": {
        "startLineNumber": 7,
        "startColumn": 1,
        "endLineNumberInclusive": 10,
        "endColumn": 1
      },
      "diffText": "    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n",
      "fullOriginalText": "\n  }\n}\n",
      "suggestionTriggerTime": 1741525943335.1,
      "greens": [],
      "source": "typing",
      "requestId": "6889297b-7e15-4f97-8d7a-344debfea572",
      "selection": {
        "startLineNumber": 7,
        "startColumn": 1,
        "endLineNumberInclusive": 10,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "f0bfafda-e7fc-4b7c-a91f-958c8cf110a8",
      "undoRedoGroup": {
        "id": 29,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;152"
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:25.394Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "a45bd84c-9e22-48a0-ac15-c9e5b2e58c47",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 41,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 41,
      "monotonicallyIncreasingSuggestionId": 28,
      "range": {
        "startLineNumber": 7,
        "startColumn": 1,
        "endLineNumberInclusive": 10,
        "endColumn": 1
      },
      "replaceText": "    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n",
      "originalText": "\n  }\n}\n",
      "startingSuggestionRange": {
        "startLineNumber": 7,
        "startColumn": 1,
        "endLineNumberInclusive": 10,
        "endColumn": 1
      },
      "diffText": "    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n",
      "fullOriginalText": "\n  }\n}\n",
      "suggestionTriggerTime": 1741525943335.1,
      "greens": [],
      "source": "typing",
      "requestId": "6889297b-7e15-4f97-8d7a-344debfea572",
      "selection": {
        "startLineNumber": 7,
        "startColumn": 1,
        "endLineNumberInclusive": 10,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "f0bfafda-e7fc-4b7c-a91f-958c8cf110a8",
      "undoRedoGroup": {
        "id": 29,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;152"
    },
    "generationUUID": "6889297b-7e15-4f97-8d7a-344debfea572",
    "timestamp": "2025-03-09T13:12:25.401Z"
  },
  {
    "getFromDB": "predictionId",
    "possibleInvokeReason": "no suggestion but has predictionId",
    "predictionId": "f0bfafda-e7fc-4b7c-a91f-958c8cf110a8",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
      "shouldRetriggerCpp": true
    },
    "oldText": "\n  }\n}\n",
    "newText": "    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n",
    "timestamp": "2025-03-09T13:12:25.402Z"
  },
  {
    "action": "displayFusedCursorPrediction",
    "predictionId": "f0bfafda-e7fc-4b7c-a91f-958c8cf110a8",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
      "shouldRetriggerCpp": true
    },
    "oldText": "\n  }\n}\n",
    "newText": "    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n",
    "timestamp": "2025-03-09T13:12:25.403Z"
  },
  {
    "intent": "cursor_prediction",
    "generationUUID": "32ebabb4-15d1-41b1-9daa-5036deb7b6a4",
    "timestamp": "2025-03-09T13:12:25.403Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n\n",
        "cursorPosition": {
          "line": 0,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 43,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "cursor_prediction"
      },
      "clientTime": 1741525945413,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 11.099853515625,
      "timeAtRequestSend": 1741525945413
    },
    "generateUuid": "32ebabb4-15d1-41b1-9daa-5036deb7b6a4",
    "timestamp": "2025-03-09T13:12:25.415Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "32ebabb4-15d1-41b1-9daa-5036deb7b6a4",
    "timestamp": "2025-03-09T13:12:25.791Z"
  },
  {
    "firstChunkValue": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';",
    "generationUUID": "32ebabb4-15d1-41b1-9daa-5036deb7b6a4",
    "timestamp": "2025-03-09T13:12:25.792Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "32ebabb4-15d1-41b1-9daa-5036deb7b6a4",
    "timestamp": "2025-03-09T13:12:25.792Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';"
    },
    "generationUUID": "32ebabb4-15d1-41b1-9daa-5036deb7b6a4",
    "timestamp": "2025-03-09T13:12:25.793Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 4
      },
      "doneEdit": true,
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "32ebabb4-15d1-41b1-9daa-5036deb7b6a4",
    "timestamp": "2025-03-09T13:12:25.793Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "32ebabb4-15d1-41b1-9daa-5036deb7b6a4",
    "timestamp": "2025-03-09T13:12:25.828Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "3a990934-3ad5-4b2a-b958-fa3bb2a91298",
    "generationUUID": "32ebabb4-15d1-41b1-9daa-5036deb7b6a4",
    "timestamp": "2025-03-09T13:12:25.891Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "timestamp": "2025-03-09T13:12:26.231Z"
  },
  {
    "intent": "lint_errors",
    "generationUUID": "9dbbca2e-fa7b-4d01-a06e-c959b6a661b1",
    "timestamp": "2025-03-09T13:12:26.249Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n\n",
        "cursorPosition": {
          "line": 0,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 43,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "lint_errors"
      },
      "clientTime": 1741525946248,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 1.2001953125,
      "timeAtRequestSend": 1741525946248
    },
    "generateUuid": "9dbbca2e-fa7b-4d01-a06e-c959b6a661b1",
    "timestamp": "2025-03-09T13:12:26.251Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "9dbbca2e-fa7b-4d01-a06e-c959b6a661b1",
    "timestamp": "2025-03-09T13:12:26.621Z"
  },
  {
    "firstChunkValue": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';",
    "generationUUID": "9dbbca2e-fa7b-4d01-a06e-c959b6a661b1",
    "timestamp": "2025-03-09T13:12:26.621Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "9dbbca2e-fa7b-4d01-a06e-c959b6a661b1",
    "timestamp": "2025-03-09T13:12:26.621Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';"
    },
    "generationUUID": "9dbbca2e-fa7b-4d01-a06e-c959b6a661b1",
    "timestamp": "2025-03-09T13:12:26.622Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 4
      },
      "doneEdit": true,
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "9dbbca2e-fa7b-4d01-a06e-c959b6a661b1",
    "timestamp": "2025-03-09T13:12:26.622Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "9dbbca2e-fa7b-4d01-a06e-c959b6a661b1",
    "timestamp": "2025-03-09T13:12:26.677Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "c8e1c3e7-1994-4580-b0b7-62b479a81734",
    "generationUUID": "9dbbca2e-fa7b-4d01-a06e-c959b6a661b1",
    "timestamp": "2025-03-09T13:12:26.712Z"
  },
  {
    "intent": "lint_errors",
    "generationUUID": "c09fb5bd-21f6-41e0-bccb-35d88ff00709",
    "timestamp": "2025-03-09T13:12:27.023Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n\n",
        "cursorPosition": {
          "line": 1,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 43,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "lint_errors"
      },
      "clientTime": 1741525947066,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 49.699951171875,
      "timeAtRequestSend": 1741525947066
    },
    "generateUuid": "c09fb5bd-21f6-41e0-bccb-35d88ff00709",
    "timestamp": "2025-03-09T13:12:27.067Z"
  },
  {
    "intent": "line_change",
    "generationUUID": "29bbb5f7-83be-474d-8faa-f0eea7e19f24",
    "timestamp": "2025-03-09T13:12:27.428Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 5
      },
      "doneEdit": true,
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "c09fb5bd-21f6-41e0-bccb-35d88ff00709",
    "timestamp": "2025-03-09T13:12:27.436Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "c09fb5bd-21f6-41e0-bccb-35d88ff00709",
    "timestamp": "2025-03-09T13:12:27.438Z"
  },
  {
    "firstChunkValue": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':",
    "generationUUID": "c09fb5bd-21f6-41e0-bccb-35d88ff00709",
    "timestamp": "2025-03-09T13:12:27.438Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "c09fb5bd-21f6-41e0-bccb-35d88ff00709",
    "timestamp": "2025-03-09T13:12:27.439Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':"
    },
    "generationUUID": "c09fb5bd-21f6-41e0-bccb-35d88ff00709",
    "timestamp": "2025-03-09T13:12:27.439Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "c09fb5bd-21f6-41e0-bccb-35d88ff00709",
    "timestamp": "2025-03-09T13:12:27.455Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n\n",
        "cursorPosition": {
          "line": 2,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 43,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1741525947475,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 54.599853515625,
      "timeAtRequestSend": 1741525947475
    },
    "generateUuid": "29bbb5f7-83be-474d-8faa-f0eea7e19f24",
    "timestamp": "2025-03-09T13:12:27.478Z"
  },
  {
    "intent": "line_change",
    "generationUUID": "e2913b06-11d8-483d-91e0-184fe2bdf495",
    "timestamp": "2025-03-09T13:12:27.601Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n\n",
        "cursorPosition": {
          "line": 3,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 43,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1741525947646,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50.60009765625,
      "timeAtRequestSend": 1741525947646
    },
    "generateUuid": "e2913b06-11d8-483d-91e0-184fe2bdf495",
    "timestamp": "2025-03-09T13:12:27.648Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "a7f281c0-98cc-4aa5-9f41-e8727df5009f",
    "generationUUID": "c09fb5bd-21f6-41e0-bccb-35d88ff00709",
    "timestamp": "2025-03-09T13:12:27.804Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "29bbb5f7-83be-474d-8faa-f0eea7e19f24",
    "timestamp": "2025-03-09T13:12:27.884Z"
  },
  {
    "firstChunkValue": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';",
    "generationUUID": "29bbb5f7-83be-474d-8faa-f0eea7e19f24",
    "timestamp": "2025-03-09T13:12:27.885Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "29bbb5f7-83be-474d-8faa-f0eea7e19f24",
    "timestamp": "2025-03-09T13:12:27.886Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 6
      },
      "doneEdit": true,
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "29bbb5f7-83be-474d-8faa-f0eea7e19f24",
    "timestamp": "2025-03-09T13:12:27.886Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "20d39bb4-b747-4ba6-9c57-13491bb02f25",
    "generationUUID": "29bbb5f7-83be-474d-8faa-f0eea7e19f24",
    "timestamp": "2025-03-09T13:12:27.887Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';"
    },
    "generationUUID": "29bbb5f7-83be-474d-8faa-f0eea7e19f24",
    "timestamp": "2025-03-09T13:12:27.887Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "29bbb5f7-83be-474d-8faa-f0eea7e19f24",
    "timestamp": "2025-03-09T13:12:27.887Z"
  },
  {
    "intent": "line_change",
    "generationUUID": "cbfa1e5f-36cc-4f52-b6ef-bff5c266a03a",
    "timestamp": "2025-03-09T13:12:27.942Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n\n",
        "cursorPosition": {
          "line": 2,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 43,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1741525947990,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 54.10009765625,
      "timeAtRequestSend": 1741525947990
    },
    "generateUuid": "cbfa1e5f-36cc-4f52-b6ef-bff5c266a03a",
    "timestamp": "2025-03-09T13:12:27.992Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "rangeToReplace": {
        "startLineNumber": 3,
        "endLineNumberInclusive": 7
      },
      "doneEdit": true,
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "e2913b06-11d8-483d-91e0-184fe2bdf495",
    "timestamp": "2025-03-09T13:12:28.630Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "e2913b06-11d8-483d-91e0-184fe2bdf495",
    "timestamp": "2025-03-09T13:12:28.631Z"
  },
  {
    "firstChunkValue": "    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':",
    "generationUUID": "e2913b06-11d8-483d-91e0-184fe2bdf495",
    "timestamp": "2025-03-09T13:12:28.631Z"
  },
  {
    "cursorRetrieval": {
      "text": "    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':"
    },
    "generationUUID": "e2913b06-11d8-483d-91e0-184fe2bdf495",
    "timestamp": "2025-03-09T13:12:28.631Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "e2913b06-11d8-483d-91e0-184fe2bdf495",
    "timestamp": "2025-03-09T13:12:28.631Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "e2913b06-11d8-483d-91e0-184fe2bdf495",
    "timestamp": "2025-03-09T13:12:28.632Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "891ee694-f711-44b6-a0a9-44af356ed00e",
    "generationUUID": "e2913b06-11d8-483d-91e0-184fe2bdf495",
    "timestamp": "2025-03-09T13:12:28.647Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "cbfa1e5f-36cc-4f52-b6ef-bff5c266a03a",
    "timestamp": "2025-03-09T13:12:28.713Z"
  },
  {
    "firstChunkValue": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';",
    "generationUUID": "cbfa1e5f-36cc-4f52-b6ef-bff5c266a03a",
    "timestamp": "2025-03-09T13:12:28.714Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 6
      },
      "doneEdit": true,
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "cbfa1e5f-36cc-4f52-b6ef-bff5c266a03a",
    "timestamp": "2025-03-09T13:12:28.715Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "cbfa1e5f-36cc-4f52-b6ef-bff5c266a03a",
    "timestamp": "2025-03-09T13:12:28.715Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';"
    },
    "generationUUID": "cbfa1e5f-36cc-4f52-b6ef-bff5c266a03a",
    "timestamp": "2025-03-09T13:12:28.716Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "cbfa1e5f-36cc-4f52-b6ef-bff5c266a03a",
    "timestamp": "2025-03-09T13:12:28.716Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "bb7116a3-7b6d-4db8-a294-0641637e1834",
    "generationUUID": "cbfa1e5f-36cc-4f52-b6ef-bff5c266a03a",
    "timestamp": "2025-03-09T13:12:28.718Z"
  },
  {
    "intent": "typing",
    "generationUUID": "fa65544f-4eb2-4361-8471-694ddb09cd02",
    "timestamp": "2025-03-09T13:12:30.995Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case 'red:\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: Unterminated string literal.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 14
              },
              "endPosition": {
                "line": 3,
                "column": 14
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'red:\n      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n\n",
        "cursorPosition": {
          "line": 2,
          "column": 13
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 44,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525951032,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.199951171875,
      "timeAtRequestSend": 1741525951032
    },
    "generateUuid": "fa65544f-4eb2-4361-8471-694ddb09cd02",
    "timestamp": "2025-03-09T13:12:31.034Z"
  },
  {
    "intent": "typing",
    "generationUUID": "7619f949-9ace-48bc-801e-101a85fa9390",
    "timestamp": "2025-03-09T13:12:31.095Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case 're:\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: Unterminated string literal.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 13
              },
              "endPosition": {
                "line": 3,
                "column": 13
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: Unterminated string literal.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 14
              },
              "endPosition": {
                "line": 3,
                "column": 14
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 're:\n      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n\n",
        "cursorPosition": {
          "line": 2,
          "column": 12
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 45,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525951135,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.39990234375,
      "timeAtRequestSend": 1741525951135
    },
    "generateUuid": "7619f949-9ace-48bc-801e-101a85fa9390",
    "timestamp": "2025-03-09T13:12:31.137Z"
  },
  {
    "intent": "typing",
    "generationUUID": "62bcd7bb-f96b-4da8-a8d1-8cb4f7860aae",
    "timestamp": "2025-03-09T13:12:31.216Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case 'r:\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: Unterminated string literal.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 12
              },
              "endPosition": {
                "line": 3,
                "column": 12
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: Unterminated string literal.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 13
              },
              "endPosition": {
                "line": 3,
                "column": 13
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case 'r:\n      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n\n",
        "cursorPosition": {
          "line": 2,
          "column": 11
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 46,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525951263,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50,
      "timeAtRequestSend": 1741525951263
    },
    "generateUuid": "62bcd7bb-f96b-4da8-a8d1-8cb4f7860aae",
    "timestamp": "2025-03-09T13:12:31.326Z"
  },
  {
    "intent": "typing",
    "generationUUID": "7f4cdf6a-f5cb-4955-8e81-ce996cf0e805",
    "timestamp": "2025-03-09T13:12:31.356Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case ':\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: Unterminated string literal.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 11
              },
              "endPosition": {
                "line": 3,
                "column": 11
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: Unterminated string literal.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 12
              },
              "endPosition": {
                "line": 3,
                "column": 12
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case ':\n      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n\n",
        "cursorPosition": {
          "line": 2,
          "column": 10
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 47,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525951399,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.199951171875,
      "timeAtRequestSend": 1741525951399
    },
    "generateUuid": "7f4cdf6a-f5cb-4955-8e81-ce996cf0e805",
    "timestamp": "2025-03-09T13:12:31.401Z"
  },
  {
    "intent": "typing",
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:31.845Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case :\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Unterminated string literal.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 12
              },
              "endPosition": {
                "line": 3,
                "column": 12
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "':' expected.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 7
              },
              "endPosition": {
                "line": 4,
                "column": 13
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: Expression expected.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 9
              },
              "endPosition": {
                "line": 3,
                "column": 9
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: Unterminated string literal.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 11
              },
              "endPosition": {
                "line": 3,
                "column": 11
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case :\n      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n\n",
        "cursorPosition": {
          "line": 2,
          "column": 9
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 48,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525951887,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50.699951171875,
      "timeAtRequestSend": 1741525951887
    },
    "generateUuid": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:31.888Z"
  },
  {
    "intent": "typing",
    "generationUUID": "c3cdc693-60d0-4a6c-a17a-972afd633f97",
    "timestamp": "2025-03-09T13:12:32.062Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case l:\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Unterminated string literal.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 12
              },
              "endPosition": {
                "line": 3,
                "column": 12
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "':' expected.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 7
              },
              "endPosition": {
                "line": 4,
                "column": 13
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: Expression expected.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 9
              },
              "endPosition": {
                "line": 3,
                "column": 9
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case l:\n      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n\n",
        "cursorPosition": {
          "line": 2,
          "column": 10
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 49,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525952099,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 63.300048828125,
      "timeAtRequestSend": 1741525952099
    },
    "generateUuid": "c3cdc693-60d0-4a6c-a17a-972afd633f97",
    "timestamp": "2025-03-09T13:12:32.101Z"
  },
  {
    "intent": "typing",
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.110Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case li:\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Unterminated string literal.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 12
              },
              "endPosition": {
                "line": 3,
                "column": 12
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "':' expected.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 7
              },
              "endPosition": {
                "line": 4,
                "column": 13
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case li:\n      return 'green';\n    case 'green':\n      return 'yellow';\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n\n",
        "cursorPosition": {
          "line": 2,
          "column": 11
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 50,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525952152,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 49.89990234375,
      "timeAtRequestSend": 1741525952152
    },
    "generateUuid": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.154Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.335Z"
  },
  {
    "cursorRetrieval": {
      "text": "  switch (light) {\n    case '",
      "rangeToReplace": {
        "startLineNumber": 2,
        "endLineNumberInclusive": 6
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.336Z"
  },
  {
    "cursorRetrieval": {
      "text": "red"
    },
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.337Z"
  },
  {
    "cursorRetrieval": {
      "text": "':"
    },
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.337Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n     "
    },
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.338Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.338Z"
  },
  {
    "cursorRetrieval": {
      "text": " return 'green"
    },
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.339Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n    case 'green':\n     "
    },
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.339Z"
  },
  {
    "firstChunkValue": "  switch (light) {\n    case 'red':\n      return 'green';\n    case 'green':\n      return 'yellow';",
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.821Z"
  },
  {
    "cursorRetrieval": {
      "text": " return"
    },
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.828Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.829Z"
  },
  {
    "cursorRetrieval": {
      "text": " 'yellow"
    },
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.829Z"
  },
  {
    "cursorRetrieval": {
      "text": "';"
    },
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.830Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.831Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
      "shouldRetriggerCpp": true
    },
    "predictionId": "1099830c-586f-4eec-b7fe-6143e1576bd4",
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.917Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is false",
    "invokePlace": "before this.displayFusedCursorPrediction, about to show prediction icon",
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
      "shouldRetriggerCpp": true
    },
    "predictionId": "1099830c-586f-4eec-b7fe-6143e1576bd4",
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.918Z"
  },
  {
    "action": "displayFusedCursorPrediction",
    "predictionId": "1099830c-586f-4eec-b7fe-6143e1576bd4",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
      "shouldRetriggerCpp": true
    },
    "oldText": "",
    "newText": "",
    "timestamp": "2025-03-09T13:12:32.919Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.939Z"
  },
  {
    "cursorRetrieval": {
      "text": "  switch (light) {\n    case light",
      "rangeToReplace": {
        "startLineNumber": 2,
        "endLineNumberInclusive": 6
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.941Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.942Z"
  },
  {
    "firstChunkValue": "  switch (light) {\n    case light.RED:\n      return 'green';\n    case 'green':\n      return 'yellow';",
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.943Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "  switch (light) {\n    case light.RED:\n      return 'green';\n    case 'green':\n      return 'yellow';"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.945Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 1,
        "expectedContent": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase 'red':\nreturn 'green';\ncase 'green':",
        "shouldRetriggerCpp": true
      }
    },
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.947Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "4aca6abb-c38a-4cea-b12e-9b49643c54f2",
    "timestamp": "2025-03-09T13:12:32.948Z"
  },
  {
    "cursorRetrieval": {
      "text": "RED"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.949Z"
  },
  {
    "cursorRetrieval": {
      "text": ":"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.950Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.951Z"
  },
  {
    "cursorRetrieval": {
      "text": "     "
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.952Z"
  },
  {
    "cursorRetrieval": {
      "text": " return light"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.953Z"
  },
  {
    "cursorRetrieval": {
      "text": ".GRE"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.953Z"
  },
  {
    "cursorRetrieval": {
      "text": "EN"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.955Z"
  },
  {
    "cursorRetrieval": {
      "text": ";"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.956Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n   "
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.957Z"
  },
  {
    "cursorRetrieval": {
      "text": " case light"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.958Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.959Z"
  },
  {
    "cursorRetrieval": {
      "text": "GRE"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.959Z"
  },
  {
    "cursorRetrieval": {
      "text": "EN:"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.960Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n      return"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.962Z"
  },
  {
    "cursorRetrieval": {
      "text": " light"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.963Z"
  },
  {
    "cursorRetrieval": {
      "text": ".Y"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.964Z"
  },
  {
    "cursorRetrieval": {
      "text": "ELL"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:32.965Z"
  },
  {
    "fullText": "  switch (light) {\n    case light.RED:\n      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;",
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:33.305Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "  switch (light) {\n    case light.RED:\n      return 'green';\n    case 'green':\n      return 'yellow';"
    },
    "fullText": "  switch (light) {\n    case light.RED:\n      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;",
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:33.305Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && remaining reason && need to create newSuggestion according fullText, will attach onAcceptDisplayId to currentSuggestion if newSuggestion is not undefined",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "838ece62-dbad-4ffb-a690-43690e20d9ce",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 50,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 51,
      "monotonicallyIncreasingSuggestionId": 32,
      "range": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 6,
        "endColumn": 23
      },
      "replaceText": "  switch (light) {\n    case light.RED:\n      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;",
      "originalText": "  switch (light) {\n    case light.RED:\n      return 'green';\n    case 'green':\n      return 'yellow';",
      "startingSuggestionRange": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 6,
        "endColumn": 23
      },
      "diffText": "  switch (light) {\n    case light.RED:\n      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;",
      "fullOriginalText": "  switch (light) {\n    case light.RED:\n      return 'green';\n    case 'green':\n      return 'yellow';",
      "suggestionTriggerTime": 1741525952101.6,
      "greens": [],
      "source": "typing",
      "requestId": "965d0a11-82af-42cb-891c-887939aa4307",
      "selection": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 6,
        "endColumn": 23
      },
      "fusedCursorPredictionId": "4b1e3233-caee-4add-8138-09774d91bddb",
      "undoRedoGroup": {
        "id": 33,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:33.306Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 7,
      "text": "case 'yellow':\nreturn 'red';\ndefault:\nreturn 'red';\n}",
      "shouldRetriggerCpp": true
    },
    "predictionId": "4b1e3233-caee-4add-8138-09774d91bddb",
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:33.307Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "  switch (light) {\n    case light.RED:\n      return 'green';\n    case 'green':\n      return 'yellow';"
    },
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 7,
      "text": "case 'yellow':\nreturn 'red';\ndefault:\nreturn 'red';\n}",
      "shouldRetriggerCpp": true
    },
    "predictionId": "4b1e3233-caee-4add-8138-09774d91bddb",
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:33.307Z"
  },
  {
    "cursorRetrieval": {
      "text": "OW"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:33.307Z"
  },
  {
    "cursorRetrieval": {
      "text": ";"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:33.307Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "4b1e3233-caee-4add-8138-09774d91bddb",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 7,
      "text": "case 'yellow':\nreturn 'red';\ndefault:\nreturn 'red';\n}",
      "shouldRetriggerCpp": true
    },
    "timestamp": "2025-03-09T13:12:33.308Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:33.308Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 7,
        "expectedContent": "case 'yellow':\nreturn 'red';\ndefault:\nreturn 'red';\n}",
        "shouldRetriggerCpp": true
      }
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:33.308Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:33.308Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "8a6705aa-f3f6-4d9f-bbba-1ff5bae29bc0",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 50,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 50,
      "monotonicallyIncreasingSuggestionId": 31,
      "range": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 6,
        "endColumn": 23
      },
      "replaceText": "  switch (light) {\n    case light.RED:\n      return 'green';\n    case 'green':\n      return 'yellow';",
      "originalText": "  switch (light) {\n    case li:\n      return 'green';\n    case 'green':\n      return 'yellow';",
      "startingSuggestionRange": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 6,
        "endColumn": 23
      },
      "diffText": "  switch (light) {\n    case light.RED:\n      return 'green';\n    case 'green':\n      return 'yellow';",
      "fullOriginalText": "  switch (light) {\n    case li:\n      return 'green';\n    case 'green':\n      return 'yellow';",
      "suggestionTriggerTime": 1741525952101.6,
      "greens": [],
      "source": "typing",
      "requestId": "965d0a11-82af-42cb-891c-887939aa4307",
      "selection": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 6,
        "endColumn": 23
      },
      "undoRedoGroup": {
        "id": 32,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;179",
      "onAcceptDisplayId": "838ece62-dbad-4ffb-a690-43690e20d9ce"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:33.589Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "8a6705aa-f3f6-4d9f-bbba-1ff5bae29bc0",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 50,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 50,
      "monotonicallyIncreasingSuggestionId": 31,
      "range": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 6,
        "endColumn": 23
      },
      "replaceText": "  switch (light) {\n    case light.RED:\n      return 'green';\n    case 'green':\n      return 'yellow';",
      "originalText": "  switch (light) {\n    case li:\n      return 'green';\n    case 'green':\n      return 'yellow';",
      "startingSuggestionRange": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 6,
        "endColumn": 23
      },
      "diffText": "  switch (light) {\n    case light.RED:\n      return 'green';\n    case 'green':\n      return 'yellow';",
      "fullOriginalText": "  switch (light) {\n    case li:\n      return 'green';\n    case 'green':\n      return 'yellow';",
      "suggestionTriggerTime": 1741525952101.6,
      "greens": [],
      "source": "typing",
      "requestId": "965d0a11-82af-42cb-891c-887939aa4307",
      "selection": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 6,
        "endColumn": 23
      },
      "undoRedoGroup": {
        "id": 32,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;179",
      "onAcceptDisplayId": "838ece62-dbad-4ffb-a690-43690e20d9ce"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:33.604Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "838ece62-dbad-4ffb-a690-43690e20d9ce",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 50,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 51,
      "monotonicallyIncreasingSuggestionId": 32,
      "range": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 6,
        "endColumn": 23
      },
      "replaceText": "  switch (light) {\n    case light.RED:\n      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;",
      "originalText": "  switch (light) {\n    case light.RED:\n      return 'green';\n    case 'green':\n      return 'yellow';",
      "startingSuggestionRange": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 6,
        "endColumn": 23
      },
      "diffText": "  switch (light) {\n    case light.RED:\n      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;",
      "fullOriginalText": "  switch (light) {\n    case light.RED:\n      return 'green';\n    case 'green':\n      return 'yellow';",
      "suggestionTriggerTime": 1741525952101.6,
      "greens": [],
      "source": "typing",
      "requestId": "965d0a11-82af-42cb-891c-887939aa4307",
      "selection": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 6,
        "endColumn": 23
      },
      "fusedCursorPredictionId": "4b1e3233-caee-4add-8138-09774d91bddb",
      "undoRedoGroup": {
        "id": 33,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;185"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:35.897Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "838ece62-dbad-4ffb-a690-43690e20d9ce",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 50,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 51,
      "monotonicallyIncreasingSuggestionId": 32,
      "range": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 6,
        "endColumn": 23
      },
      "replaceText": "  switch (light) {\n    case light.RED:\n      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;",
      "originalText": "  switch (light) {\n    case light.RED:\n      return 'green';\n    case 'green':\n      return 'yellow';",
      "startingSuggestionRange": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 6,
        "endColumn": 23
      },
      "diffText": "  switch (light) {\n    case light.RED:\n      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;",
      "fullOriginalText": "  switch (light) {\n    case light.RED:\n      return 'green';\n    case 'green':\n      return 'yellow';",
      "suggestionTriggerTime": 1741525952101.6,
      "greens": [],
      "source": "typing",
      "requestId": "965d0a11-82af-42cb-891c-887939aa4307",
      "selection": {
        "startLineNumber": 2,
        "startColumn": 1,
        "endLineNumberInclusive": 6,
        "endColumn": 23
      },
      "fusedCursorPredictionId": "4b1e3233-caee-4add-8138-09774d91bddb",
      "undoRedoGroup": {
        "id": 33,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;185"
    },
    "generationUUID": "965d0a11-82af-42cb-891c-887939aa4307",
    "timestamp": "2025-03-09T13:12:35.910Z"
  },
  {
    "getFromDB": "predictionId",
    "possibleInvokeReason": "no suggestion but has predictionId",
    "predictionId": "4b1e3233-caee-4add-8138-09774d91bddb",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 7,
      "text": "case 'yellow':\nreturn 'red';\ndefault:\nreturn 'red';\n}",
      "shouldRetriggerCpp": true
    },
    "oldText": "  switch (light) {\n    case light.RED:\n      return 'green';\n    case 'green':\n      return 'yellow';",
    "newText": "  switch (light) {\n    case light.RED:\n      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;",
    "timestamp": "2025-03-09T13:12:35.910Z"
  },
  {
    "action": "displayFusedCursorPrediction",
    "predictionId": "4b1e3233-caee-4add-8138-09774d91bddb",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 7,
      "text": "case 'yellow':\nreturn 'red';\ndefault:\nreturn 'red';\n}",
      "shouldRetriggerCpp": true
    },
    "oldText": "  switch (light) {\n    case light.RED:\n      return 'green';\n    case 'green':\n      return 'yellow';",
    "newText": "  switch (light) {\n    case light.RED:\n      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;",
    "timestamp": "2025-03-09T13:12:35.911Z"
  },
  {
    "intent": "cursor_prediction",
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:35.912Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Unterminated string literal.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 12
              },
              "endPosition": {
                "line": 3,
                "column": 12
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "':' expected.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 7
              },
              "endPosition": {
                "line": 4,
                "column": 13
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case light.RED:\n      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';\n  }\n}\n\n",
        "cursorPosition": {
          "line": 6,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 52,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "cursor_prediction"
      },
      "clientTime": 1741525955917,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 6,
      "timeAtRequestSend": 1741525955917
    },
    "generateUuid": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:35.918Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.287Z"
  },
  {
    "cursorRetrieval": {
      "text": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light",
      "rangeToReplace": {
        "startLineNumber": 4,
        "endLineNumberInclusive": 10
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.289Z"
  },
  {
    "cursorRetrieval": {
      "text": ".Y"
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.304Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.379Z"
  },
  {
    "cursorRetrieval": {
      "text": "ELLOW:"
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.381Z"
  },
  {
    "cursorRetrieval": {
      "text": "     "
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.382Z"
  },
  {
    "cursorRetrieval": {
      "text": " return light"
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.382Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.383Z"
  },
  {
    "cursorRetrieval": {
      "text": "RED"
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.383Z"
  },
  {
    "cursorRetrieval": {
      "text": ";"
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.384Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n   "
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.385Z"
  },
  {
    "cursorRetrieval": {
      "text": " default"
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.386Z"
  },
  {
    "firstChunkValue": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;\n    default:\n      return light.RED;",
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.575Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 13,
      "text": "\n",
      "shouldRetriggerCpp": false
    },
    "predictionId": "d6ad0cc0-02ef-40ad-a7ce-c6d5023dcd89",
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.576Z"
  },
  {
    "cursorRetrieval": {
      "text": ":\n      return light"
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.577Z"
  },
  {
    "cursorRetrieval": {
      "text": ".RED;"
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.578Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.579Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 13,
        "expectedContent": "\n",
        "shouldRetriggerCpp": false
      }
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.580Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.581Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;\n    default:\n      return light.RED;"
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.609Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;\n    default:\n      return light.RED;"
    },
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 13,
      "text": "\n",
      "shouldRetriggerCpp": false
    },
    "predictionId": "d6ad0cc0-02ef-40ad-a7ce-c6d5023dcd89",
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:36.620Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "d6ad0cc0-02ef-40ad-a7ce-c6d5023dcd89",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 13,
      "text": "\n",
      "shouldRetriggerCpp": false
    },
    "timestamp": "2025-03-09T13:12:36.622Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "7e69d993-3657-4ec5-bb80-5f0501435e8f",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 52,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 52,
      "monotonicallyIncreasingSuggestionId": 33,
      "range": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 10,
        "endColumn": 20
      },
      "replaceText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;\n    default:\n      return light.RED;",
      "originalText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';",
      "startingSuggestionRange": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 10,
        "endColumn": 20
      },
      "diffText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;\n    default:\n      return light.RED;",
      "fullOriginalText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';",
      "suggestionTriggerTime": 1741525955910.3,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
      "selection": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 10,
        "endColumn": 20
      },
      "fusedCursorPredictionId": "d6ad0cc0-02ef-40ad-a7ce-c6d5023dcd89",
      "undoRedoGroup": {
        "id": 34,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;198"
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:37.458Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "7e69d993-3657-4ec5-bb80-5f0501435e8f",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 52,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 52,
      "monotonicallyIncreasingSuggestionId": 33,
      "range": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 10,
        "endColumn": 20
      },
      "replaceText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;\n    default:\n      return light.RED;",
      "originalText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';",
      "startingSuggestionRange": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 10,
        "endColumn": 20
      },
      "diffText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;\n    default:\n      return light.RED;",
      "fullOriginalText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';",
      "suggestionTriggerTime": 1741525955910.3,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
      "selection": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 10,
        "endColumn": 20
      },
      "fusedCursorPredictionId": "d6ad0cc0-02ef-40ad-a7ce-c6d5023dcd89",
      "undoRedoGroup": {
        "id": 34,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;198"
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:38.455Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "7e69d993-3657-4ec5-bb80-5f0501435e8f",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 52,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 52,
      "monotonicallyIncreasingSuggestionId": 33,
      "range": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 10,
        "endColumn": 20
      },
      "replaceText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;\n    default:\n      return light.RED;",
      "originalText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';",
      "startingSuggestionRange": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 10,
        "endColumn": 20
      },
      "diffText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;\n    default:\n      return light.RED;",
      "fullOriginalText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';",
      "suggestionTriggerTime": 1741525955910.3,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
      "selection": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 10,
        "endColumn": 20
      },
      "fusedCursorPredictionId": "d6ad0cc0-02ef-40ad-a7ce-c6d5023dcd89",
      "undoRedoGroup": {
        "id": 34,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;198"
    },
    "generationUUID": "61823a51-b0e1-4363-95c2-4d0e7f03cef8",
    "timestamp": "2025-03-09T13:12:38.464Z"
  },
  {
    "getFromDB": "predictionId",
    "possibleInvokeReason": "no suggestion but has predictionId",
    "predictionId": "d6ad0cc0-02ef-40ad-a7ce-c6d5023dcd89",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 13,
      "text": "\n",
      "shouldRetriggerCpp": false
    },
    "oldText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';",
    "newText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;\n    default:\n      return light.RED;",
    "timestamp": "2025-03-09T13:12:38.465Z"
  },
  {
    "action": "displayFusedCursorPrediction",
    "predictionId": "d6ad0cc0-02ef-40ad-a7ce-c6d5023dcd89",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 13,
      "text": "\n",
      "shouldRetriggerCpp": false
    },
    "oldText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case 'yellow':\n      return 'red';\n    default:\n      return 'red';",
    "newText": "      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;\n    default:\n      return light.RED;",
    "timestamp": "2025-03-09T13:12:38.465Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "timestamp": "2025-03-09T13:12:39.395Z"
  },
  {
    "intent": "cursor_prediction",
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.398Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Cannot find name 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 29
              },
              "endPosition": {
                "line": 1,
                "column": 41
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Unterminated string literal.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 12
              },
              "endPosition": {
                "line": 3,
                "column": 12
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "':' expected.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 7
              },
              "endPosition": {
                "line": 4,
                "column": 13
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case light.RED:\n      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;\n    default:\n      return light.RED;\n  }\n}\n\n",
        "cursorPosition": {
          "line": 12,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 53,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "cursor_prediction"
      },
      "clientTime": 1741525959408,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 12.5,
      "timeAtRequestSend": 1741525959408
    },
    "generateUuid": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.410Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.806Z"
  },
  {
    "cursorRetrieval": {
      "text": "}\n\nenum",
      "rangeToReplace": {
        "startLineNumber": 12,
        "endLineNumberInclusive": 14
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.807Z"
  },
  {
    "cursorRetrieval": {
      "text": " Traffic"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.823Z"
  },
  {
    "firstChunkValue": "}\n\nenum TrafficLight {",
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.890Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light {"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.895Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n "
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.897Z"
  },
  {
    "cursorRetrieval": {
      "text": " RED"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.897Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.898Z"
  },
  {
    "cursorRetrieval": {
      "text": " 'red"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.899Z"
  },
  {
    "cursorRetrieval": {
      "text": "',"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.899Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n  GREEN"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.900Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.901Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "}\n\nenum TrafficLight {"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.902Z"
  },
  {
    "cursorRetrieval": {
      "text": "green',"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.903Z"
  },
  {
    "cursorRetrieval": {
      "text": " '"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.904Z"
  },
  {
    "cursorRetrieval": {
      "text": " "
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.964Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.964Z"
  },
  {
    "cursorRetrieval": {
      "text": " Y"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.964Z"
  },
  {
    "cursorRetrieval": {
      "text": "ELL"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.965Z"
  },
  {
    "cursorRetrieval": {
      "text": " 'yellow"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.965Z"
  },
  {
    "cursorRetrieval": {
      "text": "OW ="
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.965Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n}"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.965Z"
  },
  {
    "cursorRetrieval": {
      "text": "',"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:39.965Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n\n"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:40.036Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:40.036Z"
  },
  {
    "fullText": "}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\n",
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:40.044Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "}\n\nenum TrafficLight {"
    },
    "fullText": "}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\n",
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:40.045Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && remaining reason && need to create newSuggestion according fullText, will attach onAcceptDisplayId to currentSuggestion if newSuggestion is not undefined",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "391e7532-ef1d-4893-a14e-67e25f2e3c52",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 53,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 54,
      "monotonicallyIncreasingSuggestionId": 35,
      "range": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 14,
        "endColumn": 1
      },
      "replaceText": "}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\n",
      "originalText": "}\n\n",
      "startingSuggestionRange": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 14,
        "endColumn": 1
      },
      "diffText": "}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\n",
      "fullOriginalText": "}\n\n",
      "suggestionTriggerTime": 1741525959395.2,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "74947c92-812a-4053-814a-3e892879668a",
      "selection": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 14,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "8587fda8-c1eb-42d3-8ed6-fd598c6cb4d6",
      "undoRedoGroup": {
        "id": 36,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:40.045Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "8587fda8-c1eb-42d3-8ed6-fd598c6cb4d6",
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:40.047Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "}\n\nenum TrafficLight {"
    },
    "fusedCursorPrediction": null,
    "predictionId": "8587fda8-c1eb-42d3-8ed6-fd598c6cb4d6",
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:40.047Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "8587fda8-c1eb-42d3-8ed6-fd598c6cb4d6",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:40.047Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "64335477-2074-44f2-8e5f-10d4197a4083",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 53,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 53,
      "monotonicallyIncreasingSuggestionId": 34,
      "range": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 14,
        "endColumn": 1
      },
      "replaceText": "}\n\nenum TrafficLight {",
      "originalText": "}\n\n",
      "startingSuggestionRange": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 14,
        "endColumn": 1
      },
      "diffText": "}\n\nenum TrafficLight {",
      "fullOriginalText": "}\n\n",
      "suggestionTriggerTime": 1741525959395.2,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "74947c92-812a-4053-814a-3e892879668a",
      "selection": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 14,
        "endColumn": 1
      },
      "undoRedoGroup": {
        "id": 35,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;222",
      "onAcceptDisplayId": "391e7532-ef1d-4893-a14e-67e25f2e3c52"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:40.828Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "64335477-2074-44f2-8e5f-10d4197a4083",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 53,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 53,
      "monotonicallyIncreasingSuggestionId": 34,
      "range": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 14,
        "endColumn": 1
      },
      "replaceText": "}\n\nenum TrafficLight {",
      "originalText": "}\n\n",
      "startingSuggestionRange": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 14,
        "endColumn": 1
      },
      "diffText": "}\n\nenum TrafficLight {",
      "fullOriginalText": "}\n\n",
      "suggestionTriggerTime": 1741525959395.2,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "74947c92-812a-4053-814a-3e892879668a",
      "selection": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 14,
        "endColumn": 1
      },
      "undoRedoGroup": {
        "id": 35,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;222",
      "onAcceptDisplayId": "391e7532-ef1d-4893-a14e-67e25f2e3c52"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:40.840Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "391e7532-ef1d-4893-a14e-67e25f2e3c52",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 53,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 54,
      "monotonicallyIncreasingSuggestionId": 35,
      "range": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 14,
        "endColumn": 1
      },
      "replaceText": "}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\n",
      "originalText": "}\n\n",
      "startingSuggestionRange": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 14,
        "endColumn": 1
      },
      "diffText": "}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\n",
      "fullOriginalText": "}\n\n",
      "suggestionTriggerTime": 1741525959395.2,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "74947c92-812a-4053-814a-3e892879668a",
      "selection": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 14,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "8587fda8-c1eb-42d3-8ed6-fd598c6cb4d6",
      "undoRedoGroup": {
        "id": 36,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;227"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:41.887Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "391e7532-ef1d-4893-a14e-67e25f2e3c52",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 53,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 54,
      "monotonicallyIncreasingSuggestionId": 35,
      "range": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 14,
        "endColumn": 1
      },
      "replaceText": "}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\n",
      "originalText": "}\n\n",
      "startingSuggestionRange": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 14,
        "endColumn": 1
      },
      "diffText": "}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\n",
      "fullOriginalText": "}\n\n",
      "suggestionTriggerTime": 1741525959395.2,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "74947c92-812a-4053-814a-3e892879668a",
      "selection": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 14,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "8587fda8-c1eb-42d3-8ed6-fd598c6cb4d6",
      "undoRedoGroup": {
        "id": 36,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;227"
    },
    "generationUUID": "74947c92-812a-4053-814a-3e892879668a",
    "timestamp": "2025-03-09T13:12:41.906Z"
  },
  {
    "getFromDB": "predictionId",
    "possibleInvokeReason": "no suggestion but has predictionId",
    "predictionId": "8587fda8-c1eb-42d3-8ed6-fd598c6cb4d6",
    "fusedCursorPrediction": null,
    "oldText": "}\n\n",
    "newText": "}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\n",
    "timestamp": "2025-03-09T13:12:41.907Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "timestamp": "2025-03-09T13:12:42.917Z"
  },
  {
    "intent": "line_change",
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:42.923Z"
  },
  {
    "intent": "typing",
    "generationUUID": "f6bf50e6-97c7-494e-b78f-32fdca818e1c",
    "timestamp": "2025-03-09T13:12:42.932Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|  \n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 16
              },
              "endPosition": {
                "line": 3,
                "column": 19
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'GREEN' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 20
              },
              "endPosition": {
                "line": 4,
                "column": 25
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'GREEN' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 16
              },
              "endPosition": {
                "line": 5,
                "column": 21
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'YELLOW' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 6,
                "column": 20
              },
              "endPosition": {
                "line": 6,
                "column": 26
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'YELLOW' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 7,
                "column": 16
              },
              "endPosition": {
                "line": 7,
                "column": 22
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 8,
                "column": 20
              },
              "endPosition": {
                "line": 8,
                "column": 23
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 10,
                "column": 20
              },
              "endPosition": {
                "line": 10,
                "column": 23
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case light.RED:\n      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;\n    default:\n      return light.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\n  ",
        "cursorPosition": {
          "line": 19,
          "column": 2
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 56,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1741525962971,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50.199951171875,
      "timeAtRequestSend": 1741525962971
    },
    "generateUuid": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:42.973Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.361Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nconst",
      "rangeToReplace": {
        "startLineNumber": 19,
        "endLineNumberInclusive": 20
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.362Z"
  },
  {
    "cursorRetrieval": {
      "text": " light"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.378Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.380Z"
  },
  {
    "firstChunkValue": "\nconst light = TrafficLight.RED;",
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.470Z"
  },
  {
    "cursorRetrieval": {
      "text": " Traffic"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.475Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light."
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.477Z"
  },
  {
    "cursorRetrieval": {
      "text": "RED"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.477Z"
  },
  {
    "cursorRetrieval": {
      "text": ";\nconst"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.478Z"
  },
  {
    "cursorRetrieval": {
      "text": " new"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.478Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.479Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.479Z"
  },
  {
    "cursorRetrieval": {
      "text": " change"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.479Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.479Z"
  },
  {
    "cursorRetrieval": {
      "text": "(light);"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.480Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "\nconst light = TrafficLight.RED;"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.480Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nconsole"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.482Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.483Z"
  },
  {
    "cursorRetrieval": {
      "text": "log"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.484Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.485Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.555Z"
  },
  {
    "fullText": "\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.556Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "\nconst light = TrafficLight.RED;"
    },
    "fullText": "\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.557Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && remaining reason && need to create newSuggestion according fullText, will attach onAcceptDisplayId to currentSuggestion if newSuggestion is not undefined",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "4069ac97-6c72-45cb-a7b8-e3253582addc",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 56,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 57,
      "monotonicallyIncreasingSuggestionId": 37,
      "range": {
        "startLineNumber": 19,
        "startColumn": 1,
        "endLineNumberInclusive": 20,
        "endColumn": 31
      },
      "replaceText": "\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
      "originalText": "\nconst light = TrafficLight.RED",
      "startingSuggestionRange": {
        "startLineNumber": 19,
        "startColumn": 1,
        "endLineNumberInclusive": 20,
        "endColumn": 31
      },
      "diffText": "\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
      "fullOriginalText": "\nconst light = TrafficLight.RED",
      "suggestionTriggerTime": 1741525962920.5,
      "greens": [],
      "source": "line_change",
      "requestId": "1870c49a-238d-4026-96e4-16865efcb4d4",
      "selection": {
        "startLineNumber": 19,
        "startColumn": 1,
        "endLineNumberInclusive": 20,
        "endColumn": 3
      },
      "fusedCursorPredictionId": "38dbd252-780e-4168-bad3-16133824f617",
      "undoRedoGroup": {
        "id": 38,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.557Z"
  },
  {
    "cursorRetrieval": {
      "text": "new"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.557Z"
  },
  {
    "cursorRetrieval": {
      "text": ");\n"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.558Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.558Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase light.RED:\nreturn light.GREEN;\ncase light.GREEN:",
      "shouldRetriggerCpp": false
    },
    "predictionId": "38dbd252-780e-4168-bad3-16133824f617",
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.687Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "\nconst light = TrafficLight.RED;"
    },
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase light.RED:\nreturn light.GREEN;\ncase light.GREEN:",
      "shouldRetriggerCpp": false
    },
    "predictionId": "38dbd252-780e-4168-bad3-16133824f617",
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.687Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "38dbd252-780e-4168-bad3-16133824f617",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase light.RED:\nreturn light.GREEN;\ncase light.GREEN:",
      "shouldRetriggerCpp": false
    },
    "timestamp": "2025-03-09T13:12:43.688Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 1,
        "expectedContent": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase light.RED:\nreturn light.GREEN;\ncase light.GREEN:",
        "shouldRetriggerCpp": false
      }
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.689Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:43.689Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "448f52e4-6ba4-4cb9-94c8-bc9505302edc",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 56,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 56,
      "monotonicallyIncreasingSuggestionId": 36,
      "range": {
        "startLineNumber": 19,
        "startColumn": 1,
        "endLineNumberInclusive": 20,
        "endColumn": 3
      },
      "replaceText": "\nconst light = TrafficLight.RED;",
      "originalText": "\n  ",
      "startingSuggestionRange": {
        "startLineNumber": 19,
        "startColumn": 1,
        "endLineNumberInclusive": 20,
        "endColumn": 3
      },
      "diffText": "\nconst light = TrafficLight.RED;",
      "fullOriginalText": "\n  ",
      "suggestionTriggerTime": 1741525962920.5,
      "greens": [],
      "source": "line_change",
      "requestId": "1870c49a-238d-4026-96e4-16865efcb4d4",
      "selection": {
        "startLineNumber": 19,
        "startColumn": 1,
        "endLineNumberInclusive": 20,
        "endColumn": 3
      },
      "undoRedoGroup": {
        "id": 37,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;237",
      "onAcceptDisplayId": "4069ac97-6c72-45cb-a7b8-e3253582addc"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:44.107Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "448f52e4-6ba4-4cb9-94c8-bc9505302edc",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 56,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 56,
      "monotonicallyIncreasingSuggestionId": 36,
      "range": {
        "startLineNumber": 19,
        "startColumn": 1,
        "endLineNumberInclusive": 20,
        "endColumn": 3
      },
      "replaceText": "\nconst light = TrafficLight.RED;",
      "originalText": "\n  ",
      "startingSuggestionRange": {
        "startLineNumber": 19,
        "startColumn": 1,
        "endLineNumberInclusive": 20,
        "endColumn": 3
      },
      "diffText": "\nconst light = TrafficLight.RED;",
      "fullOriginalText": "\n  ",
      "suggestionTriggerTime": 1741525962920.5,
      "greens": [],
      "source": "line_change",
      "requestId": "1870c49a-238d-4026-96e4-16865efcb4d4",
      "selection": {
        "startLineNumber": 19,
        "startColumn": 1,
        "endLineNumberInclusive": 20,
        "endColumn": 3
      },
      "undoRedoGroup": {
        "id": 37,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;237",
      "onAcceptDisplayId": "4069ac97-6c72-45cb-a7b8-e3253582addc"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:44.117Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "4069ac97-6c72-45cb-a7b8-e3253582addc",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 56,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 57,
      "monotonicallyIncreasingSuggestionId": 37,
      "range": {
        "startLineNumber": 19,
        "startColumn": 1,
        "endLineNumberInclusive": 20,
        "endColumn": 31
      },
      "replaceText": "\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
      "originalText": "\nconst light = TrafficLight.RED",
      "startingSuggestionRange": {
        "startLineNumber": 19,
        "startColumn": 1,
        "endLineNumberInclusive": 20,
        "endColumn": 31
      },
      "diffText": "\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
      "fullOriginalText": "\nconst light = TrafficLight.RED",
      "suggestionTriggerTime": 1741525962920.5,
      "greens": [],
      "source": "line_change",
      "requestId": "1870c49a-238d-4026-96e4-16865efcb4d4",
      "selection": {
        "startLineNumber": 19,
        "startColumn": 1,
        "endLineNumberInclusive": 20,
        "endColumn": 3
      },
      "fusedCursorPredictionId": "38dbd252-780e-4168-bad3-16133824f617",
      "undoRedoGroup": {
        "id": 38,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;243"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:45.202Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "4069ac97-6c72-45cb-a7b8-e3253582addc",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 56,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 57,
      "monotonicallyIncreasingSuggestionId": 37,
      "range": {
        "startLineNumber": 19,
        "startColumn": 1,
        "endLineNumberInclusive": 20,
        "endColumn": 31
      },
      "replaceText": "\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
      "originalText": "\nconst light = TrafficLight.RED",
      "startingSuggestionRange": {
        "startLineNumber": 19,
        "startColumn": 1,
        "endLineNumberInclusive": 20,
        "endColumn": 31
      },
      "diffText": "\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
      "fullOriginalText": "\nconst light = TrafficLight.RED",
      "suggestionTriggerTime": 1741525962920.5,
      "greens": [],
      "source": "line_change",
      "requestId": "1870c49a-238d-4026-96e4-16865efcb4d4",
      "selection": {
        "startLineNumber": 19,
        "startColumn": 1,
        "endLineNumberInclusive": 20,
        "endColumn": 3
      },
      "fusedCursorPredictionId": "38dbd252-780e-4168-bad3-16133824f617",
      "undoRedoGroup": {
        "id": 38,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;243"
    },
    "generationUUID": "1870c49a-238d-4026-96e4-16865efcb4d4",
    "timestamp": "2025-03-09T13:12:45.215Z"
  },
  {
    "getFromDB": "predictionId",
    "possibleInvokeReason": "no suggestion but has predictionId",
    "predictionId": "38dbd252-780e-4168-bad3-16133824f617",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase light.RED:\nreturn light.GREEN;\ncase light.GREEN:",
      "shouldRetriggerCpp": false
    },
    "oldText": "\nconst light = TrafficLight.RED",
    "newText": "\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
    "timestamp": "2025-03-09T13:12:45.217Z"
  },
  {
    "action": "displayFusedCursorPrediction",
    "predictionId": "38dbd252-780e-4168-bad3-16133824f617",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 1,
      "text": "function changeLight(light: TrafficLight) {\nswitch (light) {\ncase light.RED:\nreturn light.GREEN;\ncase light.GREEN:",
      "shouldRetriggerCpp": false
    },
    "oldText": "\nconst light = TrafficLight.RED",
    "newText": "\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
    "timestamp": "2025-03-09T13:12:45.218Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "timestamp": "2025-03-09T13:12:46.311Z"
  },
  {
    "intent": "cursor_prediction",
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.313Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 16
              },
              "endPosition": {
                "line": 3,
                "column": 19
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'GREEN' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 20
              },
              "endPosition": {
                "line": 4,
                "column": 25
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'GREEN' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 16
              },
              "endPosition": {
                "line": 5,
                "column": 21
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'YELLOW' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 6,
                "column": 20
              },
              "endPosition": {
                "line": 6,
                "column": 26
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'YELLOW' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 7,
                "column": 16
              },
              "endPosition": {
                "line": 7,
                "column": 22
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 8,
                "column": 20
              },
              "endPosition": {
                "line": 8,
                "column": 23
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 10,
                "column": 20
              },
              "endPosition": {
                "line": 10,
                "column": 23
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case light.RED:\n      return light.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;\n    default:\n      return light.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 0,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 58,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "cursor_prediction"
      },
      "clientTime": 1741525966323,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 12.39990234375,
      "timeAtRequestSend": 1741525966324
    },
    "generateUuid": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.326Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.821Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light."
    },
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.821Z"
  },
  {
    "cursorRetrieval": {
      "text": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case Traffic",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 4
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.821Z"
  },
  {
    "cursorRetrieval": {
      "text": "RED"
    },
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.822Z"
  },
  {
    "cursorRetrieval": {
      "text": ":"
    },
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.857Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n      return Traffic"
    },
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.857Z"
  },
  {
    "firstChunkValue": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;",
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.902Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;"
    },
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.904Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.904Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light"
    },
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.905Z"
  },
  {
    "cursorRetrieval": {
      "text": "EN;"
    },
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.905Z"
  },
  {
    "cursorRetrieval": {
      "text": "GRE"
    },
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.905Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.905Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 5,
        "expectedContent": "case light.GREEN:\nreturn light.YELLOW;\ncase light.YELLOW:\nreturn light.RED;\ndefault:",
        "shouldRetriggerCpp": false
      }
    },
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.978Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 5,
      "text": "case light.GREEN:\nreturn light.YELLOW;\ncase light.YELLOW:\nreturn light.RED;\ndefault:",
      "shouldRetriggerCpp": false
    },
    "predictionId": "6353dbe0-e40e-4224-a0c1-b7775757a7f2",
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.980Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;"
    },
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 5,
      "text": "case light.GREEN:\nreturn light.YELLOW;\ncase light.YELLOW:\nreturn light.RED;\ndefault:",
      "shouldRetriggerCpp": false
    },
    "predictionId": "6353dbe0-e40e-4224-a0c1-b7775757a7f2",
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.980Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "6353dbe0-e40e-4224-a0c1-b7775757a7f2",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 5,
      "text": "case light.GREEN:\nreturn light.YELLOW;\ncase light.YELLOW:\nreturn light.RED;\ndefault:",
      "shouldRetriggerCpp": false
    },
    "timestamp": "2025-03-09T13:12:46.980Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:46.981Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "661ea517-c4d0-4743-b15d-033ed7494f75",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 58,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 58,
      "monotonicallyIncreasingSuggestionId": 38,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 26
      },
      "replaceText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;",
      "originalText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case light.RED:\n      return light.GREEN;",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 26
      },
      "diffText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;",
      "fullOriginalText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case light.RED:\n      return light.GREEN;",
      "suggestionTriggerTime": 1741525966310.8,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 26
      },
      "fusedCursorPredictionId": "6353dbe0-e40e-4224-a0c1-b7775757a7f2",
      "undoRedoGroup": {
        "id": 39,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;251"
    },
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:52.164Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "661ea517-c4d0-4743-b15d-033ed7494f75",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 58,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 58,
      "monotonicallyIncreasingSuggestionId": 38,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 26
      },
      "replaceText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;",
      "originalText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case light.RED:\n      return light.GREEN;",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 26
      },
      "diffText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;",
      "fullOriginalText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case light.RED:\n      return light.GREEN;",
      "suggestionTriggerTime": 1741525966310.8,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 4,
        "endColumn": 26
      },
      "fusedCursorPredictionId": "6353dbe0-e40e-4224-a0c1-b7775757a7f2",
      "undoRedoGroup": {
        "id": 39,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;251"
    },
    "generationUUID": "0a4f95d5-3ec2-44b2-b0a3-f72ddf53b9ce",
    "timestamp": "2025-03-09T13:12:52.227Z"
  },
  {
    "action": "displayFusedCursorPrediction",
    "predictionId": "6353dbe0-e40e-4224-a0c1-b7775757a7f2",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 5,
      "text": "case light.GREEN:\nreturn light.YELLOW;\ncase light.YELLOW:\nreturn light.RED;\ndefault:",
      "shouldRetriggerCpp": false
    },
    "oldText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case light.RED:\n      return light.GREEN;",
    "newText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;",
    "timestamp": "2025-03-09T13:12:52.230Z"
  },
  {
    "getFromDB": "predictionId",
    "possibleInvokeReason": "no suggestion but has predictionId",
    "predictionId": "6353dbe0-e40e-4224-a0c1-b7775757a7f2",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 5,
      "text": "case light.GREEN:\nreturn light.YELLOW;\ncase light.YELLOW:\nreturn light.RED;\ndefault:",
      "shouldRetriggerCpp": false
    },
    "oldText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case light.RED:\n      return light.GREEN;",
    "newText": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;",
    "timestamp": "2025-03-09T13:12:52.230Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "timestamp": "2025-03-09T13:12:53.230Z"
  },
  {
    "intent": "cursor_prediction",
    "generationUUID": "2734cf34-9dca-4fdd-9d82-9768c4953a88",
    "timestamp": "2025-03-09T13:12:53.236Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Property 'GREEN' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 16
              },
              "endPosition": {
                "line": 5,
                "column": 21
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'YELLOW' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 6,
                "column": 20
              },
              "endPosition": {
                "line": 6,
                "column": 26
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'YELLOW' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 7,
                "column": 16
              },
              "endPosition": {
                "line": 7,
                "column": 22
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 8,
                "column": 20
              },
              "endPosition": {
                "line": 8,
                "column": 23
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight.GREEN | TrafficLight.YELLOW'.\n  Property 'RED' does not exist on type 'TrafficLight.GREEN'.",
            "range": {
              "startPosition": {
                "line": 10,
                "column": 20
              },
              "endPosition": {
                "line": 10,
                "column": 23
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 16
              },
              "endPosition": {
                "line": 3,
                "column": 19
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'GREEN' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 20
              },
              "endPosition": {
                "line": 4,
                "column": 25
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 10,
                "column": 20
              },
              "endPosition": {
                "line": 10,
                "column": 23
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;\n    default:\n      return light.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 4,
          "column": 4
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 59,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "cursor_prediction"
      },
      "clientTime": 1741525973240,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 9.10009765625,
      "timeAtRequestSend": 1741525973240
    },
    "generateUuid": "2734cf34-9dca-4fdd-9d82-9768c4953a88",
    "timestamp": "2025-03-09T13:12:53.241Z"
  },
  {
    "intent": "lint_errors",
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.249Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Property 'GREEN' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 16
              },
              "endPosition": {
                "line": 5,
                "column": 21
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'YELLOW' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 6,
                "column": 20
              },
              "endPosition": {
                "line": 6,
                "column": 26
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'YELLOW' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 7,
                "column": 16
              },
              "endPosition": {
                "line": 7,
                "column": 22
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 8,
                "column": 20
              },
              "endPosition": {
                "line": 8,
                "column": 23
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight.GREEN | TrafficLight.YELLOW'.\n  Property 'RED' does not exist on type 'TrafficLight.GREEN'.",
            "range": {
              "startPosition": {
                "line": 10,
                "column": 20
              },
              "endPosition": {
                "line": 10,
                "column": 23
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 16
              },
              "endPosition": {
                "line": 3,
                "column": 19
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'GREEN' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 20
              },
              "endPosition": {
                "line": 4,
                "column": 25
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 10,
                "column": 20
              },
              "endPosition": {
                "line": 10,
                "column": 23
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;\n    default:\n      return light.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 4,
          "column": 4
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 59,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "lint_errors"
      },
      "clientTime": 1741525973249,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 0.599853515625,
      "timeAtRequestSend": 1741525973249
    },
    "generateUuid": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.250Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "2734cf34-9dca-4fdd-9d82-9768c4953a88",
    "timestamp": "2025-03-09T13:12:53.537Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.718Z"
  },
  {
    "cursorRetrieval": {
      "text": "      return TrafficLight.GREEN;\n    case Traffic",
      "rangeToReplace": {
        "startLineNumber": 4,
        "endLineNumberInclusive": 8
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.727Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light."
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.728Z"
  },
  {
    "cursorRetrieval": {
      "text": "GREEN:\n     "
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.728Z"
  },
  {
    "cursorRetrieval": {
      "text": " return Traffic"
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.728Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light"
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.728Z"
  },
  {
    "cursorRetrieval": {
      "text": ".Y"
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.729Z"
  },
  {
    "cursorRetrieval": {
      "text": "ELLOW;"
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.729Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n   "
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.729Z"
  },
  {
    "cursorRetrieval": {
      "text": " case Traffic"
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.729Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light."
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.805Z"
  },
  {
    "cursorRetrieval": {
      "text": "Y"
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.806Z"
  },
  {
    "cursorRetrieval": {
      "text": "ELLOW:\n      return Traffic"
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.807Z"
  },
  {
    "firstChunkValue": "      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;",
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.807Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light"
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.808Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;"
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.809Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.810Z"
  },
  {
    "cursorRetrieval": {
      "text": "RED;"
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.811Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:53.812Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "bc3a8a55-769a-4d4d-ab46-a8ff83ae3a5d",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 59,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 59,
      "monotonicallyIncreasingSuggestionId": 39,
      "range": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 24
      },
      "replaceText": "      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;",
      "originalText": "      return TrafficLight.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;",
      "startingSuggestionRange": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 24
      },
      "diffText": "      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;",
      "fullOriginalText": "      return TrafficLight.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;",
      "suggestionTriggerTime": 1741525973248.3,
      "greens": [],
      "source": "lint_errors",
      "requestId": "ed26a6cd-8469-4664-b114-02267d91da34",
      "selection": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 24
      },
      "fusedCursorPredictionId": "370ed3df-9f26-4c96-a655-df5ac0123a08",
      "undoRedoGroup": {
        "id": 40,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;272"
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:54.459Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "bc3a8a55-769a-4d4d-ab46-a8ff83ae3a5d",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 59,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 59,
      "monotonicallyIncreasingSuggestionId": 39,
      "range": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 24
      },
      "replaceText": "      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;",
      "originalText": "      return TrafficLight.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;",
      "startingSuggestionRange": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 24
      },
      "diffText": "      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;",
      "fullOriginalText": "      return TrafficLight.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;",
      "suggestionTriggerTime": 1741525973248.3,
      "greens": [],
      "source": "lint_errors",
      "requestId": "ed26a6cd-8469-4664-b114-02267d91da34",
      "selection": {
        "startLineNumber": 4,
        "startColumn": 1,
        "endLineNumberInclusive": 8,
        "endColumn": 24
      },
      "fusedCursorPredictionId": "370ed3df-9f26-4c96-a655-df5ac0123a08",
      "undoRedoGroup": {
        "id": 40,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;272"
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:54.474Z"
  },
  {
    "getFromDB": "predictionId",
    "possibleInvokeReason": "no suggestion but has predictionId",
    "predictionId": "370ed3df-9f26-4c96-a655-df5ac0123a08",
    "fusedCursorPrediction": null,
    "oldText": "      return TrafficLight.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;",
    "newText": "      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;",
    "timestamp": "2025-03-09T13:12:54.475Z"
  },
  {
    "intent": "lint_errors",
    "generationUUID": "b9a606aa-e1d0-4155-a1cf-86660e352938",
    "timestamp": "2025-03-09T13:12:54.536Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Property 'GREEN' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 16
              },
              "endPosition": {
                "line": 5,
                "column": 21
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'YELLOW' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 6,
                "column": 20
              },
              "endPosition": {
                "line": 6,
                "column": 26
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'YELLOW' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 7,
                "column": 16
              },
              "endPosition": {
                "line": 7,
                "column": 22
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 8,
                "column": 20
              },
              "endPosition": {
                "line": 8,
                "column": 23
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight.GREEN | TrafficLight.YELLOW'.\n  Property 'RED' does not exist on type 'TrafficLight.GREEN'.",
            "range": {
              "startPosition": {
                "line": 10,
                "column": 20
              },
              "endPosition": {
                "line": 10,
                "column": 23
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 16
              },
              "endPosition": {
                "line": 3,
                "column": 19
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'GREEN' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 20
              },
              "endPosition": {
                "line": 4,
                "column": 25
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 10,
                "column": 20
              },
              "endPosition": {
                "line": 10,
                "column": 23
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return light.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 4,
          "column": 4
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 60,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "lint_errors"
      },
      "clientTime": 1741525974535,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 1,
      "timeAtRequestSend": 1741525974535
    },
    "generateUuid": "b9a606aa-e1d0-4155-a1cf-86660e352938",
    "timestamp": "2025-03-09T13:12:54.537Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 10,
      "text": "return light.RED;\n}\n}\n\nenum TrafficLight {",
      "shouldRetriggerCpp": true
    },
    "predictionId": "370ed3df-9f26-4c96-a655-df5ac0123a08",
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:54.804Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;"
    },
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 10,
      "text": "return light.RED;\n}\n}\n\nenum TrafficLight {",
      "shouldRetriggerCpp": true
    },
    "predictionId": "370ed3df-9f26-4c96-a655-df5ac0123a08",
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:54.806Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "370ed3df-9f26-4c96-a655-df5ac0123a08",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 10,
      "text": "return light.RED;\n}\n}\n\nenum TrafficLight {",
      "shouldRetriggerCpp": true
    },
    "timestamp": "2025-03-09T13:12:54.807Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:54.808Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 10,
        "expectedContent": "return light.RED;\n}\n}\n\nenum TrafficLight {",
        "shouldRetriggerCpp": true
      }
    },
    "generationUUID": "ed26a6cd-8469-4664-b114-02267d91da34",
    "timestamp": "2025-03-09T13:12:54.809Z"
  },
  {
    "action": "displayFusedCursorPrediction",
    "predictionId": "370ed3df-9f26-4c96-a655-df5ac0123a08",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 10,
      "text": "return light.RED;\n}\n}\n\nenum TrafficLight {",
      "shouldRetriggerCpp": true
    },
    "oldText": "      return TrafficLight.GREEN;\n    case light.GREEN:\n      return light.YELLOW;\n    case light.YELLOW:\n      return light.RED;",
    "newText": "      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;",
    "timestamp": "2025-03-09T13:12:54.810Z"
  },
  {
    "intent": "cursor_prediction",
    "generationUUID": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
    "timestamp": "2025-03-09T13:12:54.811Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Property 'GREEN' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 16
              },
              "endPosition": {
                "line": 5,
                "column": 21
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'YELLOW' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 6,
                "column": 20
              },
              "endPosition": {
                "line": 6,
                "column": 26
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'YELLOW' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 7,
                "column": 16
              },
              "endPosition": {
                "line": 7,
                "column": 22
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 8,
                "column": 20
              },
              "endPosition": {
                "line": 8,
                "column": 23
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight.GREEN | TrafficLight.YELLOW'.\n  Property 'RED' does not exist on type 'TrafficLight.GREEN'.",
            "range": {
              "startPosition": {
                "line": 10,
                "column": 20
              },
              "endPosition": {
                "line": 10,
                "column": 23
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 16
              },
              "endPosition": {
                "line": 3,
                "column": 19
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'GREEN' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 20
              },
              "endPosition": {
                "line": 4,
                "column": 25
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 10,
                "column": 20
              },
              "endPosition": {
                "line": 10,
                "column": 23
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return light.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 9,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 60,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "cursor_prediction"
      },
      "clientTime": 1741525974801,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 0.800048828125,
      "timeAtRequestSend": 1741525974801
    },
    "generateUuid": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
    "timestamp": "2025-03-09T13:12:54.812Z"
  },
  {
    "cursorRetrieval": {
      "text": "      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;"
    },
    "generationUUID": "b9a606aa-e1d0-4155-a1cf-86660e352938",
    "timestamp": "2025-03-09T13:12:54.930Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "rangeToReplace": {
        "startLineNumber": 4,
        "endLineNumberInclusive": 8
      },
      "doneEdit": true,
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "b9a606aa-e1d0-4155-a1cf-86660e352938",
    "timestamp": "2025-03-09T13:12:54.931Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "b9a606aa-e1d0-4155-a1cf-86660e352938",
    "timestamp": "2025-03-09T13:12:54.935Z"
  },
  {
    "firstChunkValue": "      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;",
    "generationUUID": "b9a606aa-e1d0-4155-a1cf-86660e352938",
    "timestamp": "2025-03-09T13:12:54.936Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "b9a606aa-e1d0-4155-a1cf-86660e352938",
    "timestamp": "2025-03-09T13:12:54.937Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 10,
      "text": "return light.RED;\n}\n}\n\nenum TrafficLight {",
      "shouldRetriggerCpp": true
    },
    "predictionId": "e36ab308-2fb5-4660-ad18-9b99cf63b4e5",
    "generationUUID": "b9a606aa-e1d0-4155-a1cf-86660e352938",
    "timestamp": "2025-03-09T13:12:55.012Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "b9a606aa-e1d0-4155-a1cf-86660e352938",
    "timestamp": "2025-03-09T13:12:55.014Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 10,
        "expectedContent": "return light.RED;\n}\n}\n\nenum TrafficLight {",
        "shouldRetriggerCpp": true
      }
    },
    "generationUUID": "b9a606aa-e1d0-4155-a1cf-86660e352938",
    "timestamp": "2025-03-09T13:12:55.014Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
    "timestamp": "2025-03-09T13:12:55.161Z"
  },
  {
    "cursorRetrieval": {
      "text": "      return TrafficLight.RED;\n    default:\n      return Traffic",
      "rangeToReplace": {
        "startLineNumber": 8,
        "endLineNumberInclusive": 13
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
    "timestamp": "2025-03-09T13:12:55.163Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "timestamp": "2025-03-09T13:12:55.334Z"
  },
  {
    "firstChunkValue": "      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n",
    "generationUUID": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
    "timestamp": "2025-03-09T13:12:55.676Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light."
    },
    "generationUUID": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
    "timestamp": "2025-03-09T13:12:55.678Z"
  },
  {
    "cursorRetrieval": {
      "text": "RED;\n "
    },
    "generationUUID": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
    "timestamp": "2025-03-09T13:12:55.678Z"
  },
  {
    "cursorRetrieval": {
      "text": " }"
    },
    "generationUUID": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
    "timestamp": "2025-03-09T13:12:55.679Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n}\n"
    },
    "generationUUID": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
    "timestamp": "2025-03-09T13:12:55.679Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
    "timestamp": "2025-03-09T13:12:55.679Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n"
    },
    "generationUUID": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
    "timestamp": "2025-03-09T13:12:55.680Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
    "timestamp": "2025-03-09T13:12:55.680Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "a2d0d42c-57df-4e17-9301-7833aa3f54a2",
    "generationUUID": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
    "timestamp": "2025-03-09T13:12:55.757Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n"
    },
    "fusedCursorPrediction": null,
    "predictionId": "a2d0d42c-57df-4e17-9301-7833aa3f54a2",
    "generationUUID": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
    "timestamp": "2025-03-09T13:12:55.758Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "a2d0d42c-57df-4e17-9301-7833aa3f54a2",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:12:55.758Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "8e138017-0be1-40a5-b28e-939668b132e8",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 60,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 60,
      "monotonicallyIncreasingSuggestionId": 40,
      "range": {
        "startLineNumber": 8,
        "startColumn": 1,
        "endLineNumberInclusive": 13,
        "endColumn": 1
      },
      "replaceText": "      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n",
      "originalText": "      return TrafficLight.RED;\n    default:\n      return light.RED;\n  }\n}\n",
      "startingSuggestionRange": {
        "startLineNumber": 8,
        "startColumn": 1,
        "endLineNumberInclusive": 13,
        "endColumn": 1
      },
      "diffText": "      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n",
      "fullOriginalText": "      return TrafficLight.RED;\n    default:\n      return light.RED;\n  }\n}\n",
      "suggestionTriggerTime": 1741525974800.2,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
      "selection": {
        "startLineNumber": 8,
        "startColumn": 1,
        "endLineNumberInclusive": 13,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "a2d0d42c-57df-4e17-9301-7833aa3f54a2",
      "undoRedoGroup": {
        "id": 41,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;296"
    },
    "generationUUID": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
    "timestamp": "2025-03-09T13:12:56.197Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "8e138017-0be1-40a5-b28e-939668b132e8",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 60,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 60,
      "monotonicallyIncreasingSuggestionId": 40,
      "range": {
        "startLineNumber": 8,
        "startColumn": 1,
        "endLineNumberInclusive": 13,
        "endColumn": 1
      },
      "replaceText": "      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n",
      "originalText": "      return TrafficLight.RED;\n    default:\n      return light.RED;\n  }\n}\n",
      "startingSuggestionRange": {
        "startLineNumber": 8,
        "startColumn": 1,
        "endLineNumberInclusive": 13,
        "endColumn": 1
      },
      "diffText": "      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n",
      "fullOriginalText": "      return TrafficLight.RED;\n    default:\n      return light.RED;\n  }\n}\n",
      "suggestionTriggerTime": 1741525974800.2,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
      "selection": {
        "startLineNumber": 8,
        "startColumn": 1,
        "endLineNumberInclusive": 13,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "a2d0d42c-57df-4e17-9301-7833aa3f54a2",
      "undoRedoGroup": {
        "id": 41,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;296"
    },
    "generationUUID": "e7e7fedc-b86f-4b66-94bf-6c881ec3f691",
    "timestamp": "2025-03-09T13:12:56.209Z"
  },
  {
    "getFromDB": "predictionId",
    "possibleInvokeReason": "no suggestion but has predictionId",
    "predictionId": "a2d0d42c-57df-4e17-9301-7833aa3f54a2",
    "fusedCursorPrediction": null,
    "oldText": "      return TrafficLight.RED;\n    default:\n      return light.RED;\n  }\n}\n",
    "newText": "      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n",
    "timestamp": "2025-03-09T13:12:56.211Z"
  },
  {
    "intent": "lint_errors",
    "generationUUID": "690623eb-f409-41cb-894e-ec18728f403a",
    "timestamp": "2025-03-09T13:12:56.268Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Property 'RED' does not exist on type 'never'.",
            "range": {
              "startPosition": {
                "line": 10,
                "column": 20
              },
              "endPosition": {
                "line": 10,
                "column": 23
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 3,
                "column": 16
              },
              "endPosition": {
                "line": 3,
                "column": 19
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'GREEN' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 20
              },
              "endPosition": {
                "line": 4,
                "column": 25
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'GREEN' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 16
              },
              "endPosition": {
                "line": 5,
                "column": 21
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'YELLOW' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 6,
                "column": 20
              },
              "endPosition": {
                "line": 6,
                "column": 26
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'YELLOW' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 7,
                "column": 16
              },
              "endPosition": {
                "line": 7,
                "column": 22
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 8,
                "column": 20
              },
              "endPosition": {
                "line": 8,
                "column": 23
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Property 'RED' does not exist on type 'TrafficLight'.",
            "range": {
              "startPosition": {
                "line": 10,
                "column": 20
              },
              "endPosition": {
                "line": 10,
                "column": 23
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'changeLight' is defined but never used.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 21
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 9,
          "column": 6
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 61,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "lint_errors"
      },
      "clientTime": 1741525976267,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 0.900146484375,
      "timeAtRequestSend": 1741525976267
    },
    "generateUuid": "690623eb-f409-41cb-894e-ec18728f403a",
    "timestamp": "2025-03-09T13:12:56.270Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "690623eb-f409-41cb-894e-ec18728f403a",
    "timestamp": "2025-03-09T13:12:56.782Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "rangeToReplace": {
        "startLineNumber": 8,
        "endLineNumberInclusive": 13
      },
      "doneEdit": true,
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "690623eb-f409-41cb-894e-ec18728f403a",
    "timestamp": "2025-03-09T13:12:56.783Z"
  },
  {
    "firstChunkValue": "      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n",
    "generationUUID": "690623eb-f409-41cb-894e-ec18728f403a",
    "timestamp": "2025-03-09T13:12:56.783Z"
  },
  {
    "cursorRetrieval": {
      "text": "      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n"
    },
    "generationUUID": "690623eb-f409-41cb-894e-ec18728f403a",
    "timestamp": "2025-03-09T13:12:56.784Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "690623eb-f409-41cb-894e-ec18728f403a",
    "timestamp": "2025-03-09T13:12:56.784Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "690623eb-f409-41cb-894e-ec18728f403a",
    "timestamp": "2025-03-09T13:12:56.831Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "4734d401-f2e7-4116-9b4b-750c2b901e84",
    "generationUUID": "690623eb-f409-41cb-894e-ec18728f403a",
    "timestamp": "2025-03-09T13:12:56.876Z"
  },
  {
    "intent": "line_change",
    "generationUUID": "69b87f38-9bc9-4102-bbc3-01be7168b3c1",
    "timestamp": "2025-03-09T13:12:59.314Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 9,
          "column": 5
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 61,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1741525979362,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50.60009765625,
      "timeAtRequestSend": 1741525979362
    },
    "generateUuid": "69b87f38-9bc9-4102-bbc3-01be7168b3c1",
    "timestamp": "2025-03-09T13:12:59.364Z"
  },
  {
    "intent": "line_change",
    "generationUUID": "d8d08958-73d4-4998-8fce-319f6b3ffe3e",
    "timestamp": "2025-03-09T13:12:59.882Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 8,
          "column": 5
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 61,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1741525979920,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.199951171875,
      "timeAtRequestSend": 1741525979920
    },
    "generateUuid": "d8d08958-73d4-4998-8fce-319f6b3ffe3e",
    "timestamp": "2025-03-09T13:12:59.923Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "69b87f38-9bc9-4102-bbc3-01be7168b3c1",
    "timestamp": "2025-03-09T13:12:59.940Z"
  },
  {
    "firstChunkValue": "      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n",
    "generationUUID": "69b87f38-9bc9-4102-bbc3-01be7168b3c1",
    "timestamp": "2025-03-09T13:12:59.941Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "rangeToReplace": {
        "startLineNumber": 8,
        "endLineNumberInclusive": 13
      },
      "doneEdit": true,
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "69b87f38-9bc9-4102-bbc3-01be7168b3c1",
    "timestamp": "2025-03-09T13:12:59.942Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "69b87f38-9bc9-4102-bbc3-01be7168b3c1",
    "timestamp": "2025-03-09T13:12:59.942Z"
  },
  {
    "cursorRetrieval": {
      "text": "      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n"
    },
    "generationUUID": "69b87f38-9bc9-4102-bbc3-01be7168b3c1",
    "timestamp": "2025-03-09T13:12:59.942Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "69b87f38-9bc9-4102-bbc3-01be7168b3c1",
    "timestamp": "2025-03-09T13:12:59.974Z"
  },
  {
    "intent": "line_change",
    "generationUUID": "530bd7fd-1cbc-47bc-8db6-f866040db221",
    "timestamp": "2025-03-09T13:13:00.023Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "115aa55a-e831-4b9b-8ba2-020da9d71cc3",
    "generationUUID": "69b87f38-9bc9-4102-bbc3-01be7168b3c1",
    "timestamp": "2025-03-09T13:13:00.030Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 7,
          "column": 5
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 61,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1741525980066,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 56.5,
      "timeAtRequestSend": 1741525980066
    },
    "generateUuid": "530bd7fd-1cbc-47bc-8db6-f866040db221",
    "timestamp": "2025-03-09T13:13:00.068Z"
  },
  {
    "intent": "line_change",
    "generationUUID": "2e74c94a-a047-45a2-8dbf-99a4d865a98b",
    "timestamp": "2025-03-09T13:13:00.129Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 6,
          "column": 5
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 61,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1741525980178,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 55.800048828125,
      "timeAtRequestSend": 1741525980178
    },
    "generateUuid": "2e74c94a-a047-45a2-8dbf-99a4d865a98b",
    "timestamp": "2025-03-09T13:13:00.180Z"
  },
  {
    "intent": "line_change",
    "generationUUID": "bb6109f6-3824-4a20-a355-6f45df3293ab",
    "timestamp": "2025-03-09T13:13:00.253Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "rangeToReplace": {
        "startLineNumber": 8,
        "endLineNumberInclusive": 10
      },
      "doneEdit": true,
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "d8d08958-73d4-4998-8fce-319f6b3ffe3e",
    "timestamp": "2025-03-09T13:13:00.284Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "d8d08958-73d4-4998-8fce-319f6b3ffe3e",
    "timestamp": "2025-03-09T13:13:00.284Z"
  },
  {
    "firstChunkValue": "      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;",
    "generationUUID": "d8d08958-73d4-4998-8fce-319f6b3ffe3e",
    "timestamp": "2025-03-09T13:13:00.284Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "d8d08958-73d4-4998-8fce-319f6b3ffe3e",
    "timestamp": "2025-03-09T13:13:00.285Z"
  },
  {
    "cursorRetrieval": {
      "text": "      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;"
    },
    "generationUUID": "d8d08958-73d4-4998-8fce-319f6b3ffe3e",
    "timestamp": "2025-03-09T13:13:00.285Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 5,
          "column": 5
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 61,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1741525980295,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.60009765625,
      "timeAtRequestSend": 1741525980295
    },
    "generateUuid": "bb6109f6-3824-4a20-a355-6f45df3293ab",
    "timestamp": "2025-03-09T13:13:00.296Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "d8d08958-73d4-4998-8fce-319f6b3ffe3e",
    "timestamp": "2025-03-09T13:13:00.331Z"
  },
  {
    "intent": "line_change",
    "generationUUID": "81f6fb0d-76a8-4696-a5bf-08c0a2b03b5e",
    "timestamp": "2025-03-09T13:13:00.378Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 4,
          "column": 5
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 61,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1741525980424,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 54.7001953125,
      "timeAtRequestSend": 1741525980424
    },
    "generateUuid": "81f6fb0d-76a8-4696-a5bf-08c0a2b03b5e",
    "timestamp": "2025-03-09T13:13:00.426Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "rangeToReplace": {
        "startLineNumber": 7,
        "endLineNumberInclusive": 10
      },
      "doneEdit": true,
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "530bd7fd-1cbc-47bc-8db6-f866040db221",
    "timestamp": "2025-03-09T13:13:00.519Z"
  },
  {
    "cursorRetrieval": {
      "text": "    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;"
    },
    "generationUUID": "530bd7fd-1cbc-47bc-8db6-f866040db221",
    "timestamp": "2025-03-09T13:13:00.520Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "530bd7fd-1cbc-47bc-8db6-f866040db221",
    "timestamp": "2025-03-09T13:13:00.520Z"
  },
  {
    "intent": "line_change",
    "generationUUID": "34d5e3d9-af3b-4d62-9f3c-0c117f27e81f",
    "timestamp": "2025-03-09T13:13:00.527Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "530bd7fd-1cbc-47bc-8db6-f866040db221",
    "timestamp": "2025-03-09T13:13:00.528Z"
  },
  {
    "firstChunkValue": "    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;",
    "generationUUID": "530bd7fd-1cbc-47bc-8db6-f866040db221",
    "timestamp": "2025-03-09T13:13:00.528Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "530bd7fd-1cbc-47bc-8db6-f866040db221",
    "timestamp": "2025-03-09T13:13:00.529Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "f0d91a61-9445-4baa-91bf-49811eae81ee",
    "generationUUID": "d8d08958-73d4-4998-8fce-319f6b3ffe3e",
    "timestamp": "2025-03-09T13:13:00.530Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "a64a3b55-cb9a-41d0-8142-c8870b6af246",
    "generationUUID": "530bd7fd-1cbc-47bc-8db6-f866040db221",
    "timestamp": "2025-03-09T13:13:00.559Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 3,
          "column": 5
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 61,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1741525980569,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 52,
      "timeAtRequestSend": 1741525980569
    },
    "generateUuid": "34d5e3d9-af3b-4d62-9f3c-0c117f27e81f",
    "timestamp": "2025-03-09T13:13:00.571Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "2e74c94a-a047-45a2-8dbf-99a4d865a98b",
    "timestamp": "2025-03-09T13:13:00.664Z"
  },
  {
    "firstChunkValue": "      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;",
    "generationUUID": "2e74c94a-a047-45a2-8dbf-99a4d865a98b",
    "timestamp": "2025-03-09T13:13:00.664Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "2e74c94a-a047-45a2-8dbf-99a4d865a98b",
    "timestamp": "2025-03-09T13:13:00.665Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "rangeToReplace": {
        "startLineNumber": 6,
        "endLineNumberInclusive": 10
      },
      "doneEdit": true,
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "2e74c94a-a047-45a2-8dbf-99a4d865a98b",
    "timestamp": "2025-03-09T13:13:00.665Z"
  },
  {
    "cursorRetrieval": {
      "text": "      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;"
    },
    "generationUUID": "2e74c94a-a047-45a2-8dbf-99a4d865a98b",
    "timestamp": "2025-03-09T13:13:00.665Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "rangeToReplace": {
        "startLineNumber": 5,
        "endLineNumberInclusive": 9
      },
      "doneEdit": true,
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "bb6109f6-3824-4a20-a355-6f45df3293ab",
    "timestamp": "2025-03-09T13:13:00.685Z"
  },
  {
    "cursorRetrieval": {
      "text": "    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:"
    },
    "generationUUID": "bb6109f6-3824-4a20-a355-6f45df3293ab",
    "timestamp": "2025-03-09T13:13:00.685Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "2e74c94a-a047-45a2-8dbf-99a4d865a98b",
    "timestamp": "2025-03-09T13:13:00.685Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "bb6109f6-3824-4a20-a355-6f45df3293ab",
    "timestamp": "2025-03-09T13:13:00.686Z"
  },
  {
    "firstChunkValue": "    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:",
    "generationUUID": "bb6109f6-3824-4a20-a355-6f45df3293ab",
    "timestamp": "2025-03-09T13:13:00.687Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "bb6109f6-3824-4a20-a355-6f45df3293ab",
    "timestamp": "2025-03-09T13:13:00.687Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "bb6109f6-3824-4a20-a355-6f45df3293ab",
    "timestamp": "2025-03-09T13:13:00.746Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "26f49da4-a702-4da3-87c7-2a27236d7805",
    "generationUUID": "bb6109f6-3824-4a20-a355-6f45df3293ab",
    "timestamp": "2025-03-09T13:13:00.752Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "a30144d0-dbd5-4b60-bba2-31602730057f",
    "generationUUID": "2e74c94a-a047-45a2-8dbf-99a4d865a98b",
    "timestamp": "2025-03-09T13:13:00.753Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "81f6fb0d-76a8-4696-a5bf-08c0a2b03b5e",
    "timestamp": "2025-03-09T13:13:00.791Z"
  },
  {
    "firstChunkValue": "      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;",
    "generationUUID": "81f6fb0d-76a8-4696-a5bf-08c0a2b03b5e",
    "timestamp": "2025-03-09T13:13:00.791Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "81f6fb0d-76a8-4696-a5bf-08c0a2b03b5e",
    "timestamp": "2025-03-09T13:13:00.792Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "rangeToReplace": {
        "startLineNumber": 4,
        "endLineNumberInclusive": 8
      },
      "doneEdit": true,
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "81f6fb0d-76a8-4696-a5bf-08c0a2b03b5e",
    "timestamp": "2025-03-09T13:13:00.792Z"
  },
  {
    "cursorRetrieval": {
      "text": "      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;"
    },
    "generationUUID": "81f6fb0d-76a8-4696-a5bf-08c0a2b03b5e",
    "timestamp": "2025-03-09T13:13:00.792Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "81f6fb0d-76a8-4696-a5bf-08c0a2b03b5e",
    "timestamp": "2025-03-09T13:13:00.811Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "rangeToReplace": {
        "startLineNumber": 3,
        "endLineNumberInclusive": 7
      },
      "doneEdit": true,
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "34d5e3d9-af3b-4d62-9f3c-0c117f27e81f",
    "timestamp": "2025-03-09T13:13:01.028Z"
  },
  {
    "cursorRetrieval": {
      "text": "    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:"
    },
    "generationUUID": "34d5e3d9-af3b-4d62-9f3c-0c117f27e81f",
    "timestamp": "2025-03-09T13:13:01.029Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "34d5e3d9-af3b-4d62-9f3c-0c117f27e81f",
    "timestamp": "2025-03-09T13:13:01.029Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "34d5e3d9-af3b-4d62-9f3c-0c117f27e81f",
    "timestamp": "2025-03-09T13:13:01.030Z"
  },
  {
    "firstChunkValue": "    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
    "generationUUID": "34d5e3d9-af3b-4d62-9f3c-0c117f27e81f",
    "timestamp": "2025-03-09T13:13:01.030Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "34d5e3d9-af3b-4d62-9f3c-0c117f27e81f",
    "timestamp": "2025-03-09T13:13:01.031Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "75fef92a-9f47-47ee-b09f-6747b4058caa",
    "generationUUID": "81f6fb0d-76a8-4696-a5bf-08c0a2b03b5e",
    "timestamp": "2025-03-09T13:13:01.031Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "71e067ec-92f7-4118-b342-a2cc4c6bac97",
    "generationUUID": "34d5e3d9-af3b-4d62-9f3c-0c117f27e81f",
    "timestamp": "2025-03-09T13:13:01.073Z"
  },
  {
    "intent": "typing",
    "generationUUID": "9bdb6f0e-1f63-40cb-b1de-2846146fa72a",
    "timestamp": "2025-03-09T13:13:01.294Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n",
            "4-|      return TrafficLight.GREEN;\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 3,
          "column": 4
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 62,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525981326,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.10009765625,
      "timeAtRequestSend": 1741525981326
    },
    "generateUuid": "9bdb6f0e-1f63-40cb-b1de-2846146fa72a",
    "timestamp": "2025-03-09T13:13:01.328Z"
  },
  {
    "intent": "typing",
    "generationUUID": "3503fed7-083e-47ff-b503-4912c0ffd4e5",
    "timestamp": "2025-03-09T13:13:01.616Z"
  },
  {
    "intent": "typing",
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:01.617Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n",
            "4-|      return TrafficLight.GREEN;\n",
            "4-|      \n4+|    \n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Expected a 'break' statement before 'case'.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 5
              },
              "endPosition": {
                "line": 6,
                "column": 34
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n    \n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 3,
          "column": 4
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 64,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525981597,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.10009765625,
      "timeAtRequestSend": 1741525981597
    },
    "generateUuid": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:01.617Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "timestamp": "2025-03-09T13:13:01.807Z"
  },
  {
    "intent": "typing",
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:01.815Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n",
            "4-|      return TrafficLight.GREEN;\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Expected a 'break' statement before 'case'.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 5
              },
              "endPosition": {
                "line": 6,
                "column": 34
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      \n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 3,
          "column": 6
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 65,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525981859,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50.699951171875,
      "timeAtRequestSend": 1741525981859
    },
    "generateUuid": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:01.860Z"
  },
  {
    "intent": "typing",
    "generationUUID": "172ca9ef-280e-428d-b142-9b89e3aafa76",
    "timestamp": "2025-03-09T13:13:02.094Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n",
            "4-|      return TrafficLight.GREEN;\n",
            "4-|      \n4+|      c\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 7
              },
              "endPosition": {
                "line": 4,
                "column": 8
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Expected a 'break' statement before 'case'.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 5
              },
              "endPosition": {
                "line": 6,
                "column": 34
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      c\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 3,
          "column": 7
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 66,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525982135,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 54.2001953125,
      "timeAtRequestSend": 1741525982135
    },
    "generateUuid": "172ca9ef-280e-428d-b142-9b89e3aafa76",
    "timestamp": "2025-03-09T13:13:02.137Z"
  },
  {
    "intent": "typing",
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.147Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n",
            "4-|      return TrafficLight.GREEN;\n",
            "4-|      \n4+|      co\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 7
              },
              "endPosition": {
                "line": 4,
                "column": 9
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Expected a 'break' statement before 'case'.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 5
              },
              "endPosition": {
                "line": 6,
                "column": 34
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 7
              },
              "endPosition": {
                "line": 4,
                "column": 8
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      co\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 3,
          "column": 8
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 67,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525982188,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50.89990234375,
      "timeAtRequestSend": 1741525982188
    },
    "generateUuid": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.190Z"
  },
  {
    "intent": "typing",
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.229Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n",
            "4-|      return TrafficLight.GREEN;\n",
            "4-|      \n4+|      con\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 7
              },
              "endPosition": {
                "line": 4,
                "column": 10
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Expected a 'break' statement before 'case'.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 5
              },
              "endPosition": {
                "line": 6,
                "column": 34
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 7
              },
              "endPosition": {
                "line": 4,
                "column": 9
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      con\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 3,
          "column": 9
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 68,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525982267,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 49.7001953125,
      "timeAtRequestSend": 1741525982267
    },
    "generateUuid": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.268Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.301Z"
  },
  {
    "firstChunkValue": "    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.302Z"
  },
  {
    "cursorRetrieval": {
      "text": "    case TrafficLight.RED:\n     ",
      "rangeToReplace": {
        "startLineNumber": 3,
        "endLineNumberInclusive": 7
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.304Z"
  },
  {
    "cursorRetrieval": {
      "text": " return TrafficLight.GRE"
    },
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.305Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.305Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n   "
    },
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.305Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "404a0490-ce37-4b45-b562-892365a58407",
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.306Z"
  },
  {
    "cursorRetrieval": {
      "text": "EN;"
    },
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.306Z"
  },
  {
    "cursorRetrieval": {
      "text": " case"
    },
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.306Z"
  },
  {
    "cursorRetrieval": {
      "text": "EN"
    },
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.307Z"
  },
  {
    "cursorRetrieval": {
      "text": " TrafficLight.GRE"
    },
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.307Z"
  },
  {
    "cursorRetrieval": {
      "text": ":\n      return TrafficLight.Y"
    },
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.307Z"
  },
  {
    "cursorRetrieval": {
      "text": "ELLOW;"
    },
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.307Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.307Z"
  },
  {
    "cursorRetrieval": {
      "text": " case"
    },
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.308Z"
  },
  {
    "cursorRetrieval": {
      "text": "   "
    },
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.308Z"
  },
  {
    "cursorRetrieval": {
      "text": " TrafficLight.YELLOW:"
    },
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.308Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.308Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "2ca3727c-832a-4ed4-92e4-68766ad4b99d",
    "timestamp": "2025-03-09T13:13:02.308Z"
  },
  {
    "intent": "typing",
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:02.321Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n",
            "4-|      return TrafficLight.GREEN;\n",
            "4-|      \n4+|      cons\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 7
              },
              "endPosition": {
                "line": 4,
                "column": 11
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Expected a 'break' statement before 'case'.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 5
              },
              "endPosition": {
                "line": 6,
                "column": 34
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 7
              },
              "endPosition": {
                "line": 4,
                "column": 10
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      cons\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 3,
          "column": 10
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 69,
        "cellStartLines": [],
        "cells": [],
        "sha256Hash": "59e271a2ec93f92650e40b0231bd54b7155ccffec1c2097b430c492ab1559b0c",
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525982370,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": [
          {
            "label": "console"
          },
          {
            "label": "const"
          },
          {
            "label": "ConstantSourceNode"
          },
          {
            "label": "CompressionStream"
          },
          {
            "label": "ContentVisibilityAutoStateChangeEvent"
          },
          {
            "label": "CountQueuingStrategy"
          },
          {
            "label": "CompositionEvent"
          },
          {
            "label": "crossOriginIsolated"
          },
          {
            "label": "CSSCounterStyleRule"
          },
          {
            "label": "CloseEvent"
          },
          {
            "label": "HTMLFormControlsCollection"
          },
          {
            "label": "EventCounts"
          },
          {
            "label": "CaretPosition"
          },
          {
            "label": "customElements"
          },
          {
            "label": "DynamicsCompressorNode"
          },
          {
            "label": "CSSFontFeatureValuesRule"
          },
          {
            "label": "CSSFontPaletteValuesRule"
          },
          {
            "label": "CustomElementRegistry"
          },
          {
            "label": "GeolocationCoordinates"
          }
        ]
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 53.599853515625,
      "timeAtRequestSend": 1741525982370
    },
    "generateUuid": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:02.373Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.648Z"
  },
  {
    "cursorRetrieval": {
      "text": "    case TrafficLight.RED:\n     ",
      "rangeToReplace": {
        "startLineNumber": 3,
        "endLineNumberInclusive": 7
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.650Z"
  },
  {
    "cursorRetrieval": {
      "text": " return TrafficLight.GREEN;\n"
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.651Z"
  },
  {
    "cursorRetrieval": {
      "text": "   "
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.651Z"
  },
  {
    "cursorRetrieval": {
      "text": " TrafficLight.GRE"
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.651Z"
  },
  {
    "cursorRetrieval": {
      "text": " case"
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.651Z"
  },
  {
    "cursorRetrieval": {
      "text": "EN:"
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.651Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.651Z"
  },
  {
    "cursorRetrieval": {
      "text": "     "
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.652Z"
  },
  {
    "cursorRetrieval": {
      "text": " return TrafficLight.Y"
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.652Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n   "
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.652Z"
  },
  {
    "cursorRetrieval": {
      "text": "ELLOW;"
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.652Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light.Y"
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.652Z"
  },
  {
    "cursorRetrieval": {
      "text": " case Traffic"
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.652Z"
  },
  {
    "cursorRetrieval": {
      "text": "ELL"
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.653Z"
  },
  {
    "cursorRetrieval": {
      "text": "OW:"
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.741Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.741Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.742Z"
  },
  {
    "cursorRetrieval": {
      "text": "    case TrafficLight.RED:\n      console",
      "rangeToReplace": {
        "startLineNumber": 3,
        "endLineNumberInclusive": 7
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.742Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.742Z"
  },
  {
    "cursorRetrieval": {
      "text": ".log('red"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.742Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n     "
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.742Z"
  },
  {
    "cursorRetrieval": {
      "text": ";"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.743Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.743Z"
  },
  {
    "firstChunkValue": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.743Z"
  },
  {
    "cursorRetrieval": {
      "text": " break"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.743Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n   "
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.743Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.743Z"
  },
  {
    "firstChunkValue": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.743Z"
  },
  {
    "firstChunkValue": "    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.743Z"
  },
  {
    "cursorRetrieval": {
      "text": " case"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.743Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.744Z"
  },
  {
    "cursorRetrieval": {
      "text": "    case TrafficLight.RED:\n      console",
      "rangeToReplace": {
        "startLineNumber": 3,
        "endLineNumberInclusive": 7
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.744Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:"
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.744Z"
  },
  {
    "cursorRetrieval": {
      "text": " TrafficLight.GRE"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.744Z"
  },
  {
    "cursorRetrieval": {
      "text": "EN:\n      console"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.744Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.744Z"
  },
  {
    "cursorRetrieval": {
      "text": ".log('red"
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.744Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.744Z"
  },
  {
    "cursorRetrieval": {
      "text": "log('green"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.745Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.745Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n     "
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.745Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.745Z"
  },
  {
    "cursorRetrieval": {
      "text": " break"
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.745Z"
  },
  {
    "cursorRetrieval": {
      "text": ";"
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.745Z"
  },
  {
    "cursorRetrieval": {
      "text": "     "
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.745Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.745Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "a4de9c96-b62e-4fd1-a5f2-d22ffe24fab9",
    "generationUUID": "6f2bfd27-3afc-42b5-bcdd-0db3be570335",
    "timestamp": "2025-03-09T13:13:02.746Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n   "
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.818Z"
  },
  {
    "cursorRetrieval": {
      "text": " break"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.819Z"
  },
  {
    "cursorRetrieval": {
      "text": " case"
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.819Z"
  },
  {
    "cursorRetrieval": {
      "text": ";\n"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.819Z"
  },
  {
    "cursorRetrieval": {
      "text": "   "
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.819Z"
  },
  {
    "cursorRetrieval": {
      "text": " TrafficLight.GRE"
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.819Z"
  },
  {
    "cursorRetrieval": {
      "text": " case"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.819Z"
  },
  {
    "cursorRetrieval": {
      "text": "EN:\n      console"
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.819Z"
  },
  {
    "cursorRetrieval": {
      "text": " TrafficLight.YELLOW:"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.819Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.819Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.820Z"
  },
  {
    "cursorRetrieval": {
      "text": "log('green"
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.820Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.820Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.820Z"
  },
  {
    "cursorRetrieval": {
      "text": "     "
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.820Z"
  },
  {
    "fullText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.820Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:"
    },
    "fullText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.820Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && remaining reason && need to create newSuggestion according fullText, will attach onAcceptDisplayId to currentSuggestion if newSuggestion is not undefined",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "9670db54-bd3e-4288-9470-9ce90adec132",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 67,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 70,
      "monotonicallyIncreasingSuggestionId": 43,
      "range": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "replaceText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
      "originalText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "startingSuggestionRange": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "diffText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
      "fullOriginalText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "suggestionTriggerTime": 1741525982137.1,
      "greens": [],
      "source": "typing",
      "requestId": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
      "selection": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "fusedCursorPredictionId": "244359e8-aa77-4185-a56f-4ee84eb29901",
      "undoRedoGroup": {
        "id": 44,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:02.820Z"
  },
  {
    "cursorRetrieval": {
      "text": " break"
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.820Z"
  },
  {
    "cursorRetrieval": {
      "text": ";\n"
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.821Z"
  },
  {
    "cursorRetrieval": {
      "text": "   "
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.821Z"
  },
  {
    "cursorRetrieval": {
      "text": " case"
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:02.821Z"
  },
  {
    "fullText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:03.019Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:"
    },
    "fullText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:03.020Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && currentSuggestion uniqueId is different && need to create newSuggestion according fullText",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "063ea461-9eff-417c-a174-3dafb23aa437",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 68,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 69,
      "monotonicallyIncreasingSuggestionId": 44,
      "range": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "replaceText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
      "originalText": "    case TrafficLight.RED:\n      cons\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "startingSuggestionRange": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "diffText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
      "fullOriginalText": "    case TrafficLight.RED:\n      cons\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "suggestionTriggerTime": 1741525982216.9,
      "greens": [],
      "source": "typing",
      "requestId": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
      "selection": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "fusedCursorPredictionId": "0b2c3a00-6d31-4d48-be82-51a80a39c3c9",
      "undoRedoGroup": {
        "id": 45,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:03.022Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.022Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 8,
      "text": "return TrafficLight.RED;\ndefault:\nreturn TrafficLight.RED;\n}\n}",
      "shouldRetriggerCpp": true
    },
    "predictionId": "244359e8-aa77-4185-a56f-4ee84eb29901",
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:03.023Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:"
    },
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 8,
      "text": "return TrafficLight.RED;\ndefault:\nreturn TrafficLight.RED;\n}\n}",
      "shouldRetriggerCpp": true
    },
    "predictionId": "244359e8-aa77-4185-a56f-4ee84eb29901",
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:03.023Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "244359e8-aa77-4185-a56f-4ee84eb29901",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 8,
      "text": "return TrafficLight.RED;\ndefault:\nreturn TrafficLight.RED;\n}\n}",
      "shouldRetriggerCpp": true
    },
    "timestamp": "2025-03-09T13:13:03.024Z"
  },
  {
    "cursorRetrieval": {
      "text": " TrafficLight.YELLOW:"
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:03.025Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:03.026Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 8,
        "expectedContent": "return TrafficLight.RED;\ndefault:\nreturn TrafficLight.RED;\n}\n}",
        "shouldRetriggerCpp": true
      }
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:03.027Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:03.028Z"
  },
  {
    "cursorRetrieval": {
      "text": "    case TrafficLight.RED:\n      console",
      "rangeToReplace": {
        "startLineNumber": 3,
        "endLineNumberInclusive": 7
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.028Z"
  },
  {
    "firstChunkValue": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.109Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 8,
      "text": "return TrafficLight.RED;\ndefault:\nreturn TrafficLight.RED;\n}\n}",
      "shouldRetriggerCpp": true
    },
    "predictionId": "0b2c3a00-6d31-4d48-be82-51a80a39c3c9",
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:03.124Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:"
    },
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 8,
      "text": "return TrafficLight.RED;\ndefault:\nreturn TrafficLight.RED;\n}\n}",
      "shouldRetriggerCpp": true
    },
    "predictionId": "0b2c3a00-6d31-4d48-be82-51a80a39c3c9",
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:03.125Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "0b2c3a00-6d31-4d48-be82-51a80a39c3c9",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 8,
      "text": "return TrafficLight.RED;\ndefault:\nreturn TrafficLight.RED;\n}\n}",
      "shouldRetriggerCpp": true
    },
    "timestamp": "2025-03-09T13:13:03.126Z"
  },
  {
    "cursorRetrieval": {
      "text": ".log('red"
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.126Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.127Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:"
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.127Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n     "
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.127Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 8,
        "expectedContent": "return TrafficLight.RED;\ndefault:\nreturn TrafficLight.RED;\n}\n}",
        "shouldRetriggerCpp": true
      }
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:03.128Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "a39c5872-4821-4cb7-8f8f-84d1639f609e",
    "timestamp": "2025-03-09T13:13:03.128Z"
  },
  {
    "cursorRetrieval": {
      "text": " break"
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.129Z"
  },
  {
    "cursorRetrieval": {
      "text": ";"
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.129Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n   "
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.130Z"
  },
  {
    "cursorRetrieval": {
      "text": " case"
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.131Z"
  },
  {
    "cursorRetrieval": {
      "text": " TrafficLight.GRE"
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.131Z"
  },
  {
    "cursorRetrieval": {
      "text": "EN:\n      console"
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.132Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.133Z"
  },
  {
    "cursorRetrieval": {
      "text": "log('green"
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.133Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.134Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.134Z"
  },
  {
    "cursorRetrieval": {
      "text": "     "
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.134Z"
  },
  {
    "cursorRetrieval": {
      "text": " break"
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.135Z"
  },
  {
    "cursorRetrieval": {
      "text": ";\n"
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.135Z"
  },
  {
    "cursorRetrieval": {
      "text": "   "
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.136Z"
  },
  {
    "cursorRetrieval": {
      "text": " case"
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.136Z"
  },
  {
    "cursorRetrieval": {
      "text": " TrafficLight.YELLOW:"
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.136Z"
  },
  {
    "fullText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.186Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:"
    },
    "fullText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.188Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && currentSuggestion uniqueId is different && need to create newSuggestion according fullText",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "f034b397-faec-43d7-8206-80d1d63e0967",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 69,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 69,
      "monotonicallyIncreasingSuggestionId": 46,
      "range": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "replaceText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
      "originalText": "    case TrafficLight.RED:\n      cons\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "startingSuggestionRange": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "diffText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
      "fullOriginalText": "    case TrafficLight.RED:\n      cons\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "suggestionTriggerTime": 1741525982316.1,
      "greens": [],
      "source": "typing",
      "requestId": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
      "selection": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "fusedCursorPredictionId": "fc25758e-ccf5-4514-8d2f-b6a176a66ab8",
      "undoRedoGroup": {
        "id": 47,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.188Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.189Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 8,
        "expectedContent": "return TrafficLight.RED;\ndefault:\nreturn TrafficLight.RED;\n}\n}",
        "shouldRetriggerCpp": true
      }
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.204Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 8,
      "text": "return TrafficLight.RED;\ndefault:\nreturn TrafficLight.RED;\n}\n}",
      "shouldRetriggerCpp": true
    },
    "predictionId": "fc25758e-ccf5-4514-8d2f-b6a176a66ab8",
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.205Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:"
    },
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 8,
      "text": "return TrafficLight.RED;\ndefault:\nreturn TrafficLight.RED;\n}\n}",
      "shouldRetriggerCpp": true
    },
    "predictionId": "fc25758e-ccf5-4514-8d2f-b6a176a66ab8",
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.206Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "fc25758e-ccf5-4514-8d2f-b6a176a66ab8",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 8,
      "text": "return TrafficLight.RED;\ndefault:\nreturn TrafficLight.RED;\n}\n}",
      "shouldRetriggerCpp": true
    },
    "timestamp": "2025-03-09T13:13:03.206Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "6cd56348-ec51-44cb-8093-fe8c9ec3c338",
    "timestamp": "2025-03-09T13:13:03.207Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "214a0e87-a00b-4070-a461-6b99300359f0",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 67,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 67,
      "monotonicallyIncreasingSuggestionId": 41,
      "range": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "replaceText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "originalText": "    case TrafficLight.RED:\n      co\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "startingSuggestionRange": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "diffText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "fullOriginalText": "    case TrafficLight.RED:\n      co\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "suggestionTriggerTime": 1741525982137.1,
      "greens": [],
      "source": "typing",
      "requestId": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
      "selection": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "undoRedoGroup": {
        "id": 42,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "abortController": {},
      "trackedRange": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumber": 7,
        "endColumn": 30
      },
      "trackedText": "    case TrafficLight.RED:\n      cons\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "decorationId": "f;314",
      "onAcceptDisplayId": "9670db54-bd3e-4288-9470-9ce90adec132"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:03.323Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "214a0e87-a00b-4070-a461-6b99300359f0",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 67,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 67,
      "monotonicallyIncreasingSuggestionId": 41,
      "range": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "replaceText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "originalText": "    case TrafficLight.RED:\n      co\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "startingSuggestionRange": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "diffText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "fullOriginalText": "    case TrafficLight.RED:\n      co\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "suggestionTriggerTime": 1741525982137.1,
      "greens": [],
      "source": "typing",
      "requestId": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
      "selection": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "undoRedoGroup": {
        "id": 42,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "abortController": {},
      "trackedRange": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumber": 7,
        "endColumn": 30
      },
      "trackedText": "    case TrafficLight.RED:\n      cons\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "decorationId": "f;314",
      "onAcceptDisplayId": "9670db54-bd3e-4288-9470-9ce90adec132"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:03.329Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "9670db54-bd3e-4288-9470-9ce90adec132",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 67,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 70,
      "monotonicallyIncreasingSuggestionId": 43,
      "range": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "replaceText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
      "originalText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "startingSuggestionRange": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "diffText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
      "fullOriginalText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "suggestionTriggerTime": 1741525982137.1,
      "greens": [],
      "source": "typing",
      "requestId": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
      "selection": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "fusedCursorPredictionId": "244359e8-aa77-4185-a56f-4ee84eb29901",
      "undoRedoGroup": {
        "id": 44,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;320"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:04.191Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "9670db54-bd3e-4288-9470-9ce90adec132",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 67,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 70,
      "monotonicallyIncreasingSuggestionId": 43,
      "range": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "replaceText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
      "originalText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "startingSuggestionRange": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "diffText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
      "fullOriginalText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
      "suggestionTriggerTime": 1741525982137.1,
      "greens": [],
      "source": "typing",
      "requestId": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
      "selection": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 30
      },
      "fusedCursorPredictionId": "244359e8-aa77-4185-a56f-4ee84eb29901",
      "undoRedoGroup": {
        "id": 44,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;320"
    },
    "generationUUID": "27c5ed56-e8a3-4f4f-a64e-0dcbd40c6ec3",
    "timestamp": "2025-03-09T13:13:04.203Z"
  },
  {
    "getFromDB": "predictionId",
    "possibleInvokeReason": "no suggestion but has predictionId",
    "predictionId": "244359e8-aa77-4185-a56f-4ee84eb29901",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 8,
      "text": "return TrafficLight.RED;\ndefault:\nreturn TrafficLight.RED;\n}\n}",
      "shouldRetriggerCpp": true
    },
    "oldText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
    "newText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
    "timestamp": "2025-03-09T13:13:04.204Z"
  },
  {
    "action": "displayFusedCursorPrediction",
    "predictionId": "244359e8-aa77-4185-a56f-4ee84eb29901",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 8,
      "text": "return TrafficLight.RED;\ndefault:\nreturn TrafficLight.RED;\n}\n}",
      "shouldRetriggerCpp": true
    },
    "oldText": "    case TrafficLight.RED:\n      console.log('red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:",
    "newText": "    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:",
    "timestamp": "2025-03-09T13:13:04.206Z"
  },
  {
    "intent": "cursor_prediction",
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.206Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n",
            "4-|      return TrafficLight.GREEN;\n",
            "4-|      \n4+|      console.log('red');\n",
            "6-|      return TrafficLight.YELLOW;\n6+|      return');\n7+|      break;\n",
            "5+|      break;\n6-|      return');\n7+|      console.log('green');\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Expected a 'break' statement before 'case'.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 5
              },
              "endPosition": {
                "line": 6,
                "column": 34
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 7
              },
              "endPosition": {
                "line": 4,
                "column": 10
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 9,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 71,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "cursor_prediction"
      },
      "clientTime": 1741525984215,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 10.60009765625,
      "timeAtRequestSend": 1741525984215
    },
    "generateUuid": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.217Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.625Z"
  },
  {
    "cursorRetrieval": {
      "text": "    case TrafficLight.YELLOW:\n      console",
      "rangeToReplace": {
        "startLineNumber": 9,
        "endLineNumberInclusive": 12
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.627Z"
  },
  {
    "cursorRetrieval": {
      "text": ".log('yellow"
    },
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.627Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.627Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n     "
    },
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.628Z"
  },
  {
    "cursorRetrieval": {
      "text": " break"
    },
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.628Z"
  },
  {
    "cursorRetrieval": {
      "text": ";\n   "
    },
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.631Z"
  },
  {
    "firstChunkValue": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');",
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.712Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 24,
      "text": "console.log(newLight);\n",
      "shouldRetriggerCpp": false
    },
    "predictionId": "92886996-c0e8-42c2-bafa-85b6f6117a88",
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.713Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');"
    },
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.714Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.714Z"
  },
  {
    "cursorRetrieval": {
      "text": " default:\n      console"
    },
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.714Z"
  },
  {
    "cursorRetrieval": {
      "text": "log('red"
    },
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.715Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.715Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 24,
        "expectedContent": "console.log(newLight);\n",
        "shouldRetriggerCpp": false
      }
    },
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.715Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.715Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.715Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');"
    },
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 24,
      "text": "console.log(newLight);\n",
      "shouldRetriggerCpp": false
    },
    "predictionId": "92886996-c0e8-42c2-bafa-85b6f6117a88",
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:04.719Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "92886996-c0e8-42c2-bafa-85b6f6117a88",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 24,
      "text": "console.log(newLight);\n",
      "shouldRetriggerCpp": false
    },
    "timestamp": "2025-03-09T13:13:04.720Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "704844b4-455c-49f5-b5bc-68d99c3b495f",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 71,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 71,
      "monotonicallyIncreasingSuggestionId": 47,
      "range": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 12,
        "endColumn": 31
      },
      "replaceText": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');",
      "originalText": "    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;",
      "startingSuggestionRange": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 12,
        "endColumn": 31
      },
      "diffText": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');",
      "fullOriginalText": "    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;",
      "suggestionTriggerTime": 1741525984204,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "400ce835-a238-4974-90eb-f3292d0ab389",
      "selection": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 12,
        "endColumn": 31
      },
      "fusedCursorPredictionId": "92886996-c0e8-42c2-bafa-85b6f6117a88",
      "undoRedoGroup": {
        "id": 48,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;331"
    },
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:05.211Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "704844b4-455c-49f5-b5bc-68d99c3b495f",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 71,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 71,
      "monotonicallyIncreasingSuggestionId": 47,
      "range": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 12,
        "endColumn": 31
      },
      "replaceText": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');",
      "originalText": "    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;",
      "startingSuggestionRange": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 12,
        "endColumn": 31
      },
      "diffText": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');",
      "fullOriginalText": "    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;",
      "suggestionTriggerTime": 1741525984204,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "400ce835-a238-4974-90eb-f3292d0ab389",
      "selection": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 12,
        "endColumn": 31
      },
      "fusedCursorPredictionId": "92886996-c0e8-42c2-bafa-85b6f6117a88",
      "undoRedoGroup": {
        "id": 48,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;331"
    },
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:05.878Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "704844b4-455c-49f5-b5bc-68d99c3b495f",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 71,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 71,
      "monotonicallyIncreasingSuggestionId": 47,
      "range": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 12,
        "endColumn": 31
      },
      "replaceText": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');",
      "originalText": "    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;",
      "startingSuggestionRange": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 12,
        "endColumn": 31
      },
      "diffText": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');",
      "fullOriginalText": "    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;",
      "suggestionTriggerTime": 1741525984204,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "400ce835-a238-4974-90eb-f3292d0ab389",
      "selection": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 12,
        "endColumn": 31
      },
      "fusedCursorPredictionId": "92886996-c0e8-42c2-bafa-85b6f6117a88",
      "undoRedoGroup": {
        "id": 48,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;331"
    },
    "generationUUID": "400ce835-a238-4974-90eb-f3292d0ab389",
    "timestamp": "2025-03-09T13:13:05.895Z"
  },
  {
    "getFromDB": "predictionId",
    "possibleInvokeReason": "no suggestion but has predictionId",
    "predictionId": "92886996-c0e8-42c2-bafa-85b6f6117a88",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 24,
      "text": "console.log(newLight);\n",
      "shouldRetriggerCpp": false
    },
    "oldText": "    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;",
    "newText": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');",
    "timestamp": "2025-03-09T13:13:05.896Z"
  },
  {
    "action": "displayFusedCursorPrediction",
    "predictionId": "92886996-c0e8-42c2-bafa-85b6f6117a88",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 24,
      "text": "console.log(newLight);\n",
      "shouldRetriggerCpp": false
    },
    "oldText": "    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      return TrafficLight.RED;",
    "newText": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');",
    "timestamp": "2025-03-09T13:13:05.896Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "timestamp": "2025-03-09T13:13:06.911Z"
  },
  {
    "intent": "cursor_prediction",
    "generationUUID": "77447846-7ddd-47c8-8213-c5a3ae58ab1b",
    "timestamp": "2025-03-09T13:13:06.912Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n",
            "4-|      return TrafficLight.GREEN;\n",
            "4-|      \n4+|      console.log('red');\n",
            "6-|      return TrafficLight.YELLOW;\n6+|      return');\n7+|      break;\n",
            "5+|      break;\n6-|      return');\n7+|      console.log('green');\n",
            "12-|      return TrafficLight.RED;\n12+|      console.log('red');\n",
            "10-|      return TrafficLight.RED;\n10+|      return.log('yellow');\n11+|      break;\n",
            "10-|      return.log('yellow');\n10+|      console.log('yellow');\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Expected an assignment or function call and instead saw an expression.",
            "range": {
              "startPosition": {
                "line": 4,
                "column": 7
              },
              "endPosition": {
                "line": 4,
                "column": 10
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Expected a 'break' statement before 'case'.",
            "range": {
              "startPosition": {
                "line": 5,
                "column": 5
              },
              "endPosition": {
                "line": 6,
                "column": 34
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      console.log('red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
        "cursorPosition": {
          "line": 24,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 72,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "cursor_prediction"
      },
      "clientTime": 1741525986918,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 6.5,
      "timeAtRequestSend": 1741525986918
    },
    "generateUuid": "77447846-7ddd-47c8-8213-c5a3ae58ab1b",
    "timestamp": "2025-03-09T13:13:06.920Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "77447846-7ddd-47c8-8213-c5a3ae58ab1b",
    "timestamp": "2025-03-09T13:13:07.435Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nconst light = TrafficLight.RED;\nchange",
      "rangeToReplace": {
        "startLineNumber": 22,
        "endLineNumberInclusive": 26
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "77447846-7ddd-47c8-8213-c5a3ae58ab1b",
    "timestamp": "2025-03-09T13:13:07.436Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light"
    },
    "generationUUID": "77447846-7ddd-47c8-8213-c5a3ae58ab1b",
    "timestamp": "2025-03-09T13:13:07.450Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "77447846-7ddd-47c8-8213-c5a3ae58ab1b",
    "timestamp": "2025-03-09T13:13:07.458Z"
  },
  {
    "cursorRetrieval": {
      "text": "light);\n"
    },
    "generationUUID": "77447846-7ddd-47c8-8213-c5a3ae58ab1b",
    "timestamp": "2025-03-09T13:13:07.469Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "77447846-7ddd-47c8-8213-c5a3ae58ab1b",
    "timestamp": "2025-03-09T13:13:07.517Z"
  },
  {
    "firstChunkValue": "\nconst light = TrafficLight.RED;\nchangeLight(light);\n",
    "generationUUID": "77447846-7ddd-47c8-8213-c5a3ae58ab1b",
    "timestamp": "2025-03-09T13:13:07.518Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "\nconst light = TrafficLight.RED;\nchangeLight(light);\n"
    },
    "generationUUID": "77447846-7ddd-47c8-8213-c5a3ae58ab1b",
    "timestamp": "2025-03-09T13:13:07.519Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "77447846-7ddd-47c8-8213-c5a3ae58ab1b",
    "timestamp": "2025-03-09T13:13:07.541Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "a57b698f-6ec0-4aa6-ba07-41a28300bf8d",
    "generationUUID": "77447846-7ddd-47c8-8213-c5a3ae58ab1b",
    "timestamp": "2025-03-09T13:13:07.573Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "\nconst light = TrafficLight.RED;\nchangeLight(light);\n"
    },
    "fusedCursorPrediction": null,
    "predictionId": "a57b698f-6ec0-4aa6-ba07-41a28300bf8d",
    "generationUUID": "77447846-7ddd-47c8-8213-c5a3ae58ab1b",
    "timestamp": "2025-03-09T13:13:07.574Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "a57b698f-6ec0-4aa6-ba07-41a28300bf8d",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:13:07.574Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "18417100-eda0-4b0a-9b5a-fcb503a47191",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 72,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 72,
      "monotonicallyIncreasingSuggestionId": 48,
      "range": {
        "startLineNumber": 22,
        "startColumn": 1,
        "endLineNumberInclusive": 26,
        "endColumn": 1
      },
      "replaceText": "\nconst light = TrafficLight.RED;\nchangeLight(light);\n",
      "originalText": "\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
      "startingSuggestionRange": {
        "startLineNumber": 22,
        "startColumn": 1,
        "endLineNumberInclusive": 26,
        "endColumn": 1
      },
      "diffText": "\nconst light = TrafficLight.RED;\nchangeLight(light);\n",
      "fullOriginalText": "\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
      "suggestionTriggerTime": 1741525986911.1,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "77447846-7ddd-47c8-8213-c5a3ae58ab1b",
      "selection": {
        "startLineNumber": 22,
        "startColumn": 1,
        "endLineNumberInclusive": 26,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "a57b698f-6ec0-4aa6-ba07-41a28300bf8d",
      "undoRedoGroup": {
        "id": 49,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;364"
    },
    "generationUUID": "77447846-7ddd-47c8-8213-c5a3ae58ab1b",
    "timestamp": "2025-03-09T13:13:08.908Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "18417100-eda0-4b0a-9b5a-fcb503a47191",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 72,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 72,
      "monotonicallyIncreasingSuggestionId": 48,
      "range": {
        "startLineNumber": 22,
        "startColumn": 1,
        "endLineNumberInclusive": 26,
        "endColumn": 1
      },
      "replaceText": "\nconst light = TrafficLight.RED;\nchangeLight(light);\n",
      "originalText": "\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
      "startingSuggestionRange": {
        "startLineNumber": 22,
        "startColumn": 1,
        "endLineNumberInclusive": 26,
        "endColumn": 1
      },
      "diffText": "\nconst light = TrafficLight.RED;\nchangeLight(light);\n",
      "fullOriginalText": "\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
      "suggestionTriggerTime": 1741525986911.1,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "77447846-7ddd-47c8-8213-c5a3ae58ab1b",
      "selection": {
        "startLineNumber": 22,
        "startColumn": 1,
        "endLineNumberInclusive": 26,
        "endColumn": 1
      },
      "fusedCursorPredictionId": "a57b698f-6ec0-4aa6-ba07-41a28300bf8d",
      "undoRedoGroup": {
        "id": 49,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;364"
    },
    "generationUUID": "77447846-7ddd-47c8-8213-c5a3ae58ab1b",
    "timestamp": "2025-03-09T13:13:08.916Z"
  },
  {
    "getFromDB": "predictionId",
    "possibleInvokeReason": "no suggestion but has predictionId",
    "predictionId": "a57b698f-6ec0-4aa6-ba07-41a28300bf8d",
    "fusedCursorPrediction": null,
    "oldText": "\nconst light = TrafficLight.RED;\nconst newLight = changeLight(light);\nconsole.log(newLight);\n",
    "newText": "\nconst light = TrafficLight.RED;\nchangeLight(light);\n",
    "timestamp": "2025-03-09T13:13:08.917Z"
  },
  {
    "intent": "typing",
    "generationUUID": "5499086a-f997-461c-8b9d-b9327ea00b55",
    "timestamp": "2025-03-09T13:13:17.444Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n",
            "4-|      return TrafficLight.GREEN;\n",
            "4-|      \n4+|      console.log('red');\n",
            "6-|      return TrafficLight.YELLOW;\n6+|      return');\n7+|      break;\n",
            "5+|      break;\n6-|      return');\n7+|      console.log('green');\n",
            "12-|      return TrafficLight.RED;\n12+|      console.log('red');\n",
            "10-|      return TrafficLight.RED;\n10+|      return.log('yellow');\n11+|      break;\n",
            "10-|      return.log('yellow');\n10+|      console.log('yellow');\n",
            "24-|const newLight = changeLight(light);\n25-|console.log(newLight);\n24+|changeLight(light);\n",
            "4-|      console.log('red');\n4+|      console.log('re');\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      console.log('re');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nchangeLight(light);\n",
        "cursorPosition": {
          "line": 3,
          "column": 21
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 74,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525997478,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50.599853515625,
      "timeAtRequestSend": 1741525997478
    },
    "generateUuid": "5499086a-f997-461c-8b9d-b9327ea00b55",
    "timestamp": "2025-03-09T13:13:17.480Z"
  },
  {
    "intent": "typing",
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:17.556Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n",
            "4-|      return TrafficLight.GREEN;\n",
            "4-|      \n4+|      console.log('red');\n",
            "6-|      return TrafficLight.YELLOW;\n6+|      return');\n7+|      break;\n",
            "5+|      break;\n6-|      return');\n7+|      console.log('green');\n",
            "12-|      return TrafficLight.RED;\n12+|      console.log('red');\n",
            "10-|      return TrafficLight.RED;\n10+|      return.log('yellow');\n11+|      break;\n",
            "10-|      return.log('yellow');\n10+|      console.log('yellow');\n",
            "24-|const newLight = changeLight(light);\n25-|console.log(newLight);\n24+|changeLight(light);\n",
            "4-|      console.log('red');\n4+|      console.log('r');\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      console.log('r');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nchangeLight(light);\n",
        "cursorPosition": {
          "line": 3,
          "column": 20
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 75,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525997603,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51,
      "timeAtRequestSend": 1741525997603
    },
    "generateUuid": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:17.606Z"
  },
  {
    "cursorRetrieval": {
      "text": "    case TrafficLight.RED:\n      console.log('stop",
      "rangeToReplace": {
        "startLineNumber": 3,
        "endLineNumberInclusive": 7
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:18.003Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:18.004Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:18.021Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n     "
    },
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:18.024Z"
  },
  {
    "firstChunkValue": "    case TrafficLight.RED:\n      console.log('stop');\n      break;\n    case TrafficLight.GREEN:\n      console.log('go');",
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:18.135Z"
  },
  {
    "cursorRetrieval": {
      "text": " break"
    },
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:18.137Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case TrafficLight.RED:\n      console.log('stop');\n      break;\n    case TrafficLight.GREEN:\n      console.log('go');"
    },
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:18.138Z"
  },
  {
    "cursorRetrieval": {
      "text": ";\n    case"
    },
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:18.139Z"
  },
  {
    "cursorRetrieval": {
      "text": " TrafficLight.GRE"
    },
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:18.139Z"
  },
  {
    "cursorRetrieval": {
      "text": "EN:\n      console.log('"
    },
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:18.139Z"
  },
  {
    "cursorRetrieval": {
      "text": "go"
    },
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:18.141Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:18.141Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:18.142Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 10,
        "expectedContent": "console.log('yellow');\nbreak;\ndefault:\nconsole.log('red');\n}",
        "shouldRetriggerCpp": true
      }
    },
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:18.315Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 10,
      "text": "console.log('yellow');\nbreak;\ndefault:\nconsole.log('red');\n}",
      "shouldRetriggerCpp": true
    },
    "predictionId": "a739da4c-cf6b-487f-a094-c03fe96f9b0b",
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:18.317Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case TrafficLight.RED:\n      console.log('stop');\n      break;\n    case TrafficLight.GREEN:\n      console.log('go');"
    },
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 10,
      "text": "console.log('yellow');\nbreak;\ndefault:\nconsole.log('red');\n}",
      "shouldRetriggerCpp": true
    },
    "predictionId": "a739da4c-cf6b-487f-a094-c03fe96f9b0b",
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:18.318Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "05f6886e-a5ea-4349-a53f-e1a2ab7bc9f5",
    "timestamp": "2025-03-09T13:13:18.319Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "a739da4c-cf6b-487f-a094-c03fe96f9b0b",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 10,
      "text": "console.log('yellow');\nbreak;\ndefault:\nconsole.log('red');\n}",
      "shouldRetriggerCpp": true
    },
    "timestamp": "2025-03-09T13:13:18.319Z"
  },
  {
    "intent": "typing",
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.332Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n",
            "4-|      return TrafficLight.GREEN;\n",
            "4-|      \n4+|      console.log('red');\n",
            "6-|      return TrafficLight.YELLOW;\n6+|      return');\n7+|      break;\n",
            "5+|      break;\n6-|      return');\n7+|      console.log('green');\n",
            "12-|      return TrafficLight.RED;\n12+|      console.log('red');\n",
            "10-|      return TrafficLight.RED;\n10+|      return.log('yellow');\n11+|      break;\n",
            "10-|      return.log('yellow');\n10+|      console.log('yellow');\n",
            "24-|const newLight = changeLight(light);\n25-|console.log(newLight);\n24+|changeLight(light);\n",
            "4-|      console.log('red');\n4+|      console.log('');\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      console.log('');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');\n      break;\n    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nchangeLight(light);\n",
        "cursorPosition": {
          "line": 3,
          "column": 19
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 76,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741525998369,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 51.199951171875,
      "timeAtRequestSend": 1741525998369
    },
    "generateUuid": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.371Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.730Z"
  },
  {
    "cursorRetrieval": {
      "text": "    case TrafficLight.RED:\n      console.log('",
      "rangeToReplace": {
        "startLineNumber": 3,
        "endLineNumberInclusive": 7
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.730Z"
  },
  {
    "cursorRetrieval": {
      "text": "Stop"
    },
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.903Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.904Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n     "
    },
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.904Z"
  },
  {
    "cursorRetrieval": {
      "text": ";\n    case"
    },
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.905Z"
  },
  {
    "cursorRetrieval": {
      "text": " break"
    },
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.905Z"
  },
  {
    "cursorRetrieval": {
      "text": " TrafficLight.GRE"
    },
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.905Z"
  },
  {
    "cursorRetrieval": {
      "text": "EN:\n      console.log('"
    },
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.906Z"
  },
  {
    "cursorRetrieval": {
      "text": "Go"
    },
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.906Z"
  },
  {
    "firstChunkValue": "    case TrafficLight.RED:\n      console.log('Stop');\n      break;\n    case TrafficLight.GREEN:\n      console.log('Go');",
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.986Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 10,
      "text": "console.log('yellow');\nbreak;\ndefault:\nconsole.log('red');\n}",
      "shouldRetriggerCpp": true
    },
    "predictionId": "2e8a68e0-a02d-4699-8556-76a2f28c95cc",
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.987Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case TrafficLight.RED:\n      console.log('Stop');\n      break;\n    case TrafficLight.GREEN:\n      console.log('Go');"
    },
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.988Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.988Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.989Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "src/components/test2.ts",
        "lineNumberOneIndexed": 10,
        "expectedContent": "console.log('yellow');\nbreak;\ndefault:\nconsole.log('red');\n}",
        "shouldRetriggerCpp": true
      }
    },
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.990Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.990Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case TrafficLight.RED:\n      console.log('Stop');\n      break;\n    case TrafficLight.GREEN:\n      console.log('Go');"
    },
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 10,
      "text": "console.log('yellow');\nbreak;\ndefault:\nconsole.log('red');\n}",
      "shouldRetriggerCpp": true
    },
    "predictionId": "2e8a68e0-a02d-4699-8556-76a2f28c95cc",
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:18.992Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "2e8a68e0-a02d-4699-8556-76a2f28c95cc",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 10,
      "text": "console.log('yellow');\nbreak;\ndefault:\nconsole.log('red');\n}",
      "shouldRetriggerCpp": true
    },
    "timestamp": "2025-03-09T13:13:18.992Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "ccba2305-9e68-472c-8fc1-08ba90c63da4",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 76,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 76,
      "monotonicallyIncreasingSuggestionId": 50,
      "range": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 28
      },
      "replaceText": "    case TrafficLight.RED:\n      console.log('Stop');\n      break;\n    case TrafficLight.GREEN:\n      console.log('Go');",
      "originalText": "    case TrafficLight.RED:\n      console.log('');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');",
      "startingSuggestionRange": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 28
      },
      "diffText": "    case TrafficLight.RED:\n      console.log('Stop');\n      break;\n    case TrafficLight.GREEN:\n      console.log('Go');",
      "fullOriginalText": "    case TrafficLight.RED:\n      console.log('');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');",
      "suggestionTriggerTime": 1741525998317,
      "greens": [],
      "source": "typing",
      "requestId": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
      "selection": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 28
      },
      "fusedCursorPredictionId": "2e8a68e0-a02d-4699-8556-76a2f28c95cc",
      "undoRedoGroup": {
        "id": 51,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;393"
    },
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:19.667Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "ccba2305-9e68-472c-8fc1-08ba90c63da4",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 76,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 76,
      "monotonicallyIncreasingSuggestionId": 50,
      "range": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 28
      },
      "replaceText": "    case TrafficLight.RED:\n      console.log('Stop');\n      break;\n    case TrafficLight.GREEN:\n      console.log('Go');",
      "originalText": "    case TrafficLight.RED:\n      console.log('');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');",
      "startingSuggestionRange": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 28
      },
      "diffText": "    case TrafficLight.RED:\n      console.log('Stop');\n      break;\n    case TrafficLight.GREEN:\n      console.log('Go');",
      "fullOriginalText": "    case TrafficLight.RED:\n      console.log('');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');",
      "suggestionTriggerTime": 1741525998317,
      "greens": [],
      "source": "typing",
      "requestId": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
      "selection": {
        "startLineNumber": 3,
        "startColumn": 1,
        "endLineNumberInclusive": 7,
        "endColumn": 28
      },
      "fusedCursorPredictionId": "2e8a68e0-a02d-4699-8556-76a2f28c95cc",
      "undoRedoGroup": {
        "id": 51,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;393"
    },
    "generationUUID": "fd22ea90-c668-45af-b6ce-21c68adbcff7",
    "timestamp": "2025-03-09T13:13:19.683Z"
  },
  {
    "getFromDB": "predictionId",
    "possibleInvokeReason": "no suggestion but has predictionId",
    "predictionId": "2e8a68e0-a02d-4699-8556-76a2f28c95cc",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 10,
      "text": "console.log('yellow');\nbreak;\ndefault:\nconsole.log('red');\n}",
      "shouldRetriggerCpp": true
    },
    "oldText": "    case TrafficLight.RED:\n      console.log('');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');",
    "newText": "    case TrafficLight.RED:\n      console.log('Stop');\n      break;\n    case TrafficLight.GREEN:\n      console.log('Go');",
    "timestamp": "2025-03-09T13:13:19.683Z"
  },
  {
    "action": "displayFusedCursorPrediction",
    "predictionId": "2e8a68e0-a02d-4699-8556-76a2f28c95cc",
    "fusedCursorPrediction": {
      "relativePath": "src/components/test2.ts",
      "lineNumberOneIndexed": 10,
      "text": "console.log('yellow');\nbreak;\ndefault:\nconsole.log('red');\n}",
      "shouldRetriggerCpp": true
    },
    "oldText": "    case TrafficLight.RED:\n      console.log('');\n      break;\n    case TrafficLight.GREEN:\n      console.log('green');",
    "newText": "    case TrafficLight.RED:\n      console.log('Stop');\n      break;\n    case TrafficLight.GREEN:\n      console.log('Go');",
    "timestamp": "2025-03-09T13:13:19.684Z"
  },
  {
    "intent": "cursor_prediction",
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:19.684Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n",
            "4-|      return TrafficLight.GREEN;\n",
            "4-|      \n4+|      console.log('red');\n",
            "6-|      return TrafficLight.YELLOW;\n6+|      return');\n7+|      break;\n",
            "5+|      break;\n6-|      return');\n7+|      console.log('green');\n",
            "12-|      return TrafficLight.RED;\n12+|      console.log('red');\n",
            "10-|      return TrafficLight.RED;\n10+|      return.log('yellow');\n11+|      break;\n",
            "10-|      return.log('yellow');\n10+|      console.log('yellow');\n",
            "24-|const newLight = changeLight(light);\n25-|console.log(newLight);\n24+|changeLight(light);\n",
            "4-|      console.log('red');\n4+|      console.log('');\n",
            "7-|      console.log('green');\n7+|      console.log('Go');\n",
            "4-|      console.log('');\n4+|      console.log('Stop');\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      console.log('Stop');\n      break;\n    case TrafficLight.GREEN:\n      console.log('Go');\n      break;\n    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nchangeLight(light);\n",
        "cursorPosition": {
          "line": 9,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 77,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "cursor_prediction"
      },
      "clientTime": 1741525999691,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 8.5,
      "timeAtRequestSend": 1741525999691
    },
    "generateUuid": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:19.693Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:20.073Z"
  },
  {
    "cursorRetrieval": {
      "text": "    case TrafficLight.YELLOW:\n      console.log('Wait",
      "rangeToReplace": {
        "startLineNumber": 9,
        "endLineNumberInclusive": 13
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:20.076Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:20.080Z"
  },
  {
    "firstChunkValue": "    case TrafficLight.YELLOW:\n      console.log('Wait');\n      break;\n    default:\n      console.log('red');",
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:20.162Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case TrafficLight.YELLOW:\n      console.log('Wait');\n      break;\n    default:\n      console.log('red');"
    },
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:20.171Z"
  },
  {
    "cursorRetrieval": {
      "text": " break"
    },
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:20.172Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n     "
    },
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:20.173Z"
  },
  {
    "cursorRetrieval": {
      "text": ";\n    default:\n      console"
    },
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:20.174Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:20.175Z"
  },
  {
    "cursorRetrieval": {
      "text": ".log('red"
    },
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:20.176Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:20.176Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:20.177Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "a85403d8-5c48-4f9a-8212-7f672838d0c6",
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:20.177Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "    case TrafficLight.YELLOW:\n      console.log('Wait');\n      break;\n    default:\n      console.log('red');"
    },
    "fusedCursorPrediction": null,
    "predictionId": "a85403d8-5c48-4f9a-8212-7f672838d0c6",
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:20.177Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "a85403d8-5c48-4f9a-8212-7f672838d0c6",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-09T13:13:20.178Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "0f8f3674-909b-4e02-8e3a-1c1a89cf93ca",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 77,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 77,
      "monotonicallyIncreasingSuggestionId": 51,
      "range": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 13,
        "endColumn": 26
      },
      "replaceText": "    case TrafficLight.YELLOW:\n      console.log('Wait');\n      break;\n    default:\n      console.log('red');",
      "originalText": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');",
      "startingSuggestionRange": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 13,
        "endColumn": 26
      },
      "diffText": "    case TrafficLight.YELLOW:\n      console.log('Wait');\n      break;\n    default:\n      console.log('red');",
      "fullOriginalText": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');",
      "suggestionTriggerTime": 1741525999682.3,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "01f91a06-8129-44d8-b00c-e785cda4d48b",
      "selection": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 13,
        "endColumn": 26
      },
      "fusedCursorPredictionId": "a85403d8-5c48-4f9a-8212-7f672838d0c6",
      "undoRedoGroup": {
        "id": 52,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;402"
    },
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:20.452Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "0f8f3674-909b-4e02-8e3a-1c1a89cf93ca",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 77,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 77,
      "monotonicallyIncreasingSuggestionId": 51,
      "range": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 13,
        "endColumn": 26
      },
      "replaceText": "    case TrafficLight.YELLOW:\n      console.log('Wait');\n      break;\n    default:\n      console.log('red');",
      "originalText": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');",
      "startingSuggestionRange": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 13,
        "endColumn": 26
      },
      "diffText": "    case TrafficLight.YELLOW:\n      console.log('Wait');\n      break;\n    default:\n      console.log('red');",
      "fullOriginalText": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');",
      "suggestionTriggerTime": 1741525999682.3,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "01f91a06-8129-44d8-b00c-e785cda4d48b",
      "selection": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 13,
        "endColumn": 26
      },
      "fusedCursorPredictionId": "a85403d8-5c48-4f9a-8212-7f672838d0c6",
      "undoRedoGroup": {
        "id": 52,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;402"
    },
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:21.250Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "0f8f3674-909b-4e02-8e3a-1c1a89cf93ca",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 77,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 77,
      "monotonicallyIncreasingSuggestionId": 51,
      "range": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 13,
        "endColumn": 26
      },
      "replaceText": "    case TrafficLight.YELLOW:\n      console.log('Wait');\n      break;\n    default:\n      console.log('red');",
      "originalText": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');",
      "startingSuggestionRange": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 13,
        "endColumn": 26
      },
      "diffText": "    case TrafficLight.YELLOW:\n      console.log('Wait');\n      break;\n    default:\n      console.log('red');",
      "fullOriginalText": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');",
      "suggestionTriggerTime": 1741525999682.3,
      "greens": [],
      "source": "cursor_prediction",
      "requestId": "01f91a06-8129-44d8-b00c-e785cda4d48b",
      "selection": {
        "startLineNumber": 9,
        "startColumn": 1,
        "endLineNumberInclusive": 13,
        "endColumn": 26
      },
      "fusedCursorPredictionId": "a85403d8-5c48-4f9a-8212-7f672838d0c6",
      "undoRedoGroup": {
        "id": 52,
        "b": 2
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "f;402"
    },
    "generationUUID": "01f91a06-8129-44d8-b00c-e785cda4d48b",
    "timestamp": "2025-03-09T13:13:21.257Z"
  },
  {
    "getFromDB": "predictionId",
    "possibleInvokeReason": "no suggestion but has predictionId",
    "predictionId": "a85403d8-5c48-4f9a-8212-7f672838d0c6",
    "fusedCursorPrediction": null,
    "oldText": "    case TrafficLight.YELLOW:\n      console.log('yellow');\n      break;\n    default:\n      console.log('red');",
    "newText": "    case TrafficLight.YELLOW:\n      console.log('Wait');\n      break;\n    default:\n      console.log('red');",
    "timestamp": "2025-03-09T13:13:21.272Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "timestamp": "2025-03-09T13:13:23.422Z"
  },
  {
    "intent": "line_change",
    "generationUUID": "3e44c364-c0fb-4bc5-bda4-9f3923fed15a",
    "timestamp": "2025-03-09T13:13:23.425Z"
  },
  {
    "intent": "typing",
    "generationUUID": "591029c0-71a6-4326-8adb-c4f892eeff4d",
    "timestamp": "2025-03-09T13:13:23.431Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n",
            "4-|      return TrafficLight.GREEN;\n",
            "4-|      \n4+|      console.log('red');\n",
            "6-|      return TrafficLight.YELLOW;\n6+|      return');\n7+|      break;\n",
            "5+|      break;\n6-|      return');\n7+|      console.log('green');\n",
            "12-|      return TrafficLight.RED;\n12+|      console.log('red');\n",
            "10-|      return TrafficLight.RED;\n10+|      return.log('yellow');\n11+|      break;\n",
            "10-|      return.log('yellow');\n10+|      console.log('yellow');\n",
            "24-|const newLight = changeLight(light);\n25-|console.log(newLight);\n24+|changeLight(light);\n",
            "4-|      console.log('red');\n4+|      console.log('');\n",
            "7-|      console.log('green');\n7+|      console.log('Go');\n",
            "4-|      console.log('');\n4+|      console.log('Stop');\n",
            "10-|      console.log('yellow');\n10+|        console.log('Wait');\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      console.log('Stop');\n      break;\n    case TrafficLight.GREEN:\n      console.log('Go');\n      break;\n    case TrafficLight.YELLOW:\n        console.log('Wait');\n      break;\n    default:\n      console.log('red');\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nchangeLight(light);\n",
        "cursorPosition": {
          "line": 9,
          "column": 8
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 79,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1741526003474,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50.5,
      "timeAtRequestSend": 1741526003474
    },
    "generateUuid": "3e44c364-c0fb-4bc5-bda4-9f3923fed15a",
    "timestamp": "2025-03-09T13:13:23.476Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "3e44c364-c0fb-4bc5-bda4-9f3923fed15a",
    "timestamp": "2025-03-09T13:13:23.846Z"
  },
  {
    "cursorRetrieval": {
      "text": "    case TrafficLight.YELLOW:\n     ",
      "rangeToReplace": {
        "startLineNumber": 9,
        "endLineNumberInclusive": 13
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "3e44c364-c0fb-4bc5-bda4-9f3923fed15a",
    "timestamp": "2025-03-09T13:13:23.847Z"
  },
  {
    "cursorRetrieval": {
      "text": " console.log('Wait"
    },
    "generationUUID": "3e44c364-c0fb-4bc5-bda4-9f3923fed15a",
    "timestamp": "2025-03-09T13:13:23.869Z"
  },
  {
    "cursorRetrieval": {
      "text": "');\n     "
    },
    "generationUUID": "3e44c364-c0fb-4bc5-bda4-9f3923fed15a",
    "timestamp": "2025-03-09T13:13:23.870Z"
  },
  {
    "cursorRetrieval": {
      "text": " break"
    },
    "generationUUID": "3e44c364-c0fb-4bc5-bda4-9f3923fed15a",
    "timestamp": "2025-03-09T13:13:23.878Z"
  },
  {
    "firstChunkValue": "    case TrafficLight.YELLOW:\n      console.log('Wait');\n      break;\n    default:\n      console.log('red');",
    "generationUUID": "3e44c364-c0fb-4bc5-bda4-9f3923fed15a",
    "timestamp": "2025-03-09T13:13:23.932Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "3e44c364-c0fb-4bc5-bda4-9f3923fed15a",
    "timestamp": "2025-03-09T13:13:23.933Z"
  },
  {
    "cursorRetrieval": {
      "text": ";\n    default:\n      console"
    },
    "generationUUID": "3e44c364-c0fb-4bc5-bda4-9f3923fed15a",
    "timestamp": "2025-03-09T13:13:23.934Z"
  },
  {
    "cursorRetrieval": {
      "text": ".log('red"
    },
    "generationUUID": "3e44c364-c0fb-4bc5-bda4-9f3923fed15a",
    "timestamp": "2025-03-09T13:13:23.934Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "3e44c364-c0fb-4bc5-bda4-9f3923fed15a",
    "timestamp": "2025-03-09T13:13:23.935Z"
  },
  {
    "cursorRetrieval": {
      "text": "');"
    },
    "generationUUID": "3e44c364-c0fb-4bc5-bda4-9f3923fed15a",
    "timestamp": "2025-03-09T13:13:23.935Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "3e44c364-c0fb-4bc5-bda4-9f3923fed15a",
    "timestamp": "2025-03-09T13:13:23.973Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "ea3bc317-435f-4a21-aa45-1e4eea930573",
    "generationUUID": "3e44c364-c0fb-4bc5-bda4-9f3923fed15a",
    "timestamp": "2025-03-09T13:13:24.041Z"
  },
  {
    "intent": "typing",
    "generationUUID": "7de08e5d-8aee-4833-a956-f0e4184e3488",
    "timestamp": "2025-03-09T13:13:24.657Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1+|function changeLight(light: TrafficLight) {\n2+|  light = 'green';\n3+|}\n4+|\n",
            "2-|  light = 'green';\n",
            "2-|  \n2+|  switch (light) {\n3+|    case 'red':\n4+|      return 'green';\n5+|    case 'green':\n6+|      return 'yellow';\n7+|      \n8+|  }\n",
            "7-|\n7+|    case 'yellow':\n8+|      return 'red';\n9+|    default:\n10+|      return 'red';\n",
            "3-|    case 'red':\n3+|    case light.RED:\n",
            "5-|    case 'green':\n6-|      return 'yellow';\n5+|    case 'green'ht.GREEN:\n6+|      return light.YELLOW;\n",
            "4-|      return 'green';\n5-|    case 'green'ht.GREEN:\n4+|      return 'green'ht.GREEN;\n5+|    case light.GREEN:\n",
            "4-|      return 'green'ht.GREEN;\n4+|      return light.GREEN;\n",
            "10-|      return 'red';\n10+|      return light.RED;\n",
            "7-|    case 'yellow':\n8-|      return 'red';\n7+|    case 'yellow'ight.YELLOW:\n8+|      return light.RED;\n",
            "7-|    case 'yellow'ight.YELLOW:\n7+|    case light.YELLOW:\n",
            "14+|enum TrafficLight {\n15+|  RED = 'red',\n16+|  GREEN = 'green',\n17+|  YELLOW = 'yellow',\n18+|}\n19+|\n20+|const light = TrafficLight.RED;\n21+|const newLight = changeLight(light);\n22+|console.log(newLight);\n",
            "3-|    case light.RED:\n4-|      return light.GREEN;\n3+|    case lTrafficLight.RED:\n4+|      return TrafficLight.GREEN;\n",
            "3-|    case lTrafficLight.RED:\n3+|    case TrafficLight.RED:\n",
            "7-|    case light.YELLOW:\n8-|      return light.RED;\n7+|    case lTrafficLight.YELLOW:\n8+|      return TrafficLight.RED;\n",
            "6-|      return light.YELLOW;\n7-|    case lTrafficLight.YELLOW:\n6+|      return lTrafficLight.YELLOW;\n7+|    case TrafficLight.YELLOW:\n",
            "5-|    case light.GREEN:\n6-|      return lTrafficLight.YELLOW;\n5+|    case lTrafficLight.GREEN:\n6+|      return TrafficLight.YELLOW;\n",
            "5-|    case lTrafficLight.GREEN:\n5+|    case TrafficLight.GREEN:\n",
            "10-|      return light.RED;\n10+|      return TrafficLight.RED;\n",
            "4-|      return TrafficLight.GREEN;\n",
            "4-|      \n4+|      console.log('red');\n",
            "6-|      return TrafficLight.YELLOW;\n6+|      return');\n7+|      break;\n",
            "5+|      break;\n6-|      return');\n7+|      console.log('green');\n",
            "12-|      return TrafficLight.RED;\n12+|      console.log('red');\n",
            "10-|      return TrafficLight.RED;\n10+|      return.log('yellow');\n11+|      break;\n",
            "10-|      return.log('yellow');\n10+|      console.log('yellow');\n",
            "24-|const newLight = changeLight(light);\n25-|console.log(newLight);\n24+|changeLight(light);\n",
            "4-|      console.log('red');\n4+|      console.log('');\n",
            "7-|      console.log('green');\n7+|      console.log('Go');\n",
            "4-|      console.log('');\n4+|      console.log('Stop');\n",
            "10-|      console.log('yellow');\n10+|      console.log('Wait');\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      console.log('Stop');\n      break;\n    case TrafficLight.GREEN:\n      console.log('Go');\n      break;\n    case TrafficLight.YELLOW:\n      console.log('Wait');\n      break;\n    default:\n      console.log('red');\n  }\n}\n\nenum TrafficLight {\n  RED = 'red',\n  GREEN = 'green',\n  YELLOW = 'yellow',\n}\n\nconst light = TrafficLight.RED;\nchangeLight(light);\n",
        "cursorPosition": {
          "line": 9,
          "column": 6
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 80,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [
        {
          "relativeWorkspacePath": "src/components/test.ts",
          "isOpen": false,
          "visibleRangeContent": [
            ""
          ],
          "startLineNumberOneIndexed": [
            4
          ],
          "visibleRanges": [
            {
              "startLineNumber": 4,
              "endLineNumberInclusive": 24
            }
          ],
          "lastViewedAt": 1741525907939
        }
      ],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741526004694,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 50.300048828125,
      "timeAtRequestSend": 1741526004694
    },
    "generateUuid": "7de08e5d-8aee-4833-a956-f0e4184e3488",
    "timestamp": "2025-03-09T13:13:24.697Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "rangeToReplace": {
        "startLineNumber": 9,
        "endLineNumberInclusive": 13
      },
      "doneEdit": true,
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "7de08e5d-8aee-4833-a956-f0e4184e3488",
    "timestamp": "2025-03-09T13:13:25.064Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "7de08e5d-8aee-4833-a956-f0e4184e3488",
    "timestamp": "2025-03-09T13:13:25.064Z"
  },
  {
    "firstChunkValue": "    case TrafficLight.YELLOW:\n      console.log('Wait');\n      break;\n    default:\n      console.log('red');",
    "generationUUID": "7de08e5d-8aee-4833-a956-f0e4184e3488",
    "timestamp": "2025-03-09T13:13:25.065Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": false
    },
    "generationUUID": "7de08e5d-8aee-4833-a956-f0e4184e3488",
    "timestamp": "2025-03-09T13:13:25.065Z"
  },
  {
    "cursorRetrieval": {
      "text": "    case TrafficLight.YELLOW:\n      console.log('Wait');\n      break;\n    default:\n      console.log('red');"
    },
    "generationUUID": "7de08e5d-8aee-4833-a956-f0e4184e3488",
    "timestamp": "2025-03-09T13:13:25.066Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "7de08e5d-8aee-4833-a956-f0e4184e3488",
    "timestamp": "2025-03-09T13:13:25.189Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "6a1f2746-b0a6-4ff3-9793-24b65e97b69c",
    "generationUUID": "7de08e5d-8aee-4833-a956-f0e4184e3488",
    "timestamp": "2025-03-09T13:13:25.193Z"
  }
]