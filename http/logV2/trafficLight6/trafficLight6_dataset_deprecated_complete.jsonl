{"diffHistory":[{"fileName":"src/components/test2.ts","diffHistory":["1-|enum TrafficLight {\n2-|  Red = 'red',\n3-|  Yellow = 'yellow',\n4-|  Green = 'green',\n5-|}\n6-|\n7-|function changeLight(light: TrafficLight) {\n8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.Green;\n10-|  } \n11-|  console.log('light', light);\n12-|}\n13-|\n1+|f\n"],"diffHistoryTimestamps":[]}],"new_window_content":"f[ToFill]","ground_truth":"function test() {"}
{"diffHistory":[{"fileName":"src/components/test2.ts","diffHistory":["1-|enum TrafficLight {\n2-|  Red = 'red',\n3-|  Yellow = 'yellow',\n4-|  Green = 'green',\n5-|}\n6-|\n7-|function changeLight(light: TrafficLight) {\n8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.Green;\n10-|  } \n11-|  console.log('light', light);\n12-|}\n13-|\n1+|function cha\n"],"diffHistoryTimestamps":[]}],"new_window_content":"function cha[ToFill]","ground_truth":"function changeLight(light: TrafficLight) {"}
{"diffHistory":[{"fileName":"src/components/test2.ts","diffHistory":["1-|enum TrafficLight {\n2-|  Red = 'red',\n3-|  Yellow = 'yellow',\n4-|  Green = 'green',\n5-|}\n6-|\n10-|  } \n4+|  }\n","2-|  if (light === TrafficLight.Red) {\n3-|    return TrafficLight.Green;\n4-|  }\n5-|  console.log('light', light);\n","2-|  \n2+|  s\n"],"diffHistoryTimestamps":[]}],"new_window_content":"function changeLight(light: TrafficLight) {\n  s[ToFill]\n}\n","ground_truth":"function changeLight(light: TrafficLight) {\n  switch (light) {\n}\n"}
{"diffHistory":[{"fileName":"src/components/test2.ts","diffHistory":["1-|enum TrafficLight {\n2-|  Red = 'red',\n3-|  Yellow = 'yellow',\n4-|  Green = 'green',\n5-|}\n6-|\n10-|  } \n4+|  }\n","2-|  if (light === TrafficLight.Red) {\n3-|    return TrafficLight.Green;\n4-|  }\n5-|  console.log('light', light);\n","2-|  \n2+|  switch (light) {\n3+|    case TrafficLight.Red:\n4+|      return TrafficLight.Green;\n5+|    case TrafficLight.Green:\n6+|      return TrafficLight.Yellow;\n7+|      \n8+|  }\n","8-|  }\n8+|  } \n"],"diffHistoryTimestamps":[]}],"new_window_content":"function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.Red:\n   [ToFill]   return TrafficLight.Green;\n    case TrafficLight.Green:\n      return TrafficLight.Yellow;\n      \n  } \n}\n","ground_truth":"function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.Red:\n      return TrafficLight.Green;\n    case TrafficLight.Green:\n      return TrafficLight.Yellow;\n    case TrafficLight.Yellow:\n  } \n}\n"}
{"diffHistory":[{"fileName":"src/components/test2.ts","diffHistory":["1-|enum TrafficLight {\n2-|  Red = 'red',\n3-|  Yellow = 'yellow',\n4-|  Green = 'green',\n5-|}\n6-|\n10-|  } \n4+|  }\n","2-|  if (light === TrafficLight.Red) {\n3-|    return TrafficLight.Green;\n4-|  }\n5-|  console.log('light', light);\n","2-|  \n2+|  switch (light) {\n3+|    case TrafficLight.Red:\n4+|      return TrafficLight.Green;\n5+|    case TrafficLight.Green:\n6+|      return TrafficLight.Yellow;\n7+|      \n8+|  }\n","7-|      \n7+|    case TrafficLight.Yellow:\n"],"diffHistoryTimestamps":[]}],"new_window_content":"function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.Red:\n      return TrafficLight.Green;\n    case TrafficLight.Green:\n      return TrafficLight.Yellow;\n    case TrafficLight.Yellow:\n[ToFill]  } \n}\n","ground_truth":"function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.Red:\n      return TrafficLight.Green;\n    case TrafficLight.Green:\n      return TrafficLight.Yellow;\n    case TrafficLight.Yellow:\n      return TrafficLight.Red;\n    default:\n      throw new Error('Invalid traffic light');\n  }\n}\n"}
{"diffHistory":[{"fileName":"src/components/test2.ts","diffHistory":["1-|enum TrafficLight {\n2-|  Red = 'red',\n3-|  Yellow = 'yellow',\n4-|  Green = 'green',\n5-|}\n6-|\n10-|  } \n4+|  }\n","2-|  if (light === TrafficLight.Red) {\n3-|    return TrafficLight.Green;\n4-|  }\n5-|  console.log('light', light);\n","2-|  \n2+|  switch (light) {\n3+|    case TrafficLight.Red:\n4+|      return TrafficLight.Green;\n5+|    case TrafficLight.Green:\n6+|      return TrafficLight.Yellow;\n7+|      \n8+|  }\n","7-|      \n8-|  } \n7+|    case TrafficLight.Yellow:\n8+|  } throw new Error('Invalid traffic light');\n9+|  }\n","8-|  } throw new Error('Invalid traffic light');\n8+|  }    return TrafficLight.Red;\n9+|    default:\n10+|      throw new Error('Invalid traffic light');\n","8-|  }    return TrafficLight.Red;\n8+|      return TrafficLight.Red;\n","3-|    case TrafficLight.Red:\n3+|    case TrafficLight.RED:\n"],"diffHistoryTimestamps":[]}],"new_window_content":"function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED[ToFill]:\n      return TrafficLight.Green;\n    case TrafficLight.Green:\n      return TrafficLight.Yellow;\n    case TrafficLight.Yellow:\n      return TrafficLight.Red;\n    default:\n      throw new Error('Invalid traffic light');\n  }\n}\n","ground_truth":"function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.Yellow:\n      return TrafficLight.Red;\n    default:\n      throw new Error('Invalid traffic light');\n  }\n}\n"}
{"diffHistory":[{"fileName":"src/components/test2.ts","diffHistory":["1-|enum TrafficLight {\n2-|  Red = 'red',\n3-|  Yellow = 'yellow',\n4-|  Green = 'green',\n5-|}\n6-|\n10-|  } \n4+|  }\n","2-|  if (light === TrafficLight.Red) {\n3-|    return TrafficLight.Green;\n4-|  }\n5-|  console.log('light', light);\n","2-|  \n2+|  switch (light) {\n3+|    case TrafficLight.Red:\n4+|      return TrafficLight.Green;\n5+|    case TrafficLight.Green:\n6+|      return TrafficLight.Yellow;\n7+|      \n8+|  }\n","7-|      \n8-|  } \n7+|    case TrafficLight.Yellow:\n8+|  } throw new Error('Invalid traffic light');\n9+|  }\n","8-|  } throw new Error('Invalid traffic light');\n8+|  }    return TrafficLight.Red;\n9+|    default:\n10+|      throw new Error('Invalid traffic light');\n","8-|  }    return TrafficLight.Red;\n8+|      return TrafficLight.Red;\n","3-|    case TrafficLight.Red:\n3+|    case TrafficLight.RED:\n","5-|    case TrafficLight.Green:\n6-|      return TrafficLight.Yellow;\n5+|    case TrafficLight.GreenREEN:\n6+|      return TrafficLight.YELLOW;\n","4-|      return TrafficLight.Green;\n5-|    case TrafficLight.GreenREEN:\n4+|      return TrafficLight.GreenREEN;\n5+|    case TrafficLight.GREEN:\n","4-|      return TrafficLight.GreenREEN;\n4+|      return TrafficLight.GREEN;\n"],"diffHistoryTimestamps":[]}],"new_window_content":"function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n[ToFill]    case TrafficLight.Yellow:\n      return TrafficLight.Red;\n    default:\n      throw new Error('Invalid traffic light');\n  }\n}\n","ground_truth":"function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      return TrafficLight.GREEN;\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      throw new Error('Invalid traffic light');\n  }\n}\n"}
{"diffHistory":[{"fileName":"src/components/test2.ts","diffHistory":["1-|enum TrafficLight {\n2-|  Red = 'red',\n3-|  Yellow = 'yellow',\n4-|  Green = 'green',\n5-|}\n6-|\n10-|  } \n4+|  }\n","2-|  if (light === TrafficLight.Red) {\n3-|    return TrafficLight.Green;\n4-|  }\n5-|  console.log('light', light);\n","2-|  \n2+|  switch (light) {\n3+|    case TrafficLight.Red:\n4+|      return TrafficLight.Green;\n5+|    case TrafficLight.Green:\n6+|      return TrafficLight.Yellow;\n7+|      \n8+|  }\n","7-|      \n8-|  } \n7+|    case TrafficLight.Yellow:\n8+|  } throw new Error('Invalid traffic light');\n9+|  }\n","8-|  } throw new Error('Invalid traffic light');\n8+|  }    return TrafficLight.Red;\n9+|    default:\n10+|      throw new Error('Invalid traffic light');\n","8-|  }    return TrafficLight.Red;\n8+|      return TrafficLight.Red;\n","3-|    case TrafficLight.Red:\n3+|    case TrafficLight.RED:\n","5-|    case TrafficLight.Green:\n6-|      return TrafficLight.Yellow;\n5+|    case TrafficLight.GreenREEN:\n6+|      return TrafficLight.YELLOW;\n","4-|      return TrafficLight.Green;\n5-|    case TrafficLight.GreenREEN:\n4+|      return TrafficLight.GreenREEN;\n5+|    case TrafficLight.GREEN:\n","4-|      return TrafficLight.GreenREEN;\n4+|      return TrafficLight.GREEN;\n","7-|    case TrafficLight.Yellow:\n8-|      return TrafficLight.Red;\n7+|    case TrafficLight.YellowELLOW:\n8+|      return TrafficLight.RED;\n","7-|    case TrafficLight.YellowELLOW:\n7+|    case TrafficLight.YELLOW:\n","4-|      return TrafficLight.GREEN;\n","4-|      \n4+|      c\n"],"diffHistoryTimestamps":[]}],"new_window_content":"function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      c[ToFill]\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      throw new Error('Invalid traffic light');\n  }\n}\n","ground_truth":"function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      console.log('Red');\n    case TrafficLight.GREEN:\n      return TrafficLight.YELLOW;\n    case TrafficLight.YELLOW:\n      return TrafficLight.RED;\n    default:\n      throw new Error('Invalid traffic light');\n  }\n}\n"}
{"diffHistory":[{"fileName":"src/components/test2.ts","diffHistory":["1-|enum TrafficLight {\n2-|  Red = 'red',\n3-|  Yellow = 'yellow',\n4-|  Green = 'green',\n5-|}\n6-|\n10-|  } \n4+|  }\n","2-|  if (light === TrafficLight.Red) {\n3-|    return TrafficLight.Green;\n4-|  }\n5-|  console.log('light', light);\n","2-|  \n2+|  switch (light) {\n3+|    case TrafficLight.Red:\n4+|      return TrafficLight.Green;\n5+|    case TrafficLight.Green:\n6+|      return TrafficLight.Yellow;\n7+|      \n8+|  }\n","7-|      \n8-|  } \n7+|    case TrafficLight.Yellow:\n8+|  } throw new Error('Invalid traffic light');\n9+|  }\n","8-|  } throw new Error('Invalid traffic light');\n8+|  }    return TrafficLight.Red;\n9+|    default:\n10+|      throw new Error('Invalid traffic light');\n","8-|  }    return TrafficLight.Red;\n8+|      return TrafficLight.Red;\n","3-|    case TrafficLight.Red:\n3+|    case TrafficLight.RED:\n","5-|    case TrafficLight.Green:\n6-|      return TrafficLight.Yellow;\n5+|    case TrafficLight.GreenREEN:\n6+|      return TrafficLight.YELLOW;\n","4-|      return TrafficLight.Green;\n5-|    case TrafficLight.GreenREEN:\n4+|      return TrafficLight.GreenREEN;\n5+|    case TrafficLight.GREEN:\n","4-|      return TrafficLight.GreenREEN;\n4+|      return TrafficLight.GREEN;\n","7-|    case TrafficLight.Yellow:\n8-|      return TrafficLight.Red;\n7+|    case TrafficLight.YellowELLOW:\n8+|      return TrafficLight.RED;\n","7-|    case TrafficLight.YellowELLOW:\n7+|    case TrafficLight.YELLOW:\n","4-|      return TrafficLight.GREEN;\n","4-|      \n4+|      console.log('Red');\n","6-|      return TrafficLight.YELLOW;\n6+|      return');\n7+|      break;\n","5+|      break;\n6-|      return');\n7+|      console.log('Green');\n"],"diffHistoryTimestamps":[]}],"new_window_content":"function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      console.log('Red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('Green');\n      break;\n    case TrafficLight.YELLOW:\n[ToFill]      return TrafficLight.RED;\n    default:\n      throw new Error('Invalid traffic light');\n  }\n}\n","ground_truth":"function changeLight(light: TrafficLight) {\n  switch (light) {\n    case TrafficLight.RED:\n      console.log('Red');\n      break;\n    case TrafficLight.GREEN:\n      console.log('Green');\n      break;\n    case TrafficLight.YELLOW:\n      console.log('Yellow');\n      break;\n    default:\n      throw new Error('Invalid traffic light');\n}\n"}
