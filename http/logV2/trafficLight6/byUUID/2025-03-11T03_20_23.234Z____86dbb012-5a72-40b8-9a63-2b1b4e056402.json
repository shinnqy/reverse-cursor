[
  {
    "intent": "typing",
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.234Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "src/components/test2.ts",
          "diffHistory": [
            "1-|enum TrafficLight {\n2-|  Red = 'red',\n3-|  Yellow = 'yellow',\n4-|  Green = 'green',\n5-|}\n6-|\n7-|function changeLight(light: TrafficLight) {\n8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.Green;\n10-|  } \n11-|  console.log('light', light);\n12-|}\n13-|\n1+|function chan\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "linterErrors": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "errors": [
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 13
              },
              "endPosition": {
                "line": 1,
                "column": 13
              }
            },
            "source": "eslint",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 11
              },
              "endPosition": {
                "line": 1,
                "column": 11
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Function implementation is missing or not immediately following the declaration.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 11
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "'t', which lacks return-type annotation, implicitly has an 'any' return type.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 10
              },
              "endPosition": {
                "line": 1,
                "column": 11
              }
            },
            "source": "ts",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          },
          {
            "message": "Parsing error: '(' expected.",
            "range": {
              "startPosition": {
                "line": 1,
                "column": 12
              },
              "endPosition": {
                "line": 1,
                "column": 12
              }
            },
            "source": "",
            "relatedInformation": [],
            "severity": "DIAGNOSTIC_SEVERITY_ERROR"
          }
        ],
        "fileContents": ""
      },
      "currentFile": {
        "relativeWorkspacePath": "src/components/test2.ts",
        "contents": "function chan",
        "cursorPosition": {
          "line": 0,
          "column": 13
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 18,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/Documents/personal/vite-react-demo2"
      },
      "additionalFiles": [],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1741663223283,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "8u65ni1hw3pqzyyqn4vyf",
      "timeSinceRequestStart": 53.10009765625,
      "timeAtRequestSend": 1741663223283
    },
    "generateUuid": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.284Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.667Z"
  },
  {
    "cursorRetrieval": {
      "text": "function change",
      "rangeToReplace": {
        "startLineNumber": 1,
        "endLineNumberInclusive": 1
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.668Z"
  },
  {
    "firstChunkValue": "function changeLight(light: TrafficLight) {",
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.696Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {"
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.711Z"
  },
  {
    "cursorRetrieval": {
      "text": "Light"
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.715Z"
  },
  {
    "cursorRetrieval": {
      "text": "(light: TrafficLight) {\n"
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.728Z"
  },
  {
    "cursorRetrieval": {
      "text": " "
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.730Z"
  },
  {
    "cursorRetrieval": {
      "text": " if"
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.732Z"
  },
  {
    "cursorRetrieval": {
      "text": " (light === TrafficLight.Red)"
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.732Z"
  },
  {
    "cursorRetrieval": {
      "text": " {"
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.732Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n   "
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.737Z"
  },
  {
    "cursorRetrieval": {
      "text": " return TrafficLight.Green;\n "
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.744Z"
  },
  {
    "cursorRetrieval": {
      "text": " }"
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.757Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.765Z"
  },
  {
    "cursorRetrieval": {
      "text": "  console"
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.774Z"
  },
  {
    "cursorRetrieval": {
      "text": ".log('light', light);\n"
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.787Z"
  },
  {
    "cursorRetrieval": {
      "text": "}"
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.792Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.801Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.817Z"
  },
  {
    "fullText": "function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    return TrafficLight.Green;\n  }\n  console.log('light', light);\n}\n",
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.823Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {"
    },
    "fullText": "function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    return TrafficLight.Green;\n  }\n  console.log('light', light);\n}\n",
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.823Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && currentSuggestion uniqueId is different && need to create newSuggestion according fullText",
    "invokePlace": "this.generateFollowupSuggestion",
    "newSuggestion": {
      "uniqueId": "8958a655-7c1b-4c79-ae62-c3e31b8c91f6",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "external": "file:///Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "path": "/Users/shinn/Documents/personal/vite-react-demo2/src/components/test2.ts",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 18,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 20,
      "monotonicallyIncreasingSuggestionId": 13,
      "range": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 15
      },
      "replaceText": "function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    return TrafficLight.Green;\n  }\n  console.log('light', light);\n}\n",
      "originalText": "function chang",
      "startingSuggestionRange": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 15
      },
      "diffText": "function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    return TrafficLight.Green;\n  }\n  console.log('light', light);\n}\n",
      "fullOriginalText": "function chang",
      "suggestionTriggerTime": 1741663223230.0999,
      "greens": [],
      "source": "typing",
      "requestId": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
      "selection": {
        "startLineNumber": 1,
        "startColumn": 1,
        "endLineNumberInclusive": 1,
        "endColumn": 15
      },
      "fusedCursorPredictionId": "fc48e348-f0b6-490c-89a9-bfd404d8b8d7",
      "undoRedoGroup": {
        "id": 13,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.824Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "fc48e348-f0b6-490c-89a9-bfd404d8b8d7",
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.824Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "function changeLight(light: TrafficLight) {"
    },
    "fusedCursorPrediction": null,
    "predictionId": "fc48e348-f0b6-490c-89a9-bfd404d8b8d7",
    "generationUUID": "86dbb012-5a72-40b8-9a63-2b1b4e056402",
    "timestamp": "2025-03-11T03:20:23.824Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "fc48e348-f0b6-490c-89a9-bfd404d8b8d7",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-11T03:20:23.824Z"
  }
]