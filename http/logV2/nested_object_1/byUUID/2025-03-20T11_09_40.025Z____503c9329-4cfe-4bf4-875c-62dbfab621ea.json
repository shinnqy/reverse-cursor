[
  {
    "intent": "line_change",
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.025Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "entry/src/main/ets/utils/nestedObj.ets",
          "diffHistory": [
            "55+|type Shape =\n56+|    | { type: \"circle\"; radius: number }\n57+|    | { type: \"rectangle\"; width: number; height: number }\n58+|    | { type: \"triangle\"; side1: number; side2: number; side3: number };\n60+|function getArea(shape: Shape) {\n61+|    switch (shape.type) {\n62+|        case \"circle\":\n",
            "56-|    | { type: \"circle\"; radius: number  }\n56+|    | { type: \"circle\"; radius: number; color: string }\n",
            "57-|    | { type: \"rectangle\"; width: number; height: number }\n58-|    | { type: \"triangle\"; side1: number; side2: number; side3: number };\n57+|    | { type: \"rectangle\"; width: number; height: number; color: string }\n58+|    | { type: \"triangle\"; side1: number; side2: number; side3: number; color: string };\n",
            "63-|\n63+|            return Math.PI * shape.radius * shape.radius;\n64+|        case \"rectangle\":\n65+|            return shape.width * shape.height;\n66+|        case \"triangle\":\n67+|            return shape.side1 * shape.side2 * shape.side3;\n68+|    }\n69+|}\n",
            "55+|type Circle = { type: \"circle\"; radius: number; color: string };\n",
            "58-|    | { type: \"rectangle\"; width: number; height: number; color: string }\n58+|    | { type: \"rectangle\"; width: number; height: number; color: string };\n59+|type Shape = Circle | Rectangle | Triangle;\n60+|\n61+|function getArea(shape: Shape) {\n",
            "57-|    | { type: \"circle\"; radius: number; color: string }\n58-|    | { type: \"rectangle\"; width: number; height: number; color: string };\n57+|    | { type: \"circle\"; radius: number; color: string };\n58+|type Triangle = { type: \"triangle\"; side1: number; side2: number; side3: number; color: string };\n",
            "56-|type Shape =\n57-|    | { type: \"circle\"; radius: number; color: string };\n56+|type Rectangle = { type: \"rectangle\"; width: number; height: number; color: string };\n",
            "61-|    | { type: \"triangle\"; side1: number; side2: number; side3: number; color: string };\n62-|\n63-|function getArea(shape: Shape) {\n",
            "55-|type Circle = { type: \"circle\"; radius: number; color: string };\n55+|inter Circle = { type: \"circle\"; radius: number; color: string };\n",
            "56-|type Rectangle = { type: \"rectangle\"; width: number; height: number; color: string };\n57-|type Triangle = { type: \"triangle\"; side1: number; side2: number; side3: number; color: string };\n56+|type Rectangle { type: \"rectangle\"; width: number; height: number; color: string };\n57+|interface Triangle { type: \"triangle\"; side1: number; side2: number; side3: number; color: string };\n",
            "55-|inter Circle = { type: \"circle\"; radius: number; color: string };\n56-|type Rectangle { type: \"rectangle\"; width: number; height: number; color: string };\n55+|inter Circle { type: \"circle\"; radius: number; color: string };\n56+|interface Rectangle { type: \"rectangle\"; width: number; height: number; color: string };\n",
            "55-|inter Circle { type: \"circle\"; radius: number; color: string };\n55+|interface Circle { type: \"circle\"; radius: number; color: string };\n",
            "60+|let shape: Shape = { type: \"circle\", radius: 10, color: \"red\" };\n61+|\n64-|        case \"rectangle\":\n65-|            return shape.width * shape.height;\n66-|        case \"triangle\":\n67-|            return shape.side1 * shape.side2 * shape.side3;\n68-|    }\n69-|}\n",
            "62-|function getArea(shape: Shape) {\n63-|    switch (shape.type) {\n64-|        case \"circle\":\n65-|            return Math.PI * shape.radius * shape.radius;\n",
            "25+|user.address.city = \"New York\";\n26+|user.address.zip = \"10001\";\n27+|user.address.state = \"NY\";\n28+|user.address.country = \"USA\";\n29+|\n",
            "60+|products[0].details.name = \"Product 1 Updated\";\n61+|products[1].details.name = \"Product 2 Updated\";\n62+|\n",
            "62+|products[0].details.price = 150;\n63+|products[1].details.price = 250;\n",
            "64+|products[0].details.category = \"Category 3\";\n65+|products[1].details.category = \"Category 4\";\n",
            "74+|\n75+|\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "entry/src/main/ets/utils/nestedObj.ets",
        "contents": "interface Address {\n    street: string;\n    city: string;\n    state: string;\n    zip: string;\n}\n\ninterface User {\n    name: string;\n    age: number;\n    address: Address;\n}\n\nlet user: User = {\n    name: \"John\",\n    age: 30,\n    address: {\n        street: \"123 Main St\",\n        city: \"Anytown\",\n        state: \"CA\",\n        zip: \"12345\",\n    },\n};\n\nuser.address.city = \"New York\";\nuser.address.zip = \"10001\";\nuser.address.state = \"NY\";\nuser.address.country = \"USA\";\n\ninterface ProductDetails {\n    name: string;\n    price: number;\n    category: string;\n}\n\ninterface Product {\n    id: number;\n    details: ProductDetails;\n}\n\nlet products: Product[] = [\n    {\n        id: 1,\n        details: {\n            name: \"Product 1\",\n            price: 100,\n            category: \"Category 1\",\n        },\n    },\n    {\n        id: 2,\n        details: {\n            name: \"Product 2\",\n            price: 200,\n            category: \"Category 2\",\n        },\n    },\n];\n\nproducts[0].details.name = \"Product 1 Updated\";\nproducts[1].details.name = \"Product 2 Updated\";\nproducts[0].details.price = 150;\nproducts[1].details.price = 250;\nproducts[0].details.category = \"Category 3\";\nproducts[1].details.category = \"Category 4\";\n\ninterface Circle { type: \"circle\"; radius: number; color: string };\ninterface Rectangle { type: \"rectangle\"; width: number; height: number; color: string };\ninterface Triangle { type: \"triangle\"; side1: number; side2: number; side3: number; color: string };\ntype Shape = Circle | Rectangle | Triangle;\n\nlet shape: Shape = { type: \"circle\", radius: 10, color: \"red\" };\n\n\n\n",
        "cursorPosition": {
          "line": 73,
          "column": 0
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 117,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/DevEcoStudioProjects/MyApplication2"
      },
      "additionalFiles": [],
      "cppIntentInfo": {
        "source": "line_change"
      },
      "clientTime": 1742468980073,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "w7qbwqdnwclt3gk87qzzc",
      "timeSinceRequestStart": 51,
      "timeAtRequestSend": 1742468980073
    },
    "generateUuid": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.076Z"
  },
  {
    "cursorRetrieval": {
      "text": "type Shape = Circle | Rectangle | Triangle;\n\nlet shape: Shape = { type: \"circle\", radius: 10, color: \"red\" };\n\nshape",
      "rangeToReplace": {
        "startLineNumber": 70,
        "endLineNumberInclusive": 76
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.444Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.449Z"
  },
  {
    "cursorRetrieval": {
      "text": ".color"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.468Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.477Z"
  },
  {
    "cursorRetrieval": {
      "text": " \""
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.488Z"
  },
  {
    "cursorRetrieval": {
      "text": "blue"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.501Z"
  },
  {
    "cursorRetrieval": {
      "text": "\";"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.506Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.518Z"
  },
  {
    "cursorRetrieval": {
      "text": "shape"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.532Z"
  },
  {
    "cursorRetrieval": {
      "text": "."
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.538Z"
  },
  {
    "cursorRetrieval": {
      "text": "radius"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.548Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.558Z"
  },
  {
    "cursorRetrieval": {
      "text": " "
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.569Z"
  },
  {
    "cursorRetrieval": {
      "text": "20"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.579Z"
  },
  {
    "cursorRetrieval": {
      "text": ";"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.590Z"
  },
  {
    "cursorRetrieval": {
      "text": "\nshape"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.599Z"
  },
  {
    "cursorRetrieval": {
      "text": ".type"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.610Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.620Z"
  },
  {
    "cursorRetrieval": {
      "text": " \""
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.630Z"
  },
  {
    "cursorRetrieval": {
      "text": "rectangle"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.640Z"
  },
  {
    "cursorRetrieval": {
      "text": "\";\n"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.654Z"
  },
  {
    "cursorRetrieval": {
      "text": "shape.width"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.663Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.672Z"
  },
  {
    "cursorRetrieval": {
      "text": " "
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.683Z"
  },
  {
    "cursorRetrieval": {
      "text": "1"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.694Z"
  },
  {
    "cursorRetrieval": {
      "text": "0"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.705Z"
  },
  {
    "cursorRetrieval": {
      "text": ";"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.716Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.726Z"
  },
  {
    "cursorRetrieval": {
      "text": "shape"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.737Z"
  },
  {
    "cursorRetrieval": {
      "text": ".height"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.748Z"
  },
  {
    "cursorRetrieval": {
      "text": " ="
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.761Z"
  },
  {
    "cursorRetrieval": {
      "text": " 2"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.766Z"
  },
  {
    "cursorRetrieval": {
      "text": "0"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.776Z"
  },
  {
    "cursorRetrieval": {
      "text": ";"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.786Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n\n"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.797Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.807Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.816Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.828Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.829Z"
  },
  {
    "firstChunkValue": "type Shape = Circle | Rectangle | Triangle;\n\nlet shape: Shape = { type: \"circle\", radius: 10, color: \"red\" };\n\nshape.color = \"blue\";\nshape.radius = 20;\nshape.type = \"rectangle\";\nshape.width = 10;\nshape.height = 20;\n\n\n\n",
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.832Z"
  },
  {
    "fusedCursorPrediction": null,
    "predictionId": "f8aacc67-9207-49cb-b065-7a6167d9692e",
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.848Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "type Shape = Circle | Rectangle | Triangle;\n\nlet shape: Shape = { type: \"circle\", radius: 10, color: \"red\" };\n\nshape.color = \"blue\";\nshape.radius = 20;\nshape.type = \"rectangle\";\nshape.width = 10;\nshape.height = 20;\n\n\n\n"
    },
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.850Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "type Shape = Circle | Rectangle | Triangle;\n\nlet shape: Shape = { type: \"circle\", radius: 10, color: \"red\" };\n\nshape.color = \"blue\";\nshape.radius = 20;\nshape.type = \"rectangle\";\nshape.width = 10;\nshape.height = 20;\n\n\n\n"
    },
    "fusedCursorPrediction": null,
    "predictionId": "f8aacc67-9207-49cb-b065-7a6167d9692e",
    "generationUUID": "503c9329-4cfe-4bf4-875c-62dbfab621ea",
    "timestamp": "2025-03-20T11:09:40.851Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "f8aacc67-9207-49cb-b065-7a6167d9692e",
    "fusedCursorPrediction": null,
    "timestamp": "2025-03-20T11:09:40.851Z"
  }
]