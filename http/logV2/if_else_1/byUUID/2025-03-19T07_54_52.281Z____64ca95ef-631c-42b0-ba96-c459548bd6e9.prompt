You're an expert in ArkTS. Your task is to help the user update the code around current cursor position.

## Recent Actions
Here is what the user has been doing from the earliest to the latest:

File: entry/src/main/ets/utils/ifElse1.ets
added the code `let status = 'ac'` in line 1
added the code `` in line 2
added the code `if (status === 'active') {` in line 3
added the code `    console.log('active')` in line 4
added the code `} else {` in line 5
added the code `    console.log('inactive')` in line 6
added the code `}` in line 7

deleted the code `let status = 'ac'` in line 1
added the code `let status = 'active'` in line 1

deleted the code `    console.log('active')` in line 4

deleted the code `  ` in line 4
added the code `  let count = 10;` in line 4

deleted the code `    console.log('inactive')` in line 6
deleted the code `}` in line 7
added the code `    = 0;` in line 6
added the code `}` in line 7
added the code `` in line 8
added the code `console.log(count);` in line 9

deleted the code `    = 0;` in line 6
added the code `  let count = 0;` in line 6

deleted the code `console.log(count);` in line 9
added the code `console.log(count);` in line 9
added the code `` in line 10
added the code `function printValue(value: string ` in line 11
added the code `  if (typeof value === 'string') {` in line 12
added the code `    console.log(value);` in line 13
added the code `  } else {` in line 14
added the code `    console.log(value);` in line 15
added the code `  }` in line 16
added the code `}` in line 17

deleted the code `    console.log(value);` in line 13
added the code `    console.log(value.toUpperCase());` in line 13

deleted the code `    console.log(value);` in line 15
added the code `    console.log(value.toFixed(2));` in line 15

added the code `}` in line 17
added the code `` in line 18
added the code `class Cat {` in line 19
added the code `  ` in line 20

deleted the code `  ` in line 20
deleted the code `}` in line 21
added the code `  meow() {}` in line 20
added the code `}` in line 21
added the code `class Dog {` in line 22
added the code `  bark() {}` in line 23
added the code `}` in line 24
added the code `` in line 25
added the code `function printAnimal(animal: Cat ` in line 26
added the code `  if (animal instanceof Cat) {` in line 27
added the code `    animal.meow();` in line 28
added the code `  } else {` in line 29
added the code `    animal.bark();` in line 30
added the code `  }` in line 31
added the code `}` in line 32
added the code `` in line 33

added the code `let sc` in line 34


## Current Code
Here is the current code file path:
entry/src/main/ets/utils/ifElse1.ets

Here is the current code around the cursor position:

```
let status = 'active'

if (status === 'active') {
  let count = 10;
} else {
  let count = 0;
}

console.log(count);

function printValue(value: string | number) {
  if (typeof value === 'string') {
    console.log(value.toUpperCase());
  } else {
    console.log(value.toFixed(2));
  }
}

class Cat {
  meow() {}
}
class Dog {
  bark() {}
<|editable_region_start|>
}

function printAnimal(animal: Cat | Dog) {
  if (animal instanceof Cat) {
    animal.meow();
  } else {
    animal.bark();
  }
}

let sc<|current_cursor_position|>

<|editable_region_end|>
```

## Task
Rewrite the code from the first column of the line of <|editable_region_start|> to the line of <|editable_region_end|> according to the following requirements:
1. Enforce code format strictly matching existing code style.
2. Propagate naming convention changes to all related cases
3. Preserve original functionality
4. Apply changes to entire code regardless of cursor position
5. Focus on code after cursor position at <|current_cursor_position|>

# Output Format
Return ONLY the rewritten code from the first column of the line of <|editable_region_start|> to the line of <|editable_region_end|> without any other words.
Never use markdown formatting like ```. Return raw text only.