[
  {
    "intent": "typing",
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.200Z"
  },
  {
    "partialData": {
      "fileDiffHistories": [
        {
          "fileName": "entry/src/main/ets/utils/ifElse1.ets",
          "diffHistory": [
            "1+|let status = 'ac'\n2+|\n3+|if (status === 'active') {\n4+|    console.log('active')\n5+|} else {\n6+|    console.log('inactive')\n7+|}\n",
            "1-|let status = 'ac'\n1+|let status = 'active'\n",
            "4-|    console.log('active')\n",
            "4-|  \n4+|  let count = 10;\n",
            "6-|    console.log('inactive')\n7-|}\n6+|    = 0;\n7+|}\n8+|\n9+|console.log(count);\n",
            "6-|    = 0;\n6+|  let count = 0;\n",
            "9-|console.log(count);\n9+|console.log(count);\n10+|\n11+|function printValue(value: string | number) {\n12+|  if (typeof value === 'string') {\n13+|    console.log(value);\n14+|  } else {\n15+|    console.log(value);\n16+|  }\n17+|}\n",
            "13-|    console.log(value);\n13+|    console.log(value.toUpperCase());\n",
            "15-|    console.log(value);\n15+|    console.log(value.);\n"
          ],
          "diffHistoryTimestamps": []
        }
      ],
      "diffHistory": [],
      "blockDiffPatches": [],
      "mergedDiffHistories": [],
      "currentFile": {
        "relativeWorkspacePath": "entry/src/main/ets/utils/ifElse1.ets",
        "contents": "let status = 'active'\n\nif (status === 'active') {\n  let count = 10;\n} else {\n  let count = 0;\n}\n\nconsole.log(count);\n\nfunction printValue(value: string | number) {\n  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.);\n  }\n}",
        "cursorPosition": {
          "line": 14,
          "column": 22
        },
        "dataframes": [],
        "languageId": "",
        "diagnostics": [],
        "totalNumberOfLines": 0,
        "contentsStartAtLine": 0,
        "topChunks": [],
        "fileVersion": 95,
        "cellStartLines": [],
        "cells": [],
        "relyOnFilesync": false,
        "workspaceRootPath": "/Users/shinn/DevEcoStudioProjects/MyApplication2"
      },
      "additionalFiles": [],
      "cppIntentInfo": {
        "source": "typing"
      },
      "clientTime": 1742370842237,
      "clientTimezoneOffset": -480,
      "modelName": "fast",
      "diffHistoryKeys": [],
      "contextItems": [],
      "parameterHints": [],
      "lspSuggestedItems": {
        "suggestions": []
      },
      "lspContexts": [],
      "filesyncUpdates": [],
      "workspaceId": "w7qbwqdnwclt3gk87qzzc",
      "timeSinceRequestStart": 50.699951171875,
      "timeAtRequestSend": 1742370842237
    },
    "generateUuid": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.238Z"
  },
  {
    "isFusedCursorPredictionModel": true,
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.599Z"
  },
  {
    "cursorRetrieval": {
      "text": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.",
      "rangeToReplace": {
        "startLineNumber": 12,
        "endLineNumberInclusive": 16
      },
      "modelInfo": {
        "isFusedCursorPredictionModel": true
      }
    },
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.601Z"
  },
  {
    "cursorRetrieval": {
      "text": "toFixed"
    },
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.619Z"
  },
  {
    "cursorRetrieval": {
      "text": "("
    },
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.629Z"
  },
  {
    "cursorRetrieval": {
      "text": "2"
    },
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.636Z"
  },
  {
    "cursorRetrieval": {
      "text": "));"
    },
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.645Z"
  },
  {
    "cursorRetrieval": {
      "text": "\n"
    },
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.659Z"
  },
  {
    "firstChunkValue": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.toFixed(2));\n  }",
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.660Z"
  },
  {
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.toFixed(2));\n  }"
    },
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.661Z"
  },
  {
    "action": "displayCppSuggestion",
    "suggestion": {
      "uniqueId": "7ec5fc41-4b54-430f-951d-dd9469611b57",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/ifElse1.ets",
        "external": "file:///Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/ifElse1.ets",
        "path": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/ifElse1.ets",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 95,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 95,
      "monotonicallyIncreasingSuggestionId": 63,
      "range": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 16,
        "endColumn": 4
      },
      "replaceText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.toFixed(2));\n  }",
      "originalText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.);\n  }",
      "startingSuggestionRange": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 16,
        "endColumn": 4
      },
      "diffText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.toFixed(2));\n  }",
      "fullOriginalText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.);\n  }",
      "suggestionTriggerTime": 1742370842186.4001,
      "greens": [],
      "source": "typing",
      "requestId": "69703931-9e39-45c0-a844-5223eee767a1",
      "selection": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 16,
        "endColumn": 4
      },
      "undoRedoGroup": {
        "id": 63,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false
    },
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.662Z"
  },
  {
    "cursorRetrieval": {
      "text": " "
    },
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.666Z"
  },
  {
    "cursorRetrieval": {
      "text": " }"
    },
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.677Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneEdit": true
    },
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.698Z"
  },
  {
    "fullText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.toFixed(2));\n  }",
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.700Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true",
    "invokePlace": "before this.generateFollowupSuggestion",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.toFixed(2));\n  }"
    },
    "fullText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.toFixed(2));\n  }",
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.700Z"
  },
  {
    "invokeReason": "fullText resolved & isValidCase is true && remaining reason && need to create newSuggestion according fullText, will attach onAcceptDisplayId to currentSuggestion if newSuggestion is not undefined",
    "invokePlace": "this.generateFollowupSuggestion",
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.700Z"
  },
  {
    "fusedCursorPrediction": {
      "relativePath": "entry/src/main/ets/utils/ifElse1.ets",
      "lineNumberOneIndexed": 16,
      "text": "}",
      "shouldRetriggerCpp": true
    },
    "predictionId": "557e93d4-23a7-4ca7-9dcc-b417895d1eec",
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.720Z"
  },
  {
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "before this.uponFusedCursorPredictionReady",
    "isValidCase4firstChunkValue": {
      "valid": true,
      "modelOutputText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.toFixed(2));\n  }"
    },
    "fusedCursorPrediction": {
      "relativePath": "entry/src/main/ets/utils/ifElse1.ets",
      "lineNumberOneIndexed": 16,
      "text": "}",
      "shouldRetriggerCpp": true
    },
    "predictionId": "557e93d4-23a7-4ca7-9dcc-b417895d1eec",
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.721Z"
  },
  {
    "setIntoDB": "predictionId",
    "invokeReason": "fusedCursorPrediction resolved & isValidCase is true",
    "invokePlace": "right after fusedCursorPrediction resolved",
    "predictionId": "557e93d4-23a7-4ca7-9dcc-b417895d1eec",
    "fusedCursorPrediction": {
      "relativePath": "entry/src/main/ets/utils/ifElse1.ets",
      "lineNumberOneIndexed": 16,
      "text": "}",
      "shouldRetriggerCpp": true
    },
    "timestamp": "2025-03-19T07:54:02.721Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "cursorPredictionTarget": {
        "relativePath": "entry/src/main/ets/utils/ifElse1.ets",
        "lineNumberOneIndexed": 16,
        "expectedContent": "}",
        "shouldRetriggerCpp": true
      }
    },
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.722Z"
  },
  {
    "cursorRetrieval": {
      "text": "",
      "doneStream": true
    },
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:02.722Z"
  },
  {
    "action": "press Tab to accept suggestion",
    "suggestion": {
      "uniqueId": "7ec5fc41-4b54-430f-951d-dd9469611b57",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/ifElse1.ets",
        "external": "file:///Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/ifElse1.ets",
        "path": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/ifElse1.ets",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 95,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 95,
      "monotonicallyIncreasingSuggestionId": 63,
      "range": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 16,
        "endColumn": 4
      },
      "replaceText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.toFixed(2));\n  }",
      "originalText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.);\n  }",
      "startingSuggestionRange": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 16,
        "endColumn": 4
      },
      "diffText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.toFixed(2));\n  }",
      "fullOriginalText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.);\n  }",
      "suggestionTriggerTime": 1742370842186.4001,
      "greens": [],
      "source": "typing",
      "requestId": "69703931-9e39-45c0-a844-5223eee767a1",
      "selection": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 16,
        "endColumn": 4
      },
      "fusedCursorPredictionId": "557e93d4-23a7-4ca7-9dcc-b417895d1eec",
      "undoRedoGroup": {
        "id": 63,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "b;355"
    },
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:03.204Z"
  },
  {
    "action": "press Tab to acceptFullSuggestion and succeed",
    "condition": "tabToLineBeforeAcceptingCpp == false",
    "suggestion": {
      "uniqueId": "7ec5fc41-4b54-430f-951d-dd9469611b57",
      "uri": {
        "$mid": 1,
        "fsPath": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/ifElse1.ets",
        "external": "file:///Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/ifElse1.ets",
        "path": "/Users/shinn/DevEcoStudioProjects/MyApplication2/entry/src/main/ets/utils/ifElse1.ets",
        "scheme": "file"
      },
      "modelVersionWhenInvoked": 95,
      "suggestionIsCurrentlyHidden": true,
      "modelVersionWhenCreated": 95,
      "monotonicallyIncreasingSuggestionId": 63,
      "range": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 16,
        "endColumn": 4
      },
      "replaceText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.toFixed(2));\n  }",
      "originalText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.);\n  }",
      "startingSuggestionRange": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 16,
        "endColumn": 4
      },
      "diffText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.toFixed(2));\n  }",
      "fullOriginalText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.);\n  }",
      "suggestionTriggerTime": 1742370842186.4001,
      "greens": [],
      "source": "typing",
      "requestId": "69703931-9e39-45c0-a844-5223eee767a1",
      "selection": {
        "startLineNumber": 12,
        "startColumn": 1,
        "endLineNumberInclusive": 16,
        "endColumn": 4
      },
      "fusedCursorPredictionId": "557e93d4-23a7-4ca7-9dcc-b417895d1eec",
      "undoRedoGroup": {
        "id": 63,
        "b": 1
      },
      "immediatelySeen": false,
      "hasBeenSeen": false,
      "decorationId": "b;355"
    },
    "generationUUID": "69703931-9e39-45c0-a844-5223eee767a1",
    "timestamp": "2025-03-19T07:54:03.214Z"
  },
  {
    "getFromDB": "predictionId",
    "possibleInvokeReason": "no suggestion but has predictionId",
    "predictionId": "557e93d4-23a7-4ca7-9dcc-b417895d1eec",
    "fusedCursorPrediction": {
      "relativePath": "entry/src/main/ets/utils/ifElse1.ets",
      "lineNumberOneIndexed": 16,
      "text": "}",
      "shouldRetriggerCpp": true
    },
    "oldText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.);\n  }",
    "newText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.toFixed(2));\n  }",
    "timestamp": "2025-03-19T07:54:03.215Z"
  },
  {
    "action": "displayFusedCursorPrediction",
    "predictionId": "557e93d4-23a7-4ca7-9dcc-b417895d1eec",
    "fusedCursorPrediction": {
      "relativePath": "entry/src/main/ets/utils/ifElse1.ets",
      "lineNumberOneIndexed": 16,
      "text": "}",
      "shouldRetriggerCpp": true
    },
    "oldText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.);\n  }",
    "newText": "  if (typeof value === 'string') {\n    console.log(value.toUpperCase());\n  } else {\n    console.log(value.toFixed(2));\n  }",
    "timestamp": "2025-03-19T07:54:03.215Z"
  }
]