2025-02-19T18:44:09.422Z: {"intent":"typing"}
2025-02-19T18:44:09.456Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|f\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"f","cursorPosition":{"line":0,"column":1},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":18,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990649454,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":50.900146484375,"timeAtRequestSend":1739990649454},"generateUuid":"36ba4c5c-3d0c-4541-a064-57f285743eb6"}
2025-02-19T18:44:09.493Z: {"intent":"typing"}
2025-02-19T18:44:09.543Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|fu\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"fu","cursorPosition":{"line":0,"column":2},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":19,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990649540,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[{"label":"function"},{"label":"Function"},{"label":"flush"},{"label":"flushSync"},{"label":"focus"},{"label":"FocusEvent"},{"label":"CSSFontFeatureValuesRule"},{"label":"CSSFontFaceRule"},{"label":"SVGComponentTransferFunctionElement"}]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":52.60009765625,"timeAtRequestSend":1739990649540},"generateUuid":"cba18e64-cff1-45bd-be3f-c0cfab81212d"}
2025-02-19T18:44:09.739Z: {"intent":"typing"}
2025-02-19T18:44:09.774Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|fun\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"fun","cursorPosition":{"line":0,"column":3},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":20,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990649771,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[{"label":"function"},{"label":"Function"},{"label":"flushSync"},{"label":"FocusEvent"},{"label":"SVGComponentTransferFunctionElement"}]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":50.5,"timeAtRequestSend":1739990649771},"generateUuid":"67d8f6bd-8e0a-4fbc-80fe-df4c5004b28c"}
2025-02-19T18:44:10.053Z: {"firstChunkValue":"function changeLight(light: string) {","generationUUID":"36ba4c5c-3d0c-4541-a064-57f285743eb6"}
2025-02-19T18:44:10.123Z: {"firstChunkValue":"function changeLight(light: string) {","generationUUID":"cba18e64-cff1-45bd-be3f-c0cfab81212d"}
2025-02-19T18:44:10.143Z: {"fullText":"function changeLight(light: string) {\n  if (light === \"red\") {\n    return \"green\";\n  } else if (light === \"green\") {\n    return \"yellow\";\n  }\n}","generationUUID":"36ba4c5c-3d0c-4541-a064-57f285743eb6"}
2025-02-19T18:44:10.144Z: {"fusedCursorPrediction":null,"generationUUID":"36ba4c5c-3d0c-4541-a064-57f285743eb6"}
2025-02-19T18:44:10.313Z: {"fullText":"function changeLight(light: string) {\n  if (light === \"","generationUUID":"cba18e64-cff1-45bd-be3f-c0cfab81212d"}
2025-02-19T18:44:10.316Z: {"fusedCursorPrediction":null,"generationUUID":"cba18e64-cff1-45bd-be3f-c0cfab81212d"}
2025-02-19T18:44:11.332Z: {"intent":"typing"}
2025-02-19T18:44:11.375Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: string) \n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"'}' expected.","range":{"startPosition":{"line":1,"column":38},"endPosition":{"line":1,"column":38}},"source":"ts","relatedInformation":[{"message":"The parser expected to find a '}' to match the '{' token here.","range":{"startPosition":{"line":1,"column":37},"endPosition":{"line":1,"column":38}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: string) ","cursorPosition":{"line":0,"column":36},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":22,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990651372,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":50.300048828125,"timeAtRequestSend":1739990651372},"generateUuid":"ada10481-3542-40c5-826f-75de0dd2d319"}
2025-02-19T18:44:11.430Z: {"intent":"typing"}
2025-02-19T18:44:11.477Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: string)\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"'}' expected.","range":{"startPosition":{"line":1,"column":38},"endPosition":{"line":1,"column":38}},"source":"ts","relatedInformation":[{"message":"The parser expected to find a '}' to match the '{' token here.","range":{"startPosition":{"line":1,"column":37},"endPosition":{"line":1,"column":38}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: string)","cursorPosition":{"line":0,"column":35},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":23,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990651475,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":50.89990234375,"timeAtRequestSend":1739990651475},"generateUuid":"58a7af54-facf-47be-b05c-775604275a90"}
2025-02-19T18:44:11.540Z: {"intent":"typing"}
2025-02-19T18:44:11.588Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: string\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"'}' expected.","range":{"startPosition":{"line":1,"column":38},"endPosition":{"line":1,"column":38}},"source":"ts","relatedInformation":[{"message":"The parser expected to find a '}' to match the '{' token here.","range":{"startPosition":{"line":1,"column":37},"endPosition":{"line":1,"column":38}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: string","cursorPosition":{"line":0,"column":34},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":24,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990651585,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":51.099853515625,"timeAtRequestSend":1739990651585},"generateUuid":"7b1cfa64-bd5d-4a50-9681-2c29e0c412ae"}
2025-02-19T18:44:11.652Z: {"intent":"typing"}
2025-02-19T18:44:11.703Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: strin\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"'}' expected.","range":{"startPosition":{"line":1,"column":38},"endPosition":{"line":1,"column":38}},"source":"ts","relatedInformation":[{"message":"The parser expected to find a '}' to match the '{' token here.","range":{"startPosition":{"line":1,"column":37},"endPosition":{"line":1,"column":38}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: strin","cursorPosition":{"line":0,"column":33},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":25,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990651700,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":51.400146484375,"timeAtRequestSend":1739990651700},"generateUuid":"67827079-b561-41be-bdb7-0ca1ddd96c43"}
2025-02-19T18:44:11.777Z: {"intent":"typing"}
2025-02-19T18:44:11.826Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: stri\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"'}' expected.","range":{"startPosition":{"line":1,"column":38},"endPosition":{"line":1,"column":38}},"source":"ts","relatedInformation":[{"message":"The parser expected to find a '}' to match the '{' token here.","range":{"startPosition":{"line":1,"column":37},"endPosition":{"line":1,"column":38}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: stri","cursorPosition":{"line":0,"column":32},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":26,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990651823,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":50.5,"timeAtRequestSend":1739990651823},"generateUuid":"fd5635d7-1822-4e31-ae9b-44ae53a1a037"}
2025-02-19T18:44:12.020Z: {"intent":"typing"}
2025-02-19T18:44:12.066Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: str\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"'}' expected.","range":{"startPosition":{"line":1,"column":38},"endPosition":{"line":1,"column":38}},"source":"ts","relatedInformation":[{"message":"The parser expected to find a '}' to match the '{' token here.","range":{"startPosition":{"line":1,"column":37},"endPosition":{"line":1,"column":38}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: str","cursorPosition":{"line":0,"column":31},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":27,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990652065,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":50.89990234375,"timeAtRequestSend":1739990652065},"generateUuid":"90a1688d-e174-4a39-b222-f6f4bf1ec6eb"}
2025-02-19T18:44:12.391Z: {"intent":"typing"}
2025-02-19T18:44:12.439Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: st\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"')' expected.","range":{"startPosition":{"line":1,"column":32},"endPosition":{"line":1,"column":32}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Function implementation is missing or not immediately following the declaration.","range":{"startPosition":{"line":1,"column":10},"endPosition":{"line":1,"column":21}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'changeLight', which lacks return-type annotation, implicitly has an 'any' return type.","range":{"startPosition":{"line":1,"column":10},"endPosition":{"line":1,"column":21}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'str'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":32}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: st","cursorPosition":{"line":0,"column":30},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":28,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990652436,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":51.300048828125,"timeAtRequestSend":1739990652436},"generateUuid":"d5725b33-66ce-4b4c-8f75-261e13642190"}
2025-02-19T18:44:12.573Z: {"intent":"typing"}
2025-02-19T18:44:12.613Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: s\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"')' expected.","range":{"startPosition":{"line":1,"column":32},"endPosition":{"line":1,"column":32}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Function implementation is missing or not immediately following the declaration.","range":{"startPosition":{"line":1,"column":10},"endPosition":{"line":1,"column":21}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'changeLight', which lacks return-type annotation, implicitly has an 'any' return type.","range":{"startPosition":{"line":1,"column":10},"endPosition":{"line":1,"column":21}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'str'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":32}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: s","cursorPosition":{"line":0,"column":29},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":29,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990652610,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":53.89990234375,"timeAtRequestSend":1739990652611},"generateUuid":"0c7d87cc-f69c-49c6-99e1-0ffc297c0bac"}
2025-02-19T18:44:13.022Z: {"intent":"typing"}
2025-02-19T18:44:13.064Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: \n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"')' expected.","range":{"startPosition":{"line":1,"column":30},"endPosition":{"line":1,"column":30}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Function implementation is missing or not immediately following the declaration.","range":{"startPosition":{"line":1,"column":10},"endPosition":{"line":1,"column":21}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'changeLight', which lacks return-type annotation, implicitly has an 'any' return type.","range":{"startPosition":{"line":1,"column":10},"endPosition":{"line":1,"column":21}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 's'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":30}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: ","cursorPosition":{"line":0,"column":28},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":30,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990653061,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":51.800048828125,"timeAtRequestSend":1739990653061},"generateUuid":"4bd01b51-84ca-4ed5-b55f-9b523289df30"}
2025-02-19T18:44:13.637Z: {"firstChunkValue":"function changeLight(light: string) {","generationUUID":"4bd01b51-84ca-4ed5-b55f-9b523289df30"}
2025-02-19T18:44:13.752Z: {"intent":"typing"}
2025-02-19T18:44:13.758Z: {"fullText":"function changeLight(light: string) {\n  if (light === \"red\") {\n    return \"green\";\n  } else if (light === \"green\") {\n    return \"yellow\";\n  }\n}","generationUUID":"4bd01b51-84ca-4ed5-b55f-9b523289df30"}
2025-02-19T18:44:13.759Z: {"fusedCursorPrediction":null,"generationUUID":"4bd01b51-84ca-4ed5-b55f-9b523289df30"}
2025-02-19T18:44:13.804Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: T\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Type expected.","range":{"startPosition":{"line":1,"column":28},"endPosition":{"line":1,"column":28}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"')' expected.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Function implementation is missing or not immediately following the declaration.","range":{"startPosition":{"line":1,"column":10},"endPosition":{"line":1,"column":21}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'changeLight', which lacks return-type annotation, implicitly has an 'any' return type.","range":{"startPosition":{"line":1,"column":10},"endPosition":{"line":1,"column":21}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: T","cursorPosition":{"line":0,"column":29},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":31,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990653803,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":53.699951171875,"timeAtRequestSend":1739990653803},"generateUuid":"55b81a1f-02f6-41ac-83b9-793e1849c8fa"}
2025-02-19T18:44:14.099Z: {"intent":"typing"}
2025-02-19T18:44:14.141Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: Tr\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"')' expected.","range":{"startPosition":{"line":1,"column":30},"endPosition":{"line":1,"column":30}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Function implementation is missing or not immediately following the declaration.","range":{"startPosition":{"line":1,"column":10},"endPosition":{"line":1,"column":21}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'changeLight', which lacks return-type annotation, implicitly has an 'any' return type.","range":{"startPosition":{"line":1,"column":10},"endPosition":{"line":1,"column":21}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'T'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":30}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Type expected.","range":{"startPosition":{"line":1,"column":28},"endPosition":{"line":1,"column":28}},"source":"","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"')' expected.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":29}},"source":"","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: Tr","cursorPosition":{"line":0,"column":30},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":32,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990654140,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":54.10009765625,"timeAtRequestSend":1739990654140},"generateUuid":"b437d895-b0c7-4a03-a249-c1d50fc70a61"}
2025-02-19T18:44:14.387Z: {"firstChunkValue":"function changeLight(light: TrafficLight) {","generationUUID":"55b81a1f-02f6-41ac-83b9-793e1849c8fa"}
2025-02-19T18:44:14.487Z: {"fullText":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  }\n}\n\n","generationUUID":"55b81a1f-02f6-41ac-83b9-793e1849c8fa"}
2025-02-19T18:44:14.488Z: {"fusedCursorPrediction":null,"generationUUID":"55b81a1f-02f6-41ac-83b9-793e1849c8fa"}
2025-02-19T18:44:14.761Z: {"firstChunkValue":"function changeLight(light: TrafficLight) {","generationUUID":"b437d895-b0c7-4a03-a249-c1d50fc70a61"}
2025-02-19T18:44:14.842Z: {"fullText":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  }\n}\n\n","generationUUID":"b437d895-b0c7-4a03-a249-c1d50fc70a61"}
2025-02-19T18:44:14.843Z: {"fusedCursorPrediction":null,"generationUUID":"b437d895-b0c7-4a03-a249-c1d50fc70a61"}
2025-02-19T18:44:18.217Z: {"intent":"line_change"}
2025-02-19T18:44:18.221Z: {"intent":"typing"}
2025-02-19T18:44:18.268Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n7+|  \n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":3,"column":12},"endPosition":{"line":3,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  }\n}\n\n  ","cursorPosition":{"line":6,"column":2},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":37,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"line_change"},"clientTime":1739990658266,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":50.2001953125,"timeAtRequestSend":1739990658266},"generateUuid":"55f03e0e-030c-4023-8172-65163bc9922d"}
2025-02-19T18:44:18.942Z: {"firstChunkValue":"\nconsole.log(changeLight(TrafficLight.RED));","generationUUID":"55f03e0e-030c-4023-8172-65163bc9922d"}
2025-02-19T18:44:19.101Z: {"fullText":"\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","generationUUID":"55f03e0e-030c-4023-8172-65163bc9922d"}
2025-02-19T18:44:19.130Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-1.ts","lineNumberOneIndexed":14,"text":"}\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));","shouldRetriggerCpp":true},"generationUUID":"55f03e0e-030c-4023-8172-65163bc9922d"}
2025-02-19T18:44:20.583Z: {"intent":"typing"}
2025-02-19T18:44:20.629Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":3,"column":12},"endPosition":{"line":3,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  }\n}\n\n","cursorPosition":{"line":6,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":38,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990660627,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":51,"timeAtRequestSend":1739990660627},"generateUuid":"eb615829-3084-49fe-acd8-b4621b28917b"}
2025-02-19T18:44:21.208Z: {"firstChunkValue":"\nconsole.log(changeLight(TrafficLight.RED));","generationUUID":"eb615829-3084-49fe-acd8-b4621b28917b"}
2025-02-19T18:44:21.333Z: {"fullText":"\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","generationUUID":"eb615829-3084-49fe-acd8-b4621b28917b"}
2025-02-19T18:44:21.448Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":1,"text":"function changeLight(light: TrafficLight) {\nif (light === TrafficLight.RED) {\nreturn TrafficLight.GREEN;\n}\n}","shouldRetriggerCpp":true},"generationUUID":"eb615829-3084-49fe-acd8-b4621b28917b"}
2025-02-19T18:44:22.430Z: {"intent":"line_change"}
2025-02-19T18:44:22.479Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":3,"column":12},"endPosition":{"line":3,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  }\n}\n\n","cursorPosition":{"line":4,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":38,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"line_change"},"clientTime":1739990662477,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":51.39990234375,"timeAtRequestSend":1739990662477},"generateUuid":"515e6fb2-2659-4185-9809-750ff99ee628"}
2025-02-19T18:44:22.571Z: {"intent":"lint_errors"}
2025-02-19T18:44:22.622Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":3,"column":12},"endPosition":{"line":3,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  }\n}\n\n","cursorPosition":{"line":3,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":38,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"lint_errors"},"clientTime":1739990662620,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":53.5,"timeAtRequestSend":1739990662620},"generateUuid":"a1aa5534-262a-4b47-b039-5972df9d38dd"}
2025-02-19T18:44:23.247Z: {"firstChunkValue":"enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  }\n}\n\n","generationUUID":"515e6fb2-2659-4185-9809-750ff99ee628"}
2025-02-19T18:44:23.247Z: {"fusedCursorPrediction":null,"generationUUID":"515e6fb2-2659-4185-9809-750ff99ee628"}
2025-02-19T18:44:23.424Z: {"firstChunkValue":"enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  }\n}\n\n","generationUUID":"a1aa5534-262a-4b47-b039-5972df9d38dd"}
2025-02-19T18:44:23.425Z: {"fusedCursorPrediction":null,"generationUUID":"a1aa5534-262a-4b47-b039-5972df9d38dd"}
2025-02-19T18:44:27.998Z: {"intent":"typing"}
2025-02-19T18:44:28.044Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4-|  }\n4+|  } \n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":3,"column":12},"endPosition":{"line":3,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } \n}\n\n","cursorPosition":{"line":3,"column":4},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":39,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990668043,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":50.5,"timeAtRequestSend":1739990668043},"generateUuid":"136b86ea-a03b-402d-858d-3c074170320d"}
2025-02-19T18:44:28.680Z: {"firstChunkValue":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n}\n\n","generationUUID":"136b86ea-a03b-402d-858d-3c074170320d"}
2025-02-19T18:44:28.868Z: {"fullText":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\n","generationUUID":"136b86ea-a03b-402d-858d-3c074170320d"}
2025-02-19T18:44:29.037Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-1.ts","lineNumberOneIndexed":1,"text":"enum TrafficLight {\nRED = \"red\",\nGREEN = \"green\",\nYELLOW = \"yellow\"\n}","shouldRetriggerCpp":true},"generationUUID":"136b86ea-a03b-402d-858d-3c074170320d"}
2025-02-19T18:44:29.929Z: {"intent":"cursor_prediction"}
2025-02-19T18:44:29.946Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","errors":[{"message":"'}' expected.","range":{"startPosition":{"line":6,"column":2},"endPosition":{"line":6,"column":2}},"source":"","relatedInformation":[{"message":"The parser expected to find a '}' to match the '{' token here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":3,"column":12},"endPosition":{"line":3,"column":24}},"source":"","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","contents":"enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));","cursorPosition":{"line":0,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":52,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","visibleRangeContent":["function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\n"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":11}],"isOpen":true}],"cppIntentInfo":{"source":"cursor_prediction"},"clientTime":1739990669944,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":17.300048828125,"timeAtRequestSend":1739990669944},"generateUuid":"b5ec576f-3ea7-4bb6-ab7a-07ea29bcc72c"}
2025-02-19T18:44:30.313Z: {"intent":"lint_errors"}
2025-02-19T18:44:30.315Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":3,"column":12},"endPosition":{"line":3,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":5,"column":12},"endPosition":{"line":5,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":7,"column":12},"endPosition":{"line":7,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'}' expected.","range":{"startPosition":{"line":6,"column":2},"endPosition":{"line":6,"column":2}},"source":"","relatedInformation":[{"message":"The parser expected to find a '}' to match the '{' token here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\n","cursorPosition":{"line":7,"column":3},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":41,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"lint_errors"},"clientTime":1739990670311,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":1.199951171875,"timeAtRequestSend":1739990670311},"generateUuid":"bbad1dad-0129-4352-86ac-e591c7356655"}
2025-02-19T18:44:30.581Z: {"firstChunkValue":"enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}","generationUUID":"b5ec576f-3ea7-4bb6-ab7a-07ea29bcc72c"}
2025-02-19T18:44:30.703Z: {"fusedCursorPrediction":null,"generationUUID":"b5ec576f-3ea7-4bb6-ab7a-07ea29bcc72c"}
2025-02-19T18:44:30.920Z: {"firstChunkValue":"  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));","generationUUID":"bbad1dad-0129-4352-86ac-e591c7356655"}
2025-02-19T18:44:31.050Z: {"fullText":"  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","generationUUID":"bbad1dad-0129-4352-86ac-e591c7356655"}
2025-02-19T18:44:31.255Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":1,"text":"function changeLight(light: TrafficLight) {\nif (light === TrafficLight.RED) {\nreturn TrafficLight.GREEN;\n} else if (light === TrafficLight.GREEN) {\nreturn TrafficLight.YELLOW;","shouldRetriggerCpp":true},"generationUUID":"bbad1dad-0129-4352-86ac-e591c7356655"}
2025-02-19T18:44:33.319Z: {"intent":"cursor_prediction"}
2025-02-19T18:44:33.331Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":3,"column":12},"endPosition":{"line":3,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":5,"column":12},"endPosition":{"line":5,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":7,"column":12},"endPosition":{"line":7,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":0,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":43,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"cursor_prediction"},"clientTime":1739990673328,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":11.7001953125,"timeAtRequestSend":1739990673328},"generateUuid":"40297453-ed39-4422-866d-9cbdaabe8ae9"}
2025-02-19T18:44:33.955Z: {"firstChunkValue":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {","generationUUID":"40297453-ed39-4422-866d-9cbdaabe8ae9"}
2025-02-19T18:44:34.043Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-1.ts","lineNumberOneIndexed":6,"text":"\nfunction changeLight(light: TrafficLight) {\nif (light === TrafficLight.RED) {\nreturn TrafficLight.GREEN;\n} else if (light === TrafficLight.GREEN) {","shouldRetriggerCpp":false},"generationUUID":"40297453-ed39-4422-866d-9cbdaabe8ae9"}
2025-02-19T18:44:37.440Z: {"intent":"lint_errors"}
2025-02-19T18:44:37.487Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":3,"column":12},"endPosition":{"line":3,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":5,"column":12},"endPosition":{"line":5,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":7,"column":12},"endPosition":{"line":7,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":0,"column":1},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":43,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"lint_errors"},"clientTime":1739990677485,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":51.699951171875,"timeAtRequestSend":1739990677485},"generateUuid":"6c318329-95ec-4184-b677-e6d56993c899"}
2025-02-19T18:44:38.054Z: {"firstChunkValue":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {","generationUUID":"6c318329-95ec-4184-b677-e6d56993c899"}
2025-02-19T18:44:38.178Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-1.ts","lineNumberOneIndexed":6,"text":"\nfunction changeLight(light: TrafficLight) {\nif (light === TrafficLight.RED) {\nreturn TrafficLight.GREEN;\n} else if (light === TrafficLight.GREEN) {","shouldRetriggerCpp":true},"generationUUID":"6c318329-95ec-4184-b677-e6d56993c899"}
2025-02-19T18:44:49.813Z: {"intent":"lint_errors"}
2025-02-19T18:44:49.863Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":3,"column":12},"endPosition":{"line":3,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":5,"column":12},"endPosition":{"line":5,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":7,"column":12},"endPosition":{"line":7,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":2,"column":30},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":43,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"lint_errors"},"clientTime":1739990689861,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":52.5,"timeAtRequestSend":1739990689861},"generateUuid":"5f545960-0d29-4ba6-91fe-254bf22fef8d"}
2025-02-19T18:44:51.080Z: {"firstChunkValue":"  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }","generationUUID":"5f545960-0d29-4ba6-91fe-254bf22fef8d"}
2025-02-19T18:44:51.093Z: {"fusedCursorPrediction":null,"generationUUID":"5f545960-0d29-4ba6-91fe-254bf22fef8d"}
2025-02-19T18:44:52.301Z: {"intent":"typing"}
2025-02-19T18:44:52.339Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'r'.","range":{"startPosition":{"line":3,"column":5},"endPosition":{"line":3,"column":6}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":5,"column":12},"endPosition":{"line":5,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":7,"column":12},"endPosition":{"line":7,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    \n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":2,"column":4},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":45,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990692337,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":51.199951171875,"timeAtRequestSend":1739990692337},"generateUuid":"b6ef2ce7-144f-4b97-b88e-979735591389"}
2025-02-19T18:44:52.657Z: {"intent":"typing"}
2025-02-19T18:44:52.707Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    c\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":5,"column":12},"endPosition":{"line":5,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":7,"column":12},"endPosition":{"line":7,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'r'.","range":{"startPosition":{"line":3,"column":5},"endPosition":{"line":3,"column":6}},"source":"","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    c\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":2,"column":5},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":46,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990692705,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":53.5,"timeAtRequestSend":1739990692705},"generateUuid":"1bccf258-c71d-481d-aff6-cc75cea9c39e"}
2025-02-19T18:44:52.731Z: {"intent":"typing"}
2025-02-19T18:44:52.783Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    co\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":5,"column":12},"endPosition":{"line":5,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":7,"column":12},"endPosition":{"line":7,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    co\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":2,"column":6},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":47,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990692780,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":55.10009765625,"timeAtRequestSend":1739990692780},"generateUuid":"a2c32cf9-55bd-42e5-8163-8150533f96a7"}
2025-02-19T18:44:52.845Z: {"intent":"typing"}
2025-02-19T18:44:52.880Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    con\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":5,"column":12},"endPosition":{"line":5,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":7,"column":12},"endPosition":{"line":7,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    con\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":2,"column":7},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":48,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990692877,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":50.800048828125,"timeAtRequestSend":1739990692878},"generateUuid":"71d064e5-06ec-4722-a8ee-351888560650"}
2025-02-19T18:44:52.917Z: {"firstChunkValue":"  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }","generationUUID":"b6ef2ce7-144f-4b97-b88e-979735591389"}
2025-02-19T18:44:53.143Z: {"fullText":"  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"黄灯\");\n  }","generationUUID":"b6ef2ce7-144f-4b97-b88e-979735591389"}
2025-02-19T18:44:53.191Z: {"fusedCursorPrediction":null,"generationUUID":"b6ef2ce7-144f-4b97-b88e-979735591389"}
2025-02-19T18:44:53.281Z: {"firstChunkValue":"  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }","generationUUID":"1bccf258-c71d-481d-aff6-cc75cea9c39e"}
2025-02-19T18:44:53.358Z: {"firstChunkValue":"  if (light === TrafficLight.RED) {\n    console.log(\"red\");\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }","generationUUID":"a2c32cf9-55bd-42e5-8163-8150533f96a7"}
2025-02-19T18:44:53.457Z: {"firstChunkValue":"  if (light === TrafficLight.RED) {\n    console.log(\"red\");\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }","generationUUID":"71d064e5-06ec-4722-a8ee-351888560650"}
2025-02-19T18:44:53.503Z: {"fullText":"  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"黄灯\");\n  }","generationUUID":"1bccf258-c71d-481d-aff6-cc75cea9c39e"}
2025-02-19T18:44:53.575Z: {"fusedCursorPrediction":null,"generationUUID":"1bccf258-c71d-481d-aff6-cc75cea9c39e"}
2025-02-19T18:44:53.589Z: {"fullText":"  if (light === TrafficLight.RED) {\n    console.log(\"red\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"green\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"yellow\");\n  }","generationUUID":"a2c32cf9-55bd-42e5-8163-8150533f96a7"}
2025-02-19T18:44:53.667Z: {"fusedCursorPrediction":null,"generationUUID":"a2c32cf9-55bd-42e5-8163-8150533f96a7"}
2025-02-19T18:44:53.698Z: {"fullText":"  if (light === TrafficLight.RED) {\n    console.log(\"red\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"green\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"yellow\");\n  }","generationUUID":"71d064e5-06ec-4722-a8ee-351888560650"}
2025-02-19T18:44:53.780Z: {"fusedCursorPrediction":null,"generationUUID":"71d064e5-06ec-4722-a8ee-351888560650"}
2025-02-19T18:44:56.982Z: {"intent":"lint_errors"}
2025-02-19T18:44:56.984Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":5,"column":12},"endPosition":{"line":5,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":7,"column":12},"endPosition":{"line":7,"column":24}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'con'.","range":{"startPosition":{"line":3,"column":5},"endPosition":{"line":3,"column":8}},"source":"","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":2,"column":22},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":51,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"lint_errors"},"clientTime":1739990696981,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":0.89990234375,"timeAtRequestSend":1739990696981},"generateUuid":"6b66f9da-905d-4d9b-b079-f1feda5ca408"}
2025-02-19T18:44:57.586Z: {"firstChunkValue":"  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"黄灯\");\n  }","generationUUID":"6b66f9da-905d-4d9b-b079-f1feda5ca408"}
2025-02-19T18:44:57.710Z: {"fusedCursorPrediction":null,"generationUUID":"6b66f9da-905d-4d9b-b079-f1feda5ca408"}
2025-02-19T18:45:00.723Z: {"intent":"lint_errors"}
2025-02-19T18:45:00.769Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":1,"column":21},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":51,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"lint_errors"},"clientTime":1739990700767,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":50.800048828125,"timeAtRequestSend":1739990700767},"generateUuid":"5e3002d5-ee63-49a6-a753-051d63de26ff"}
2025-02-19T18:45:01.366Z: {"firstChunkValue":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"绿灯\");","generationUUID":"5e3002d5-ee63-49a6-a753-051d63de26ff"}
2025-02-19T18:45:01.438Z: {"fusedCursorPrediction":null,"generationUUID":"5e3002d5-ee63-49a6-a753-051d63de26ff"}
2025-02-19T18:45:04.656Z: {"intent":"typing"}
2025-02-19T18:45:04.697Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.) {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":1,"column":29},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":52,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990704695,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":50.800048828125,"timeAtRequestSend":1739990704695},"generateUuid":"9cb59829-54c7-47a6-91e4-18199ac95f69"}
2025-02-19T18:45:05.313Z: {"intent":"typing"}
2025-02-19T18:45:05.355Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.R) {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Identifier expected.","range":{"startPosition":{"line":2,"column":30},"endPosition":{"line":2,"column":31}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.R) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":1,"column":30},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":53,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990705352,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":50.800048828125,"timeAtRequestSend":1739990705352},"generateUuid":"89dfae18-8fe7-4455-a039-097787b1b0f8"}
2025-02-19T18:45:05.379Z: {"firstChunkValue":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"绿灯\");","generationUUID":"9cb59829-54c7-47a6-91e4-18199ac95f69"}
2025-02-19T18:45:05.543Z: {"fusedCursorPrediction":null,"generationUUID":"9cb59829-54c7-47a6-91e4-18199ac95f69"}
2025-02-19T18:45:05.868Z: {"intent":"typing"}
2025-02-19T18:45:05.912Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Re) {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Re) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":1,"column":31},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":54,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990705910,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":51.89990234375,"timeAtRequestSend":1739990705910},"generateUuid":"ad2139e2-41dc-45c8-b74c-42ec99576c8a"}
2025-02-19T18:45:06.079Z: {"firstChunkValue":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"绿灯\");","generationUUID":"89dfae18-8fe7-4455-a039-097787b1b0f8"}
2025-02-19T18:45:06.106Z: {"intent":"typing"}
2025-02-19T18:45:06.146Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":1,"column":32},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":55,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990706144,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":53.5,"timeAtRequestSend":1739990706144},"generateUuid":"1d48aa70-9677-488f-bfc7-37c97c6ba41e"}
2025-02-19T18:45:06.203Z: {"fusedCursorPrediction":null,"generationUUID":"89dfae18-8fe7-4455-a039-097787b1b0f8"}
2025-02-19T18:45:06.697Z: {"firstChunkValue":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");","generationUUID":"ad2139e2-41dc-45c8-b74c-42ec99576c8a"}
2025-02-19T18:45:06.701Z: {"fusedCursorPrediction":null,"generationUUID":"ad2139e2-41dc-45c8-b74c-42ec99576c8a"}
2025-02-19T18:45:06.815Z: {"firstChunkValue":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");","generationUUID":"1d48aa70-9677-488f-bfc7-37c97c6ba41e"}
2025-02-19T18:45:06.919Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":6,"text":"} else if (light === TrafficLight.YELLOW) {\nconsole.log(\"黄灯\");\n}\n}\n","shouldRetriggerCpp":true},"generationUUID":"1d48aa70-9677-488f-bfc7-37c97c6ba41e"}
2025-02-19T18:45:07.458Z: {"intent":"cursor_prediction"}
2025-02-19T18:45:07.463Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":5,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":56,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"cursor_prediction"},"clientTime":1739990707461,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":4.800048828125,"timeAtRequestSend":1739990707461},"generateUuid":"a6c18966-3ce1-4c60-ac53-4003ec615212"}
2025-02-19T18:45:08.079Z: {"firstChunkValue":"    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}","generationUUID":"a6c18966-3ce1-4c60-ac53-4003ec615212"}
2025-02-19T18:45:08.106Z: {"fusedCursorPrediction":null,"generationUUID":"a6c18966-3ce1-4c60-ac53-4003ec615212"}
2025-02-19T18:45:09.094Z: {"intent":"lint_errors"}
2025-02-19T18:45:09.095Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":5,"column":2},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":57,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"lint_errors"},"clientTime":1739990709093,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":0.800048828125,"timeAtRequestSend":1739990709093},"generateUuid":"f9a89979-3816-4808-9331-42b69f042948"}
2025-02-19T18:45:09.679Z: {"firstChunkValue":"    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}","generationUUID":"f9a89979-3816-4808-9331-42b69f042948"}
2025-02-19T18:45:09.685Z: {"fusedCursorPrediction":null,"generationUUID":"f9a89979-3816-4808-9331-42b69f042948"}
2025-02-19T18:45:09.915Z: {"intent":"lint_errors"}
2025-02-19T18:45:09.924Z: {"intent":"typing"}
2025-02-19T18:45:09.966Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|    } else if (light === TrafficLight.Yellow) {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n    } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":5,"column":4},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":58,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"lint_errors"},"clientTime":1739990709963,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":51.10009765625,"timeAtRequestSend":1739990709964},"generateUuid":"dbe6e45a-8dff-496b-bdfc-5acfddccf3e0"}
2025-02-19T18:45:10.656Z: {"firstChunkValue":"    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}","generationUUID":"dbe6e45a-8dff-496b-bdfc-5acfddccf3e0"}
2025-02-19T18:45:10.661Z: {"fusedCursorPrediction":null,"generationUUID":"dbe6e45a-8dff-496b-bdfc-5acfddccf3e0"}
2025-02-19T18:45:10.669Z: {"intent":"typing"}
2025-02-19T18:45:10.713Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":26},"endPosition":{"line":6,"column":38}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":5,"column":2},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":59,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"typing"},"clientTime":1739990710710,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":51.300048828125,"timeAtRequestSend":1739990710710},"generateUuid":"a9426ab7-ccad-4d24-83e2-76cee11aaf17"}
2025-02-19T18:45:11.435Z: {"firstChunkValue":"    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}","generationUUID":"a9426ab7-ccad-4d24-83e2-76cee11aaf17"}
2025-02-19T18:45:11.471Z: {"fusedCursorPrediction":null,"generationUUID":"a9426ab7-ccad-4d24-83e2-76cee11aaf17"}
2025-02-19T18:45:11.867Z: {"intent":"lint_errors"}
2025-02-19T18:45:11.915Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":6,"column":1},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":59,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"lint_errors"},"clientTime":1739990711911,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":52.199951171875,"timeAtRequestSend":1739990711911},"generateUuid":"40576d8d-73e4-4051-8166-7058ca82562e"}
2025-02-19T18:45:12.012Z: {"intent":"line_change"}
2025-02-19T18:45:12.058Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":7,"column":1},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":59,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"line_change"},"clientTime":1739990712055,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":51.2998046875,"timeAtRequestSend":1739990712055},"generateUuid":"b0a3ce3d-72dd-47bc-8041-16d24aaa329e"}
2025-02-19T18:45:12.144Z: {"intent":"line_change"}
2025-02-19T18:45:12.193Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":8,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":59,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"line_change"},"clientTime":1739990712190,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":52,"timeAtRequestSend":1739990712190},"generateUuid":"4e9c6e11-0a4a-475d-9c2a-977b60e4070f"}
2025-02-19T18:45:12.282Z: {"intent":"lint_errors"}
2025-02-19T18:45:12.331Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":9,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":59,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"lint_errors"},"clientTime":1739990712329,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":50.699951171875,"timeAtRequestSend":1739990712329},"generateUuid":"d460027d-4a6e-47f9-a4ca-70314b91c9e7"}
2025-02-19T18:45:12.473Z: {"intent":"lint_errors"}
2025-02-19T18:45:12.521Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":10,"column":1},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":59,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"lint_errors"},"clientTime":1739990712518,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":50.5,"timeAtRequestSend":1739990712518},"generateUuid":"75eb5019-50a1-4bf4-a442-0428e4075fa7"}
2025-02-19T18:45:12.532Z: {"firstChunkValue":"  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n","generationUUID":"40576d8d-73e4-4051-8166-7058ca82562e"}
2025-02-19T18:45:12.639Z: {"fusedCursorPrediction":null,"generationUUID":"40576d8d-73e4-4051-8166-7058ca82562e"}
2025-02-19T18:45:12.644Z: {"firstChunkValue":"  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n","generationUUID":"b0a3ce3d-72dd-47bc-8041-16d24aaa329e"}
2025-02-19T18:45:12.781Z: {"fusedCursorPrediction":null,"generationUUID":"b0a3ce3d-72dd-47bc-8041-16d24aaa329e"}
2025-02-19T18:45:12.894Z: {"firstChunkValue":"  }\n}\n\nconsole.log(changeLight(TrafficLight.Red));\nconsole.log(changeLight(TrafficLight.Green));\nconsole.log(changeLight(TrafficLight.Yellow));\n","generationUUID":"4e9c6e11-0a4a-475d-9c2a-977b60e4070f"}
2025-02-19T18:45:13.035Z: {"firstChunkValue":"}\n\nconsole.log(changeLight(TrafficLight.Red));\nconsole.log(changeLight(TrafficLight.Green));\nconsole.log(changeLight(TrafficLight.Yellow));\n","generationUUID":"d460027d-4a6e-47f9-a4ca-70314b91c9e7"}
2025-02-19T18:45:13.075Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":1,"text":"function changeLight(light: TrafficLight) {\nif (light === TrafficLight.Red) {\nconsole.log(\"红灯\");\n} else if (light === TrafficLight.Green) {\nconsole.log(\"绿灯\");","shouldRetriggerCpp":true},"generationUUID":"4e9c6e11-0a4a-475d-9c2a-977b60e4070f"}
2025-02-19T18:45:13.221Z: {"firstChunkValue":"\nconsole.log(changeLight(\"red\"));\nconsole.log(changeLight(\"green\"));\nconsole.log(changeLight(\"yellow\"));\n","generationUUID":"75eb5019-50a1-4bf4-a442-0428e4075fa7"}
2025-02-19T18:45:13.232Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":1,"text":"function changeLight(light: TrafficLight) {\nif (light === TrafficLight.Red) {\nconsole.log(\"红灯\");\n} else if (light === TrafficLight.Green) {\nconsole.log(\"绿灯\");","shouldRetriggerCpp":true},"generationUUID":"d460027d-4a6e-47f9-a4ca-70314b91c9e7"}
2025-02-19T18:45:13.407Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":1,"text":"function changeLight(light: TrafficLight) {\nif (light === TrafficLight.Red) {\nconsole.log(\"红灯\");\n} else if (light === TrafficLight.Green) {\nconsole.log(\"绿灯\");","shouldRetriggerCpp":true},"generationUUID":"75eb5019-50a1-4bf4-a442-0428e4075fa7"}
2025-02-19T18:45:13.655Z: {"intent":"cursor_prediction"}
2025-02-19T18:45:13.667Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"function changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.Red));\nconsole.log(changeLight(TrafficLight.Green));\nconsole.log(changeLight(TrafficLight.Yellow));\n","cursorPosition":{"line":0,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":60,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"cursor_prediction"},"clientTime":1739990713662,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":8.199951171875,"timeAtRequestSend":1739990713662},"generateUuid":"a98edb48-fc21-4bb5-968b-d61ef0952806"}
2025-02-19T18:45:14.654Z: {"firstChunkValue":"enum TrafficLight {\n  Red = \"red\",\n  Green = \"green\",\n  Yellow = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {","generationUUID":"a98edb48-fc21-4bb5-968b-d61ef0952806"}
2025-02-19T18:45:14.655Z: {"fusedCursorPrediction":null,"generationUUID":"a98edb48-fc21-4bb5-968b-d61ef0952806"}
2025-02-19T18:45:15.446Z: {"intent":"lint_errors"}
2025-02-19T18:45:15.448Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":1,"column":29},"endPosition":{"line":1,"column":41}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":2,"column":17},"endPosition":{"line":2,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":4,"column":24},"endPosition":{"line":4,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":11,"column":25},"endPosition":{"line":11,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":12,"column":25},"endPosition":{"line":12,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Cannot find name 'TrafficLight'.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"enum TrafficLight {\n  Red = \"red\",\n  Green = \"green\",\n  Yellow = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.Red));\nconsole.log(changeLight(TrafficLight.Green));\nconsole.log(changeLight(TrafficLight.Yellow));\n","cursorPosition":{"line":6,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":61,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"lint_errors"},"clientTime":1739990715445,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":0.800048828125,"timeAtRequestSend":1739990715445},"generateUuid":"c2332c38-ed33-4db5-b367-03a136a2459a"}
2025-02-19T18:45:16.092Z: {"firstChunkValue":"\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {","generationUUID":"c2332c38-ed33-4db5-b367-03a136a2459a"}
2025-02-19T18:45:16.117Z: {"fusedCursorPrediction":null,"generationUUID":"c2332c38-ed33-4db5-b367-03a136a2459a"}
2025-02-19T18:45:18.866Z: {"intent":"line_change"}
2025-02-19T18:45:18.911Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"enum TrafficLight {\n  Red = \"red\",\n  Green = \"green\",\n  Yellow = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.Red));\nconsole.log(changeLight(TrafficLight.Green));\nconsole.log(changeLight(TrafficLight.Yellow));\n","cursorPosition":{"line":5,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":61,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"line_change"},"clientTime":1739990718909,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":50.89990234375,"timeAtRequestSend":1739990718909},"generateUuid":"32582b80-a107-4f3f-982b-891dcbf31a21"}
2025-02-19T18:45:19.007Z: {"intent":"line_change"}
2025-02-19T18:45:19.056Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"enum TrafficLight {\n  Red = \"red\",\n  Green = \"green\",\n  Yellow = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.Red));\nconsole.log(changeLight(TrafficLight.Green));\nconsole.log(changeLight(TrafficLight.Yellow));\n","cursorPosition":{"line":4,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":61,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"line_change"},"clientTime":1739990719053,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":51.5,"timeAtRequestSend":1739990719053},"generateUuid":"0feb048e-bc10-499f-b8d4-7918b648b229"}
2025-02-19T18:45:19.124Z: {"intent":"line_change"}
2025-02-19T18:45:19.171Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"enum TrafficLight {\n  Red = \"red\",\n  Green = \"green\",\n  Yellow = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.Red));\nconsole.log(changeLight(TrafficLight.Green));\nconsole.log(changeLight(TrafficLight.Yellow));\n","cursorPosition":{"line":3,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":61,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"line_change"},"clientTime":1739990719168,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":51.5,"timeAtRequestSend":1739990719168},"generateUuid":"89264645-faa8-462e-9c3d-c61303f11c2a"}
2025-02-19T18:45:19.270Z: {"intent":"line_change"}
2025-02-19T18:45:19.314Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"enum TrafficLight {\n  Red = \"red\",\n  Green = \"green\",\n  Yellow = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.Red));\nconsole.log(changeLight(TrafficLight.Green));\nconsole.log(changeLight(TrafficLight.Yellow));\n","cursorPosition":{"line":2,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":61,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"line_change"},"clientTime":1739990719312,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":51.60009765625,"timeAtRequestSend":1739990719312},"generateUuid":"31cb6b1b-e7f1-499f-80a3-a719ead82b41"}
2025-02-19T18:45:19.485Z: {"intent":"line_change"}
2025-02-19T18:45:19.502Z: {"firstChunkValue":"}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");","generationUUID":"32582b80-a107-4f3f-982b-891dcbf31a21"}
2025-02-19T18:45:19.529Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"enum TrafficLight {\n  Red = \"red\",\n  Green = \"green\",\n  Yellow = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.Red));\nconsole.log(changeLight(TrafficLight.Green));\nconsole.log(changeLight(TrafficLight.Yellow));\n","cursorPosition":{"line":1,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":61,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"line_change"},"clientTime":1739990719527,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":50.5,"timeAtRequestSend":1739990719527},"generateUuid":"213d858a-fe67-40bc-98c7-07447f69d8de"}
2025-02-19T18:45:19.530Z: {"fusedCursorPrediction":null,"generationUUID":"32582b80-a107-4f3f-982b-891dcbf31a21"}
2025-02-19T18:45:19.676Z: {"firstChunkValue":"  Yellow = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {","generationUUID":"0feb048e-bc10-499f-b8d4-7918b648b229"}
2025-02-19T18:45:19.710Z: {"fusedCursorPrediction":null,"generationUUID":"0feb048e-bc10-499f-b8d4-7918b648b229"}
2025-02-19T18:45:19.812Z: {"firstChunkValue":"enum TrafficLight {\n  Red = \"red\",\n  Green = \"green\",\n  Yellow = \"yellow\"\n}\n","generationUUID":"89264645-faa8-462e-9c3d-c61303f11c2a"}
2025-02-19T18:45:19.864Z: {"fusedCursorPrediction":null,"generationUUID":"89264645-faa8-462e-9c3d-c61303f11c2a"}
2025-02-19T18:45:20.041Z: {"firstChunkValue":"enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n","generationUUID":"31cb6b1b-e7f1-499f-80a3-a719ead82b41"}
2025-02-19T18:45:20.258Z: {"fusedCursorPrediction":null,"generationUUID":"31cb6b1b-e7f1-499f-80a3-a719ead82b41"}
2025-02-19T18:45:20.324Z: {"firstChunkValue":"enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}","generationUUID":"213d858a-fe67-40bc-98c7-07447f69d8de"}
2025-02-19T18:45:20.696Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":8,"text":"if (light === TrafficLight.Red) {\nconsole.log(\"红灯\");\n} else if (light === TrafficLight.Green) {\nconsole.log(\"绿灯\");\n} else if (light === TrafficLight.Yellow) {","shouldRetriggerCpp":true},"generationUUID":"213d858a-fe67-40bc-98c7-07447f69d8de"}
2025-02-19T18:45:26.701Z: {"intent":"line_change"}
2025-02-19T18:45:26.743Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","2-|  Red = \"red\",\n3-|  GreenREEN = \"green\",\n2+|  RedED = \"red\",\n3+|  GREEN = \"green\",\n","2-|  RedED = \"red\",\n2+|  RED = \"red\",\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":8,"column":30},"endPosition":{"line":8,"column":33}},"source":"ts","relatedInformation":[{"message":"'RED' is declared here.","range":{"startPosition":{"line":2,"column":3},"endPosition":{"line":2,"column":6}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":10,"column":37},"endPosition":{"line":10,"column":42}},"source":"ts","relatedInformation":[{"message":"'GREEN' is declared here.","range":{"startPosition":{"line":3,"column":3},"endPosition":{"line":3,"column":8}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":12,"column":37},"endPosition":{"line":12,"column":43}},"source":"ts","relatedInformation":[{"message":"'YELLOW' is declared here.","range":{"startPosition":{"line":4,"column":3},"endPosition":{"line":4,"column":9}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":17,"column":38},"endPosition":{"line":17,"column":41}},"source":"ts","relatedInformation":[{"message":"'RED' is declared here.","range":{"startPosition":{"line":2,"column":3},"endPosition":{"line":2,"column":6}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":18,"column":38},"endPosition":{"line":18,"column":43}},"source":"ts","relatedInformation":[{"message":"'GREEN' is declared here.","range":{"startPosition":{"line":3,"column":3},"endPosition":{"line":3,"column":8}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":19,"column":38},"endPosition":{"line":19,"column":44}},"source":"ts","relatedInformation":[{"message":"'YELLOW' is declared here.","range":{"startPosition":{"line":4,"column":3},"endPosition":{"line":4,"column":9}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.Red));\nconsole.log(changeLight(TrafficLight.Green));\nconsole.log(changeLight(TrafficLight.Yellow));\n","cursorPosition":{"line":2,"column":1},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":62,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"line_change"},"clientTime":1739990726741,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":51.5,"timeAtRequestSend":1739990726741},"generateUuid":"c0be2f86-3bc0-4680-873f-67d6bdd77dff"}
2025-02-19T18:45:26.866Z: {"intent":"line_change"}
2025-02-19T18:45:26.917Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","2-|  Red = \"red\",\n3-|  GreenREEN = \"green\",\n2+|  RedED = \"red\",\n3+|  GREEN = \"green\",\n","2-|  RedED = \"red\",\n2+|  RED = \"red\",\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":8,"column":30},"endPosition":{"line":8,"column":33}},"source":"ts","relatedInformation":[{"message":"'RED' is declared here.","range":{"startPosition":{"line":2,"column":3},"endPosition":{"line":2,"column":6}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":10,"column":37},"endPosition":{"line":10,"column":42}},"source":"ts","relatedInformation":[{"message":"'GREEN' is declared here.","range":{"startPosition":{"line":3,"column":3},"endPosition":{"line":3,"column":8}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":12,"column":37},"endPosition":{"line":12,"column":43}},"source":"ts","relatedInformation":[{"message":"'YELLOW' is declared here.","range":{"startPosition":{"line":4,"column":3},"endPosition":{"line":4,"column":9}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":17,"column":38},"endPosition":{"line":17,"column":41}},"source":"ts","relatedInformation":[{"message":"'RED' is declared here.","range":{"startPosition":{"line":2,"column":3},"endPosition":{"line":2,"column":6}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":18,"column":38},"endPosition":{"line":18,"column":43}},"source":"ts","relatedInformation":[{"message":"'GREEN' is declared here.","range":{"startPosition":{"line":3,"column":3},"endPosition":{"line":3,"column":8}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":19,"column":38},"endPosition":{"line":19,"column":44}},"source":"ts","relatedInformation":[{"message":"'YELLOW' is declared here.","range":{"startPosition":{"line":4,"column":3},"endPosition":{"line":4,"column":9}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.Red));\nconsole.log(changeLight(TrafficLight.Green));\nconsole.log(changeLight(TrafficLight.Yellow));\n","cursorPosition":{"line":3,"column":1},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":62,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"line_change"},"clientTime":1739990726913,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":50.7001953125,"timeAtRequestSend":1739990726913},"generateUuid":"3aa9aadc-258c-40fb-860e-0b7a2510bf98"}
2025-02-19T18:45:27.031Z: {"intent":"line_change"}
2025-02-19T18:45:27.080Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","2-|  Red = \"red\",\n3-|  GreenREEN = \"green\",\n2+|  RedED = \"red\",\n3+|  GREEN = \"green\",\n","2-|  RedED = \"red\",\n2+|  RED = \"red\",\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":8,"column":30},"endPosition":{"line":8,"column":33}},"source":"ts","relatedInformation":[{"message":"'RED' is declared here.","range":{"startPosition":{"line":2,"column":3},"endPosition":{"line":2,"column":6}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":10,"column":37},"endPosition":{"line":10,"column":42}},"source":"ts","relatedInformation":[{"message":"'GREEN' is declared here.","range":{"startPosition":{"line":3,"column":3},"endPosition":{"line":3,"column":8}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":12,"column":37},"endPosition":{"line":12,"column":43}},"source":"ts","relatedInformation":[{"message":"'YELLOW' is declared here.","range":{"startPosition":{"line":4,"column":3},"endPosition":{"line":4,"column":9}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":17,"column":38},"endPosition":{"line":17,"column":41}},"source":"ts","relatedInformation":[{"message":"'RED' is declared here.","range":{"startPosition":{"line":2,"column":3},"endPosition":{"line":2,"column":6}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":18,"column":38},"endPosition":{"line":18,"column":43}},"source":"ts","relatedInformation":[{"message":"'GREEN' is declared here.","range":{"startPosition":{"line":3,"column":3},"endPosition":{"line":3,"column":8}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":19,"column":38},"endPosition":{"line":19,"column":44}},"source":"ts","relatedInformation":[{"message":"'YELLOW' is declared here.","range":{"startPosition":{"line":4,"column":3},"endPosition":{"line":4,"column":9}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.Red));\nconsole.log(changeLight(TrafficLight.Green));\nconsole.log(changeLight(TrafficLight.Yellow));\n","cursorPosition":{"line":4,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":62,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"line_change"},"clientTime":1739990727078,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":51.300048828125,"timeAtRequestSend":1739990727078},"generateUuid":"f0cf5517-e551-459a-a711-b9786dde7384"}
2025-02-19T18:45:27.175Z: {"intent":"line_change"}
2025-02-19T18:45:27.225Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","2-|  Red = \"red\",\n3-|  GreenREEN = \"green\",\n2+|  RedED = \"red\",\n3+|  GREEN = \"green\",\n","2-|  RedED = \"red\",\n2+|  RED = \"red\",\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":8,"column":30},"endPosition":{"line":8,"column":33}},"source":"ts","relatedInformation":[{"message":"'RED' is declared here.","range":{"startPosition":{"line":2,"column":3},"endPosition":{"line":2,"column":6}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":10,"column":37},"endPosition":{"line":10,"column":42}},"source":"ts","relatedInformation":[{"message":"'GREEN' is declared here.","range":{"startPosition":{"line":3,"column":3},"endPosition":{"line":3,"column":8}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":12,"column":37},"endPosition":{"line":12,"column":43}},"source":"ts","relatedInformation":[{"message":"'YELLOW' is declared here.","range":{"startPosition":{"line":4,"column":3},"endPosition":{"line":4,"column":9}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":17,"column":38},"endPosition":{"line":17,"column":41}},"source":"ts","relatedInformation":[{"message":"'RED' is declared here.","range":{"startPosition":{"line":2,"column":3},"endPosition":{"line":2,"column":6}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":18,"column":38},"endPosition":{"line":18,"column":43}},"source":"ts","relatedInformation":[{"message":"'GREEN' is declared here.","range":{"startPosition":{"line":3,"column":3},"endPosition":{"line":3,"column":8}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":19,"column":38},"endPosition":{"line":19,"column":44}},"source":"ts","relatedInformation":[{"message":"'YELLOW' is declared here.","range":{"startPosition":{"line":4,"column":3},"endPosition":{"line":4,"column":9}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.Red));\nconsole.log(changeLight(TrafficLight.Green));\nconsole.log(changeLight(TrafficLight.Yellow));\n","cursorPosition":{"line":5,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":62,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"line_change"},"clientTime":1739990727223,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":52.900146484375,"timeAtRequestSend":1739990727223},"generateUuid":"4c95d4c9-3487-4a80-8e7b-a2a0f30297a4"}
2025-02-19T18:45:27.343Z: {"intent":"lint_errors"}
2025-02-19T18:45:27.356Z: {"firstChunkValue":"enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n","generationUUID":"c0be2f86-3bc0-4680-873f-67d6bdd77dff"}
2025-02-19T18:45:27.394Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","2-|  Red = \"red\",\n3-|  GreenREEN = \"green\",\n2+|  RedED = \"red\",\n3+|  GREEN = \"green\",\n","2-|  RedED = \"red\",\n2+|  RED = \"red\",\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":8,"column":30},"endPosition":{"line":8,"column":33}},"source":"ts","relatedInformation":[{"message":"'RED' is declared here.","range":{"startPosition":{"line":2,"column":3},"endPosition":{"line":2,"column":6}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":10,"column":37},"endPosition":{"line":10,"column":42}},"source":"ts","relatedInformation":[{"message":"'GREEN' is declared here.","range":{"startPosition":{"line":3,"column":3},"endPosition":{"line":3,"column":8}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":12,"column":37},"endPosition":{"line":12,"column":43}},"source":"ts","relatedInformation":[{"message":"'YELLOW' is declared here.","range":{"startPosition":{"line":4,"column":3},"endPosition":{"line":4,"column":9}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":17,"column":38},"endPosition":{"line":17,"column":41}},"source":"ts","relatedInformation":[{"message":"'RED' is declared here.","range":{"startPosition":{"line":2,"column":3},"endPosition":{"line":2,"column":6}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":18,"column":38},"endPosition":{"line":18,"column":43}},"source":"ts","relatedInformation":[{"message":"'GREEN' is declared here.","range":{"startPosition":{"line":3,"column":3},"endPosition":{"line":3,"column":8}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":19,"column":38},"endPosition":{"line":19,"column":44}},"source":"ts","relatedInformation":[{"message":"'YELLOW' is declared here.","range":{"startPosition":{"line":4,"column":3},"endPosition":{"line":4,"column":9}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.Red) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.Red));\nconsole.log(changeLight(TrafficLight.Green));\nconsole.log(changeLight(TrafficLight.Yellow));\n","cursorPosition":{"line":6,"column":1},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":62,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"lint_errors"},"clientTime":1739990727391,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":53.800048828125,"timeAtRequestSend":1739990727391},"generateUuid":"94ca66fc-6b6f-4311-967b-b14a068d48c0"}
2025-02-19T18:45:27.395Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":12,"text":"} else if (light === TrafficLight.Yellow) {\nconsole.log(\"黄灯\");\n}\n}\n","shouldRetriggerCpp":false},"generationUUID":"c0be2f86-3bc0-4680-873f-67d6bdd77dff"}
2025-02-19T18:45:27.497Z: {"firstChunkValue":"enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n","generationUUID":"3aa9aadc-258c-40fb-860e-0b7a2510bf98"}
2025-02-19T18:45:27.538Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":12,"text":"} else if (light === TrafficLight.Yellow) {\nconsole.log(\"黄灯\");\n}\n}\n","shouldRetriggerCpp":false},"generationUUID":"3aa9aadc-258c-40fb-860e-0b7a2510bf98"}
2025-02-19T18:45:27.692Z: {"firstChunkValue":"  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {","generationUUID":"f0cf5517-e551-459a-a711-b9786dde7384"}
2025-02-19T18:45:27.791Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":12,"text":"} else if (light === TrafficLight.Yellow) {\nconsole.log(\"黄灯\");\n}\n}\n","shouldRetriggerCpp":true},"generationUUID":"f0cf5517-e551-459a-a711-b9786dde7384"}
2025-02-19T18:45:27.863Z: {"firstChunkValue":"}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");","generationUUID":"4c95d4c9-3487-4a80-8e7b-a2a0f30297a4"}
2025-02-19T18:45:27.966Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":12,"text":"} else if (light === TrafficLight.Yellow) {\nconsole.log(\"黄灯\");\n}\n}\n","shouldRetriggerCpp":true},"generationUUID":"4c95d4c9-3487-4a80-8e7b-a2a0f30297a4"}
2025-02-19T18:45:28.091Z: {"firstChunkValue":"\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {","generationUUID":"94ca66fc-6b6f-4311-967b-b14a068d48c0"}
2025-02-19T18:45:28.226Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":12,"text":"} else if (light === TrafficLight.Yellow) {\nconsole.log(\"黄灯\");\n}\n}\n","shouldRetriggerCpp":true},"generationUUID":"94ca66fc-6b6f-4311-967b-b14a068d48c0"}
2025-02-19T18:45:29.853Z: {"intent":"cursor_prediction"}
2025-02-19T18:45:29.856Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","2-|  Red = \"red\",\n3-|  GreenREEN = \"green\",\n2+|  RedED = \"red\",\n3+|  GREEN = \"green\",\n","2-|  RedED = \"red\",\n2+|  RED = \"red\",\n","8-|  if (light === TrafficLight.Red) {\n8+|  if (light === TrafficLight.RED) {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":8,"column":30},"endPosition":{"line":8,"column":33}},"source":"ts","relatedInformation":[{"message":"'RED' is declared here.","range":{"startPosition":{"line":2,"column":3},"endPosition":{"line":2,"column":6}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":10,"column":37},"endPosition":{"line":10,"column":42}},"source":"ts","relatedInformation":[{"message":"'GREEN' is declared here.","range":{"startPosition":{"line":3,"column":3},"endPosition":{"line":3,"column":8}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":12,"column":37},"endPosition":{"line":12,"column":43}},"source":"ts","relatedInformation":[{"message":"'YELLOW' is declared here.","range":{"startPosition":{"line":4,"column":3},"endPosition":{"line":4,"column":9}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":17,"column":38},"endPosition":{"line":17,"column":41}},"source":"ts","relatedInformation":[{"message":"'RED' is declared here.","range":{"startPosition":{"line":2,"column":3},"endPosition":{"line":2,"column":6}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":18,"column":38},"endPosition":{"line":18,"column":43}},"source":"ts","relatedInformation":[{"message":"'GREEN' is declared here.","range":{"startPosition":{"line":3,"column":3},"endPosition":{"line":3,"column":8}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":19,"column":38},"endPosition":{"line":19,"column":44}},"source":"ts","relatedInformation":[{"message":"'YELLOW' is declared here.","range":{"startPosition":{"line":4,"column":3},"endPosition":{"line":4,"column":9}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.Yellow) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.Red));\nconsole.log(changeLight(TrafficLight.Green));\nconsole.log(changeLight(TrafficLight.Yellow));\n","cursorPosition":{"line":11,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":63,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"cursor_prediction"},"clientTime":1739990729854,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":2.5,"timeAtRequestSend":1739990729854},"generateUuid":"d31c9ab6-b1e6-41ff-a552-23ed86306951"}
2025-02-19T18:45:30.603Z: {"firstChunkValue":"    console.log(\"绿灯\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"黄灯\");\n  }\n}","generationUUID":"d31c9ab6-b1e6-41ff-a552-23ed86306951"}
2025-02-19T18:45:30.894Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":10,"text":"} else if (light === TrafficLight.Green) {\nconsole.log(\"绿灯\");\n} else if (light === TrafficLight.YELLOW) {\nconsole.log(\"黄灯\");\n}","shouldRetriggerCpp":true},"generationUUID":"d31c9ab6-b1e6-41ff-a552-23ed86306951"}
2025-02-19T18:45:32.440Z: {"intent":"cursor_prediction"}
2025-02-19T18:45:32.442Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","2-|  Red = \"red\",\n3-|  GreenREEN = \"green\",\n2+|  RedED = \"red\",\n3+|  GREEN = \"green\",\n","2-|  RedED = \"red\",\n2+|  RED = \"red\",\n","8-|  if (light === TrafficLight.Red) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":10,"column":37},"endPosition":{"line":10,"column":42}},"source":"ts","relatedInformation":[{"message":"'GREEN' is declared here.","range":{"startPosition":{"line":3,"column":3},"endPosition":{"line":3,"column":8}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":12,"column":37},"endPosition":{"line":12,"column":43}},"source":"ts","relatedInformation":[{"message":"'YELLOW' is declared here.","range":{"startPosition":{"line":4,"column":3},"endPosition":{"line":4,"column":9}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":17,"column":38},"endPosition":{"line":17,"column":41}},"source":"ts","relatedInformation":[{"message":"'RED' is declared here.","range":{"startPosition":{"line":2,"column":3},"endPosition":{"line":2,"column":6}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":18,"column":38},"endPosition":{"line":18,"column":43}},"source":"ts","relatedInformation":[{"message":"'GREEN' is declared here.","range":{"startPosition":{"line":3,"column":3},"endPosition":{"line":3,"column":8}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":19,"column":38},"endPosition":{"line":19,"column":44}},"source":"ts","relatedInformation":[{"message":"'YELLOW' is declared here.","range":{"startPosition":{"line":4,"column":3},"endPosition":{"line":4,"column":9}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":8,"column":30},"endPosition":{"line":8,"column":33}},"source":"","relatedInformation":[{"message":"'RED' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.Green) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.Red));\nconsole.log(changeLight(TrafficLight.Green));\nconsole.log(changeLight(TrafficLight.Yellow));\n","cursorPosition":{"line":9,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":64,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"cursor_prediction"},"clientTime":1739990732440,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":1.2998046875,"timeAtRequestSend":1739990732440},"generateUuid":"f29c6475-96eb-4ce5-99aa-f800a61e844c"}
2025-02-19T18:45:33.161Z: {"firstChunkValue":"  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"黄灯\");\n  }","generationUUID":"f29c6475-96eb-4ce5-99aa-f800a61e844c"}
2025-02-19T18:45:33.220Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":19,"text":"console.log(changeLight(TrafficLight.Yellow));\n","shouldRetriggerCpp":true},"generationUUID":"f29c6475-96eb-4ce5-99aa-f800a61e844c"}
2025-02-19T18:45:33.963Z: {"intent":"cursor_prediction"}
2025-02-19T18:45:33.968Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","2-|  Red = \"red\",\n3-|  GreenREEN = \"green\",\n2+|  RedED = \"red\",\n3+|  GREEN = \"green\",\n","2-|  RedED = \"red\",\n2+|  RED = \"red\",\n","8-|  if (light === TrafficLight.Red) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","10-|  } else if (light === TrafficLight.Green) {\n10+|  } else if (light === TrafficLight.GREEN) {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":10,"column":37},"endPosition":{"line":10,"column":42}},"source":"ts","relatedInformation":[{"message":"'GREEN' is declared here.","range":{"startPosition":{"line":3,"column":3},"endPosition":{"line":3,"column":8}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":17,"column":38},"endPosition":{"line":17,"column":41}},"source":"ts","relatedInformation":[{"message":"'RED' is declared here.","range":{"startPosition":{"line":2,"column":3},"endPosition":{"line":2,"column":6}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":18,"column":38},"endPosition":{"line":18,"column":43}},"source":"ts","relatedInformation":[{"message":"'GREEN' is declared here.","range":{"startPosition":{"line":3,"column":3},"endPosition":{"line":3,"column":8}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":19,"column":38},"endPosition":{"line":19,"column":44}},"source":"ts","relatedInformation":[{"message":"'YELLOW' is declared here.","range":{"startPosition":{"line":4,"column":3},"endPosition":{"line":4,"column":9}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":8,"column":30},"endPosition":{"line":8,"column":33}},"source":"","relatedInformation":[{"message":"'RED' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":12,"column":37},"endPosition":{"line":12,"column":43}},"source":"","relatedInformation":[{"message":"'YELLOW' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.Red));\nconsole.log(changeLight(TrafficLight.Green));\nconsole.log(changeLight(TrafficLight.Yellow));\n","cursorPosition":{"line":18,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":65,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"cursor_prediction"},"clientTime":1739990733966,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":6.10009765625,"timeAtRequestSend":1739990733966},"generateUuid":"da14d1c3-a44b-4a12-a841-0f1be0aa257a"}
2025-02-19T18:45:34.887Z: {"firstChunkValue":"\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","generationUUID":"da14d1c3-a44b-4a12-a841-0f1be0aa257a"}
2025-02-19T18:45:35.119Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":1,"text":"enum TrafficLight {\nRED = \"red\",\nGREEN = \"green\",\nYELLOW = \"yellow\"\n}","shouldRetriggerCpp":true},"generationUUID":"da14d1c3-a44b-4a12-a841-0f1be0aa257a"}
2025-02-19T18:45:35.434Z: {"intent":"cursor_prediction"}
2025-02-19T18:45:35.442Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","2-|  Red = \"red\",\n3-|  GreenREEN = \"green\",\n2+|  RedED = \"red\",\n3+|  GREEN = \"green\",\n","2-|  RedED = \"red\",\n2+|  RED = \"red\",\n","8-|  if (light === TrafficLight.Red) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","10-|  } else if (light === TrafficLight.Green) {\n10+|  } else if (light === TrafficLight.GREEN) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":17,"column":38},"endPosition":{"line":17,"column":41}},"source":"ts","relatedInformation":[{"message":"'RED' is declared here.","range":{"startPosition":{"line":2,"column":3},"endPosition":{"line":2,"column":6}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":18,"column":38},"endPosition":{"line":18,"column":43}},"source":"ts","relatedInformation":[{"message":"'GREEN' is declared here.","range":{"startPosition":{"line":3,"column":3},"endPosition":{"line":3,"column":8}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":19,"column":38},"endPosition":{"line":19,"column":44}},"source":"ts","relatedInformation":[{"message":"'YELLOW' is declared here.","range":{"startPosition":{"line":4,"column":3},"endPosition":{"line":4,"column":9}}}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":8,"column":30},"endPosition":{"line":8,"column":33}},"source":"","relatedInformation":[{"message":"'RED' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":10,"column":37},"endPosition":{"line":10,"column":42}},"source":"","relatedInformation":[{"message":"'GREEN' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":12,"column":37},"endPosition":{"line":12,"column":43}},"source":"","relatedInformation":[{"message":"'YELLOW' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":0,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":66,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"cursor_prediction"},"clientTime":1739990735438,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":5.7001953125,"timeAtRequestSend":1739990735438},"generateUuid":"ee443f6e-b82e-4563-a254-0701349445fc"}
2025-02-19T18:45:36.143Z: {"firstChunkValue":"type TrafficLight = \"red\" | \"green\" | \"yellow\"","generationUUID":"ee443f6e-b82e-4563-a254-0701349445fc"}
2025-02-19T18:45:36.492Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":7,"text":"function changeLight(light: TrafficLight) {\nif (light === TrafficLight.RED) {\nconsole.log(\"红灯\");\n} else if (light === TrafficLight.GREEN) {\nconsole.log(\"绿灯\");","shouldRetriggerCpp":false},"generationUUID":"ee443f6e-b82e-4563-a254-0701349445fc"}
2025-02-19T18:45:44.736Z: {"intent":"cursor_prediction"}
2025-02-19T18:45:44.739Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","2-|  Red = \"red\",\n3-|  GreenREEN = \"green\",\n2+|  RedED = \"red\",\n3+|  GREEN = \"green\",\n","2-|  RedED = \"red\",\n2+|  RED = \"red\",\n","8-|  if (light === TrafficLight.Red) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","10-|  } else if (light === TrafficLight.Green) {\n10+|  } else if (light === TrafficLight.GREEN) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n5-|}\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"'TrafficLight' only refers to a type, but is being used as a value here.","range":{"startPosition":{"line":4,"column":17},"endPosition":{"line":4,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'TrafficLight' only refers to a type, but is being used as a value here.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'TrafficLight' only refers to a type, but is being used as a value here.","range":{"startPosition":{"line":8,"column":24},"endPosition":{"line":8,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'TrafficLight' only refers to a type, but is being used as a value here.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'TrafficLight' only refers to a type, but is being used as a value here.","range":{"startPosition":{"line":14,"column":25},"endPosition":{"line":14,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'TrafficLight' only refers to a type, but is being used as a value here.","range":{"startPosition":{"line":15,"column":25},"endPosition":{"line":15,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":8,"column":30},"endPosition":{"line":8,"column":33}},"source":"","relatedInformation":[{"message":"'RED' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":10,"column":37},"endPosition":{"line":10,"column":42}},"source":"","relatedInformation":[{"message":"'GREEN' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":12,"column":37},"endPosition":{"line":12,"column":43}},"source":"","relatedInformation":[{"message":"'YELLOW' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":17,"column":38},"endPosition":{"line":17,"column":41}},"source":"","relatedInformation":[{"message":"'RED' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":18,"column":38},"endPosition":{"line":18,"column":43}},"source":"","relatedInformation":[{"message":"'GREEN' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":19,"column":38},"endPosition":{"line":19,"column":44}},"source":"","relatedInformation":[{"message":"'YELLOW' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"type TrafficLight = \"red\" | \"green\" | \"yellow\"\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    console.log(\"红灯\");\n  } else if (light === TrafficLight.GREEN) {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":2,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":67,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"cursor_prediction"},"clientTime":1739990744735,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":2.699951171875,"timeAtRequestSend":1739990744735},"generateUuid":"06f9305c-4c8d-4c77-abba-417bf5b1cf80"}
2025-02-19T18:45:45.451Z: {"firstChunkValue":"\nfunction changeLight(light: TrafficLight) {\n  if (light === \"red\") {\n    console.log(\"红灯\");\n  } else if (light === \"green\") {","generationUUID":"06f9305c-4c8d-4c77-abba-417bf5b1cf80"}
2025-02-19T18:45:45.557Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":8,"text":"} else if (light === TrafficLight.YELLOW) {\nconsole.log(\"黄灯\");\n}\n}\n","shouldRetriggerCpp":true},"generationUUID":"06f9305c-4c8d-4c77-abba-417bf5b1cf80"}
2025-02-19T18:45:47.225Z: {"intent":"cursor_prediction"}
2025-02-19T18:45:47.233Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","2-|  Red = \"red\",\n3-|  GreenREEN = \"green\",\n2+|  RedED = \"red\",\n3+|  GREEN = \"green\",\n","2-|  RedED = \"red\",\n2+|  RED = \"red\",\n","8-|  if (light === TrafficLight.Red) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","10-|  } else if (light === TrafficLight.Green) {\n10+|  } else if (light === TrafficLight.GREEN) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n5-|}\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","6-|  } else if (light === TrafficLight.GREEN) {\n6+|  } else if (light === \"green\") {\n","4-|  if (light === TrafficLight.RED) {\n4+|  if (light === \"red\") {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"'TrafficLight' only refers to a type, but is being used as a value here.","range":{"startPosition":{"line":4,"column":17},"endPosition":{"line":4,"column":29}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'TrafficLight' only refers to a type, but is being used as a value here.","range":{"startPosition":{"line":6,"column":24},"endPosition":{"line":6,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'TrafficLight' only refers to a type, but is being used as a value here.","range":{"startPosition":{"line":8,"column":24},"endPosition":{"line":8,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'TrafficLight' only refers to a type, but is being used as a value here.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'TrafficLight' only refers to a type, but is being used as a value here.","range":{"startPosition":{"line":14,"column":25},"endPosition":{"line":14,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'TrafficLight' only refers to a type, but is being used as a value here.","range":{"startPosition":{"line":15,"column":25},"endPosition":{"line":15,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":8,"column":30},"endPosition":{"line":8,"column":33}},"source":"","relatedInformation":[{"message":"'RED' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":10,"column":37},"endPosition":{"line":10,"column":42}},"source":"","relatedInformation":[{"message":"'GREEN' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":12,"column":37},"endPosition":{"line":12,"column":43}},"source":"","relatedInformation":[{"message":"'YELLOW' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Red' does not exist on type 'typeof TrafficLight'. Did you mean 'RED'?","range":{"startPosition":{"line":17,"column":38},"endPosition":{"line":17,"column":41}},"source":"","relatedInformation":[{"message":"'RED' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Green' does not exist on type 'typeof TrafficLight'. Did you mean 'GREEN'?","range":{"startPosition":{"line":18,"column":38},"endPosition":{"line":18,"column":43}},"source":"","relatedInformation":[{"message":"'GREEN' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"Property 'Yellow' does not exist on type 'typeof TrafficLight'. Did you mean 'YELLOW'?","range":{"startPosition":{"line":19,"column":38},"endPosition":{"line":19,"column":44}},"source":"","relatedInformation":[{"message":"'YELLOW' is declared here."}],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"type TrafficLight = \"red\" | \"green\" | \"yellow\"\n\nfunction changeLight(light: TrafficLight) {\n  if (light === \"red\") {\n    console.log(\"红灯\");\n  } else if (light === \"green\") {\n    console.log(\"绿灯\");\n  } else if (light === TrafficLight.YELLOW) {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":7,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":68,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"cursor_prediction"},"clientTime":1739990747231,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":8.199951171875,"timeAtRequestSend":1739990747231},"generateUuid":"94e5f0f2-b416-41f6-8b55-07bafdacadaa"}
2025-02-19T18:45:47.908Z: {"firstChunkValue":"    console.log(\"绿灯\");\n  } else if (light === \"yellow\") {\n    console.log(\"黄灯\");\n  }\n}","generationUUID":"94e5f0f2-b416-41f6-8b55-07bafdacadaa"}
2025-02-19T18:45:47.981Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":15,"text":"console.log(changeLight(TrafficLight.YELLOW));\n","shouldRetriggerCpp":true},"generationUUID":"94e5f0f2-b416-41f6-8b55-07bafdacadaa"}
2025-02-19T18:45:48.907Z: {"intent":"cursor_prediction"}
2025-02-19T18:45:48.915Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","2-|  Red = \"red\",\n3-|  GreenREEN = \"green\",\n2+|  RedED = \"red\",\n3+|  GREEN = \"green\",\n","2-|  RedED = \"red\",\n2+|  RED = \"red\",\n","8-|  if (light === TrafficLight.Red) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","10-|  } else if (light === TrafficLight.Green) {\n10+|  } else if (light === TrafficLight.GREEN) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n5-|}\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","6-|  } else if (light === TrafficLight.GREEN) {\n6+|  } else if (light === \"green\") {\n","4-|  if (light === TrafficLight.RED) {\n4+|  if (light === \"red\") {\n","8-|  } else if (light === TrafficLight.YELLOW) {\n8+|  } else if (light === \"yellow\") {\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"linterErrors":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","errors":[{"message":"'TrafficLight' only refers to a type, but is being used as a value here.","range":{"startPosition":{"line":8,"column":24},"endPosition":{"line":8,"column":36}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'TrafficLight' only refers to a type, but is being used as a value here.","range":{"startPosition":{"line":13,"column":25},"endPosition":{"line":13,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'TrafficLight' only refers to a type, but is being used as a value here.","range":{"startPosition":{"line":14,"column":25},"endPosition":{"line":14,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"},{"message":"'TrafficLight' only refers to a type, but is being used as a value here.","range":{"startPosition":{"line":15,"column":25},"endPosition":{"line":15,"column":37}},"source":"ts","relatedInformation":[],"severity":"DIAGNOSTIC_SEVERITY_ERROR"}],"fileContents":""},"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"type TrafficLight = \"red\" | \"green\" | \"yellow\"\n\nfunction changeLight(light: TrafficLight) {\n  if (light === \"red\") {\n    console.log(\"红灯\");\n  } else if (light === \"green\") {\n    console.log(\"绿灯\");\n  } else if (light === \"yellow\") {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));\n","cursorPosition":{"line":14,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":69,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"cursor_prediction"},"clientTime":1739990748912,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":6.800048828125,"timeAtRequestSend":1739990748912},"generateUuid":"143751e0-3b09-4a41-bdd2-a82aa9549848"}
2025-02-19T18:45:49.631Z: {"firstChunkValue":"\nconsole.log(changeLight(\"red\"));\nconsole.log(changeLight(\"green\"));\nconsole.log(changeLight(\"yellow\"));\n","generationUUID":"143751e0-3b09-4a41-bdd2-a82aa9549848"}
2025-02-19T18:45:49.766Z: {"fusedCursorPrediction":{"relativePath":"src/component/Hello/test3-2.ts","lineNumberOneIndexed":1,"text":"type TrafficLight = \"red\" | \"green\" | \"yellow\"\n\nfunction changeLight(light: TrafficLight) {\nif (light === \"red\") {\nconsole.log(\"红灯\");","shouldRetriggerCpp":false},"generationUUID":"143751e0-3b09-4a41-bdd2-a82aa9549848"}
2025-02-19T18:45:51.824Z: {"intent":"cursor_prediction"}
2025-02-19T18:45:51.834Z: {"partialData":{"fileDiffHistories":[{"fileName":"src/component/Hello/test2-2.ts","diffHistory":["1-|function changeLightss\n1+|function changeLightss(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|} \n","7-|} \n7+|} \n8+|\n9+|console.log(changeLightss(\"red\"));\n10+|console.log(changeLightss(\"green\"));\n11+|console.log(changeLightss(\"yellow\"));\n","6+|  } else if (light === \"yellow\") {\n7+|    return \"red\";\n7-|} \n9+|}\n","13-|console.log(changeLightss(\"yellow\"));\n13+|console.log(changeLightss(\"yellow\"));\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-1.ts","diffHistory":["1+|function changeLight(light: string) {\n2+|  if (light === \"red\") {\n3+|    return \"green\";\n4+|  } else if (light === \"green\") {\n5+|    return \"yellow\";\n6+|  }\n7+|}\n","1-|function changeLight(light: string) {\n2-|  if (light === \"red\") {\n3-|    return \"green\";\n4-|  } else if (light === \"green\") {\n5-|    return \"yellow\";\n1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.Red) {\n3+|    return TrafficLight.Green;\n4+|  } else if (light === TrafficLight.Green) {\n5+|    return TrafficLight.Yellow;\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n2-|  if (light === TrafficLight.Red) {\n8+|    if (light === TrafficLight.Red) {\n","12+|  } else if (light === TrafficLight.Yellow) {\n13+|    return TrafficLight.Red;\n13-|}\n15+|}\n16+|\n17+|console.log(changeLight(TrafficLight.Red));\n18+|console.log(changeLight(TrafficLight.Green));\n19+|console.log(changeLight(TrafficLight.Yellow));\n","2-|  Red = \"red\",\n2+|  RED = \"red\",\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","3-|  GreenREEN = \"green\",\n3+|  GREEN = \"green\",\n","10-|  } else if (light === TrafficLight.Green) {\n11-|    return TrafficLight.Yellow;\n10+|  } else if (light === TrafficLight.GreenREEN) {\n11+|    return TrafficLight.YELLOW;\n","9-|    return TrafficLight.Green;\n10-|  } else if (light === TrafficLight.GreenREEN) {\n9+|    return TrafficLight.GreenREEN;\n10+|  } else if (light === TrafficLight.GREEN) {\n","8-|  if (light === TrafficLight.Red) {\n9-|    return TrafficLight.GreenREEN;\n8+|  if (light === TrafficLight.RedED) {\n9+|    return TrafficLight.GREEN;\n","8-|  if (light === TrafficLight.RedED) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n13-|    return TrafficLight.Red;\n12+|  } else if (light === TrafficLight.YellowELLOW) {\n13+|    return TrafficLight.RED;\n","12-|  } else if (light === TrafficLight.YellowELLOW) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n1+|tenum TrafficLight {\n","1-|tenum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n1+|type TrafficLight = \"red\" | \"green\",\n2+|  YELLOW = \"yellow\"\n","1-|type TrafficLight = \"red\" | \"green\",\n1+|type TrafficLight = \"red\",\n2+|  GREEN = \"green\",\n","1-|type TrafficLight = \"red\",\n1+|type TrafficLight {\n2+|  RED = \"red\",\n","1-|type TrafficLight {\n1+|enum TrafficLight {\n"],"diffHistoryTimestamps":[]},{"fileName":"src/component/Hello/test3-2.ts","diffHistory":["1+|function changeLight(light: TrafficLight) {\n2+|  if (light === TrafficLight.RED) {\n3+|    return TrafficLight.GREEN;\n4+|  }\n5+|}\n6+|\n","4+|  } else if (light === TrafficLight.GREEN) {\n5+|    return TrafficLight.YELLOW;\n6+|  } else if (light === TrafficLight.YELLOW) {\n7+|    return TrafficLight.RED;\n","11+|console.log(changeLight(TrafficLight.RED));\n12+|console.log(changeLight(TrafficLight.GREEN));\n13+|console.log(changeLight(TrafficLight.YELLOW));\n","3-|    return TrafficLight.GREEN;\n3+|    console.log(\"红灯\");\n","7-|    return TrafficLight.RED;\n7+|    console.log(\"黄灯\");\n","5-|    return TrafficLight.YELLOW;\n5+|    console.log(\"绿灯\");\n","2-|  if (light === TrafficLight.RED) {\n2+|  if (light === TrafficLight.Red) {\n","4-|  } else if (light === TrafficLight.GREEN) {\n4+|  } else if (light === TrafficLight.Green) {\n","6-|  } else if (light === TrafficLight.YELLOW) {\n6+|  } else if (light === TrafficLight.Yellow) {\n","12-|console.log(changeLight(TrafficLight.GREEN));\n13-|console.log(changeLight(TrafficLight.YELLOW));\n12+|console.log(changeLight(TrafficLight.GREENreen));\n13+|console.log(changeLight(TrafficLight.Yellow));\n","11-|console.log(changeLight(TrafficLight.RED));\n12-|console.log(changeLight(TrafficLight.GREENreen));\n11+|console.log(changeLight(TrafficLight.REDed));\n12+|console.log(changeLight(TrafficLight.Green));\n","11-|console.log(changeLight(TrafficLight.REDed));\n11+|console.log(changeLight(TrafficLight.Red));\n","1+|enum TrafficLight {\n2+|  Red = \"red\",\n3+|  Green = \"green\",\n4+|  Yellow = \"yellow\"\n5+|}\n6+|\n","3-|  Green = \"green\",\n4-|  Yellow = \"yellow\"\n3+|  GreenREEN = \"green\",\n4+|  YELLOW = \"yellow\"\n","2-|  Red = \"red\",\n3-|  GreenREEN = \"green\",\n2+|  RedED = \"red\",\n3+|  GREEN = \"green\",\n","2-|  RedED = \"red\",\n2+|  RED = \"red\",\n","8-|  if (light === TrafficLight.Red) {\n8+|  if (light === TrafficLight.RED) {\n","12-|  } else if (light === TrafficLight.Yellow) {\n12+|  } else if (light === TrafficLight.YELLOW) {\n","10-|  } else if (light === TrafficLight.Green) {\n10+|  } else if (light === TrafficLight.GREEN) {\n","18-|console.log(changeLight(TrafficLight.Green));\n19-|console.log(changeLight(TrafficLight.Yellow));\n18+|console.log(changeLight(TrafficLight.GreenREEN));\n19+|console.log(changeLight(TrafficLight.YELLOW));\n","17-|console.log(changeLight(TrafficLight.Red));\n18-|console.log(changeLight(TrafficLight.GreenREEN));\n17+|console.log(changeLight(TrafficLight.RedED));\n18+|console.log(changeLight(TrafficLight.GREEN));\n","17-|console.log(changeLight(TrafficLight.RedED));\n17+|console.log(changeLight(TrafficLight.RED));\n","1-|enum TrafficLight {\n2-|  RED = \"red\",\n3-|  GREEN = \"green\",\n4-|  YELLOW = \"yellow\"\n5-|}\n1+|type TrafficLight = \"red\" | \"green\" | \"yellow\"\n","6-|  } else if (light === TrafficLight.GREEN) {\n6+|  } else if (light === \"green\") {\n","4-|  if (light === TrafficLight.RED) {\n4+|  if (light === \"red\") {\n","8-|  } else if (light === TrafficLight.YELLOW) {\n8+|  } else if (light === \"yellow\") {\n","14-|console.log(changeLight(TrafficLight.GREEN));\n15-|console.log(changeLight(TrafficLight.YELLOW));\n14+|console.log(changeLight(TrafficLight.GREENreen\"));\n15+|console.log(changeLight(\"yellow\"));\n","13-|console.log(changeLight(TrafficLight.RED));\n14-|console.log(changeLight(TrafficLight.GREENreen\"));\n13+|console.log(changeLight(TrafficLight.REDed\"));\n14+|console.log(changeLight(\"green\"));\n","13-|console.log(changeLight(TrafficLight.REDed\"));\n13+|console.log(changeLight(\"red\"));\n"],"diffHistoryTimestamps":[]}],"diffHistory":[],"blockDiffPatches":[],"mergedDiffHistories":[],"currentFile":{"relativeWorkspacePath":"src/component/Hello/test3-2.ts","contents":"type TrafficLight = \"red\" | \"green\" | \"yellow\"\n\nfunction changeLight(light: TrafficLight) {\n  if (light === \"red\") {\n    console.log(\"红灯\");\n  } else if (light === \"green\") {\n    console.log(\"绿灯\");\n  } else if (light === \"yellow\") {\n    console.log(\"黄灯\");\n  }\n}\n\nconsole.log(changeLight(\"red\"));\nconsole.log(changeLight(\"green\"));\nconsole.log(changeLight(\"yellow\"));\n","cursorPosition":{"line":0,"column":0},"dataframes":[],"languageId":"","diagnostics":[],"totalNumberOfLines":0,"contentsStartAtLine":0,"topChunks":[],"fileVersion":70,"cellStartLines":[],"cells":[],"relyOnFilesync":false,"workspaceRootPath":"/Users/shinn/Documents/personal/vite-react-demo"},"additionalFiles":[{"relativeWorkspacePath":"src/component/Hello/test2-2.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":14}],"lastViewedAt":1739990360550},{"relativeWorkspacePath":"src/component/Hello/test4.ts","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":36}],"lastViewedAt":1739990385051},{"relativeWorkspacePath":"src/component/Hello/Hello.tsx","isOpen":false,"visibleRangeContent":[""],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":22}],"lastViewedAt":1739990387750},{"relativeWorkspacePath":"src/component/Hello/test3-1.ts","visibleRangeContent":["enum TrafficLight {\n  RED = \"red\",\n  GREEN = \"green\",\n  YELLOW = \"yellow\"\n}\n\nfunction changeLight(light: TrafficLight) {\n  if (light === TrafficLight.RED) {\n    return TrafficLight.GREEN;\n  } else if (light === TrafficLight.GREEN) {\n    return TrafficLight.YELLOW;\n  } else if (light === TrafficLight.YELLOW) {\n    return TrafficLight.RED;\n  }\n}\n\nconsole.log(changeLight(TrafficLight.RED));\nconsole.log(changeLight(TrafficLight.GREEN));\nconsole.log(changeLight(TrafficLight.YELLOW));"],"startLineNumberOneIndexed":[1],"visibleRanges":[{"startLineNumber":1,"endLineNumberInclusive":19}],"isOpen":true}],"cppIntentInfo":{"source":"cursor_prediction"},"clientTime":1739990751832,"clientTimezoneOffset":-480,"modelName":"fast","diffHistoryKeys":[],"contextItems":[],"parameterHints":[],"lspSuggestedItems":{"suggestions":[]},"lspContexts":[],"filesyncUpdates":[],"workspaceId":"tpzfpnjzlohpdx2rvo3h3n","timeSinceRequestStart":10.599853515625,"timeAtRequestSend":1739990751832},"generateUuid":"bde48bac-2675-43ec-81e2-2d06865374d4"}
2025-02-19T18:45:52.460Z: {"firstChunkValue":"type TrafficLight = \"red\" | \"green\" | \"yellow\"\n\nfunction changeLight(light: TrafficLight) {\n  if (light === \"red\") {","generationUUID":"bde48bac-2675-43ec-81e2-2d06865374d4"}
2025-02-19T18:45:52.612Z: {"fusedCursorPrediction":null,"generationUUID":"bde48bac-2675-43ec-81e2-2d06865374d4"}
